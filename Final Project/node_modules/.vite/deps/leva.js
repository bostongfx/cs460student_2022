import {
  require_prop_types
} from "./chunk-XXVZPMMW.js";
import {
  create
} from "./chunk-4RW577G6.js";
import {
  useDrag
} from "./chunk-QNN2W3GD.js";
import {
  require_react_dom
} from "./chunk-EYMKN2NX.js";
import "./chunk-HRZKQE35.js";
import {
  _extends
} from "./chunk-WFRNXIXL.js";
import {
  require_react
} from "./chunk-IXG3QTAX.js";
import {
  __commonJS,
  __toESM
} from "./chunk-J43GMYXM.js";

// node_modules/attr-accept/dist/es/index.js
var require_es = __commonJS({
  "node_modules/attr-accept/dist/es/index.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.default = function(file, acceptedFiles) {
      if (file && acceptedFiles) {
        var acceptedFilesArray = Array.isArray(acceptedFiles) ? acceptedFiles : acceptedFiles.split(",");
        var fileName = file.name || "";
        var mimeType = (file.type || "").toLowerCase();
        var baseMimeType = mimeType.replace(/\/.*$/, "");
        return acceptedFilesArray.some(function(type) {
          var validType = type.trim().toLowerCase();
          if (validType.charAt(0) === ".") {
            return fileName.toLowerCase().endsWith(validType);
          } else if (validType.endsWith("/*")) {
            return baseMimeType === validType.replace(/\/.*$/, "");
          }
          return mimeType === validType;
        });
      }
      return true;
    };
  }
});

// node_modules/isobject/index.js
var require_isobject = __commonJS({
  "node_modules/isobject/index.js"(exports, module) {
    "use strict";
    module.exports = function isObject(val) {
      return val != null && typeof val === "object" && Array.isArray(val) === false;
    };
  }
});

// node_modules/is-plain-object/index.js
var require_is_plain_object = __commonJS({
  "node_modules/is-plain-object/index.js"(exports, module) {
    "use strict";
    var isObject = require_isobject();
    function isObjectObject(o9) {
      return isObject(o9) === true && Object.prototype.toString.call(o9) === "[object Object]";
    }
    module.exports = function isPlainObject(o9) {
      var ctor, prot;
      if (isObjectObject(o9) === false)
        return false;
      ctor = o9.constructor;
      if (typeof ctor !== "function")
        return false;
      prot = ctor.prototype;
      if (isObjectObject(prot) === false)
        return false;
      if (prot.hasOwnProperty("isPrototypeOf") === false) {
        return false;
      }
      return true;
    };
  }
});

// node_modules/is-extendable/index.js
var require_is_extendable = __commonJS({
  "node_modules/is-extendable/index.js"(exports, module) {
    "use strict";
    var isPlainObject = require_is_plain_object();
    module.exports = function isExtendable(val) {
      return isPlainObject(val) || typeof val === "function" || Array.isArray(val);
    };
  }
});

// node_modules/for-in/index.js
var require_for_in = __commonJS({
  "node_modules/for-in/index.js"(exports, module) {
    "use strict";
    module.exports = function forIn(obj, fn, thisArg) {
      for (var key in obj) {
        if (fn.call(thisArg, obj[key], key, obj) === false) {
          break;
        }
      }
    };
  }
});

// node_modules/mixin-deep/index.js
var require_mixin_deep = __commonJS({
  "node_modules/mixin-deep/index.js"(exports, module) {
    "use strict";
    var isExtendable = require_is_extendable();
    var forIn = require_for_in();
    function mixinDeep(target, objects) {
      var len = arguments.length, i6 = 0;
      while (++i6 < len) {
        var obj = arguments[i6];
        if (isObject(obj)) {
          forIn(obj, copy, target);
        }
      }
      return target;
    }
    function copy(val, key) {
      if (!isValidKey(key)) {
        return;
      }
      var obj = this[key];
      if (isObject(val) && isObject(obj)) {
        mixinDeep(obj, val);
      } else {
        this[key] = val;
      }
    }
    function isObject(val) {
      return isExtendable(val) && !Array.isArray(val);
    }
    function isValidKey(key) {
      return key !== "__proto__" && key !== "constructor" && key !== "prototype";
    }
    module.exports = mixinDeep;
  }
});

// node_modules/get-value/index.js
var require_get_value = __commonJS({
  "node_modules/get-value/index.js"(exports, module) {
    module.exports = function(obj, prop, a5, b5, c6) {
      if (!isObject(obj) || !prop) {
        return obj;
      }
      prop = toString(prop);
      if (a5)
        prop += "." + toString(a5);
      if (b5)
        prop += "." + toString(b5);
      if (c6)
        prop += "." + toString(c6);
      if (prop in obj) {
        return obj[prop];
      }
      var segs = prop.split(".");
      var len = segs.length;
      var i6 = -1;
      while (obj && ++i6 < len) {
        var key = segs[i6];
        while (key[key.length - 1] === "\\") {
          key = key.slice(0, -1) + "." + segs[++i6];
        }
        obj = obj[key];
      }
      return obj;
    };
    function isObject(val) {
      return val !== null && (typeof val === "object" || typeof val === "function");
    }
    function toString(val) {
      if (!val)
        return "";
      if (Array.isArray(val)) {
        return val.join(".");
      }
      return val;
    }
  }
});

// node_modules/assign-symbols/index.js
var require_assign_symbols = __commonJS({
  "node_modules/assign-symbols/index.js"(exports, module) {
    "use strict";
    module.exports = function(receiver, objects) {
      if (receiver === null || typeof receiver === "undefined") {
        throw new TypeError("expected first argument to be an object.");
      }
      if (typeof objects === "undefined" || typeof Symbol === "undefined") {
        return receiver;
      }
      if (typeof Object.getOwnPropertySymbols !== "function") {
        return receiver;
      }
      var isEnumerable = Object.prototype.propertyIsEnumerable;
      var target = Object(receiver);
      var len = arguments.length, i6 = 0;
      while (++i6 < len) {
        var provider = Object(arguments[i6]);
        var names = Object.getOwnPropertySymbols(provider);
        for (var j3 = 0; j3 < names.length; j3++) {
          var key = names[j3];
          if (isEnumerable.call(provider, key)) {
            target[key] = provider[key];
          }
        }
      }
      return target;
    };
  }
});

// node_modules/split-string/node_modules/extend-shallow/index.js
var require_extend_shallow = __commonJS({
  "node_modules/split-string/node_modules/extend-shallow/index.js"(exports, module) {
    "use strict";
    var isExtendable = require_is_extendable();
    var assignSymbols = require_assign_symbols();
    module.exports = Object.assign || function(obj) {
      if (obj === null || typeof obj === "undefined") {
        throw new TypeError("Cannot convert undefined or null to object");
      }
      if (!isObject(obj)) {
        obj = {};
      }
      for (var i6 = 1; i6 < arguments.length; i6++) {
        var val = arguments[i6];
        if (isString(val)) {
          val = toObject(val);
        }
        if (isObject(val)) {
          assign(obj, val);
          assignSymbols(obj, val);
        }
      }
      return obj;
    };
    function assign(a5, b5) {
      for (var key in b5) {
        if (hasOwn(b5, key)) {
          a5[key] = b5[key];
        }
      }
    }
    function isString(val) {
      return val && typeof val === "string";
    }
    function toObject(str) {
      var obj = {};
      for (var i6 in str) {
        obj[i6] = str[i6];
      }
      return obj;
    }
    function isObject(val) {
      return val && typeof val === "object" || isExtendable(val);
    }
    function hasOwn(obj, key) {
      return Object.prototype.hasOwnProperty.call(obj, key);
    }
  }
});

// node_modules/split-string/index.js
var require_split_string = __commonJS({
  "node_modules/split-string/index.js"(exports, module) {
    "use strict";
    var extend = require_extend_shallow();
    module.exports = function(str, options, fn) {
      if (typeof str !== "string") {
        throw new TypeError("expected a string");
      }
      if (typeof options === "function") {
        fn = options;
        options = null;
      }
      if (typeof options === "string") {
        options = { sep: options };
      }
      var opts = extend({ sep: "." }, options);
      var quotes = opts.quotes || ['"', "'", "`"];
      var brackets;
      if (opts.brackets === true) {
        brackets = {
          "<": ">",
          "(": ")",
          "[": "]",
          "{": "}"
        };
      } else if (opts.brackets) {
        brackets = opts.brackets;
      }
      var tokens = [];
      var stack = [];
      var arr = [""];
      var sep = opts.sep;
      var len = str.length;
      var idx = -1;
      var closeIdx;
      function expected() {
        if (brackets && stack.length) {
          return brackets[stack[stack.length - 1]];
        }
      }
      while (++idx < len) {
        var ch = str[idx];
        var next = str[idx + 1];
        var tok = { val: ch, idx, arr, str };
        tokens.push(tok);
        if (ch === "\\") {
          tok.val = keepEscaping(opts, str, idx) === true ? ch + next : next;
          tok.escaped = true;
          if (typeof fn === "function") {
            fn(tok);
          }
          arr[arr.length - 1] += tok.val;
          idx++;
          continue;
        }
        if (brackets && brackets[ch]) {
          stack.push(ch);
          var e11 = expected();
          var i6 = idx + 1;
          if (str.indexOf(e11, i6 + 1) !== -1) {
            while (stack.length && i6 < len) {
              var s6 = str[++i6];
              if (s6 === "\\") {
                s6++;
                continue;
              }
              if (quotes.indexOf(s6) !== -1) {
                i6 = getClosingQuote(str, s6, i6 + 1);
                continue;
              }
              e11 = expected();
              if (stack.length && str.indexOf(e11, i6 + 1) === -1) {
                break;
              }
              if (brackets[s6]) {
                stack.push(s6);
                continue;
              }
              if (e11 === s6) {
                stack.pop();
              }
            }
          }
          closeIdx = i6;
          if (closeIdx === -1) {
            arr[arr.length - 1] += ch;
            continue;
          }
          ch = str.slice(idx, closeIdx + 1);
          tok.val = ch;
          tok.idx = idx = closeIdx;
        }
        if (quotes.indexOf(ch) !== -1) {
          closeIdx = getClosingQuote(str, ch, idx + 1);
          if (closeIdx === -1) {
            arr[arr.length - 1] += ch;
            continue;
          }
          if (keepQuotes(ch, opts) === true) {
            ch = str.slice(idx, closeIdx + 1);
          } else {
            ch = str.slice(idx + 1, closeIdx);
          }
          tok.val = ch;
          tok.idx = idx = closeIdx;
        }
        if (typeof fn === "function") {
          fn(tok, tokens);
          ch = tok.val;
          idx = tok.idx;
        }
        if (tok.val === sep && tok.split !== false) {
          arr.push("");
          continue;
        }
        arr[arr.length - 1] += tok.val;
      }
      return arr;
    };
    function getClosingQuote(str, ch, i6, brackets) {
      var idx = str.indexOf(ch, i6);
      if (str.charAt(idx - 1) === "\\") {
        return getClosingQuote(str, ch, idx + 1);
      }
      return idx;
    }
    function keepQuotes(ch, opts) {
      if (opts.keepDoubleQuotes === true && ch === '"')
        return true;
      if (opts.keepSingleQuotes === true && ch === "'")
        return true;
      return opts.keepQuotes;
    }
    function keepEscaping(opts, str, idx) {
      if (typeof opts.keepEscaping === "function") {
        return opts.keepEscaping(str, idx);
      }
      return opts.keepEscaping === true || str[idx + 1] === "\\";
    }
  }
});

// node_modules/extend-shallow/node_modules/is-extendable/index.js
var require_is_extendable2 = __commonJS({
  "node_modules/extend-shallow/node_modules/is-extendable/index.js"(exports, module) {
    "use strict";
    module.exports = function isExtendable(val) {
      return typeof val !== "undefined" && val !== null && (typeof val === "object" || typeof val === "function");
    };
  }
});

// node_modules/extend-shallow/index.js
var require_extend_shallow2 = __commonJS({
  "node_modules/extend-shallow/index.js"(exports, module) {
    "use strict";
    var isObject = require_is_extendable2();
    module.exports = function extend(o9) {
      if (!isObject(o9)) {
        o9 = {};
      }
      var len = arguments.length;
      for (var i6 = 1; i6 < len; i6++) {
        var obj = arguments[i6];
        if (isObject(obj)) {
          assign(o9, obj);
        }
      }
      return o9;
    };
    function assign(a5, b5) {
      for (var key in b5) {
        if (hasOwn(b5, key)) {
          a5[key] = b5[key];
        }
      }
    }
    function hasOwn(obj, key) {
      return Object.prototype.hasOwnProperty.call(obj, key);
    }
  }
});

// node_modules/set-value/node_modules/is-extendable/index.js
var require_is_extendable3 = __commonJS({
  "node_modules/set-value/node_modules/is-extendable/index.js"(exports, module) {
    "use strict";
    module.exports = function isExtendable(val) {
      return typeof val !== "undefined" && val !== null && (typeof val === "object" || typeof val === "function");
    };
  }
});

// node_modules/set-value/index.js
var require_set_value = __commonJS({
  "node_modules/set-value/index.js"(exports, module) {
    "use strict";
    var split2 = require_split_string();
    var extend = require_extend_shallow2();
    var isPlainObject = require_is_plain_object();
    var isObject = require_is_extendable3();
    module.exports = function(obj, prop, val) {
      if (!isObject(obj)) {
        return obj;
      }
      if (Array.isArray(prop)) {
        prop = [].concat.apply([], prop).join(".");
      }
      if (typeof prop !== "string") {
        return obj;
      }
      var keys = split2(prop, { sep: ".", brackets: true }).filter(isValidKey);
      var len = keys.length;
      var idx = -1;
      var current = obj;
      while (++idx < len) {
        var key = keys[idx];
        if (idx !== len - 1) {
          if (!isObject(current[key])) {
            current[key] = {};
          }
          current = current[key];
          continue;
        }
        if (isPlainObject(current[key]) && isPlainObject(val)) {
          current[key] = extend({}, current[key], val);
        } else {
          current[key] = val;
        }
      }
      return obj;
    };
    function isValidKey(key) {
      return key !== "__proto__" && key !== "constructor" && key !== "prototype";
    }
  }
});

// node_modules/merge-value/index.js
var require_merge_value = __commonJS({
  "node_modules/merge-value/index.js"(exports, module) {
    "use strict";
    var isObject = require_is_extendable();
    var merge2 = require_mixin_deep();
    var get = require_get_value();
    var set = require_set_value();
    module.exports = function mergeValue(obj, prop, value) {
      if (!isObject(obj)) {
        throw new TypeError("expected an object");
      }
      if (typeof prop !== "string" || value == null) {
        return merge2.apply(null, arguments);
      }
      if (typeof value === "string") {
        set(obj, prop, value);
        return obj;
      }
      var current = get(obj, prop);
      if (isObject(value) && isObject(current)) {
        value = merge2({}, current, value);
      }
      set(obj, prop, value);
      return obj;
    };
  }
});

// node_modules/leva/dist/vector-plugin-e3326e0a.esm.js
var import_react2 = __toESM(require_react());

// node_modules/@radix-ui/react-compose-refs/dist/index.module.js
var o = __toESM(require_react());
function composeRefs(...o9) {
  return (e11) => o9.forEach((o10) => function(o11, e12) {
    "function" == typeof o11 ? o11(e12) : null != o11 && (o11.current = e12);
  }(o10, e11));
}
function useComposedRefs(...e11) {
  return o.useCallback(composeRefs(...e11), e11);
}

// node_modules/@radix-ui/react-slot/dist/index.module.js
var t = __toESM(require_react());
var Slot = t.forwardRef((e11, o9) => {
  const { children: a5, ...s6 } = e11;
  return t.Children.toArray(a5).some(l) ? t.createElement(t.Fragment, null, t.Children.map(a5, (e12) => l(e12) ? t.createElement(n, _extends({}, s6, { ref: o9 }), e12.props.children) : e12)) : t.createElement(n, _extends({}, s6, { ref: o9 }), a5);
});
Slot.displayName = "Slot";
var n = t.forwardRef((r12, n6) => {
  const { children: l6, ...a5 } = r12;
  return t.isValidElement(l6) ? t.cloneElement(l6, { ...o2(a5, l6.props), ref: composeRefs(n6, l6.ref) }) : t.Children.count(l6) > 1 ? t.Children.only(null) : null;
});
n.displayName = "SlotClone";
var Slottable = ({ children: e11 }) => t.createElement(t.Fragment, null, e11);
function l(e11) {
  return t.isValidElement(e11) && e11.type === Slottable;
}
function o2(e11, t12) {
  const r12 = { ...t12 };
  for (const n6 in t12) {
    const l6 = e11[n6], o9 = t12[n6];
    /^on[A-Z]/.test(n6) ? r12[n6] = (...e12) => {
      null == o9 || o9(...e12), null == l6 || l6(...e12);
    } : "style" === n6 ? r12[n6] = { ...l6, ...o9 } : "className" === n6 && (r12[n6] = [l6, o9].filter(Boolean).join(" "));
  }
  return { ...e11, ...r12 };
}

// node_modules/@radix-ui/react-primitive/dist/index.module.js
var r = __toESM(require_react());
var Primitive = ["a", "button", "div", "h2", "h3", "img", "li", "nav", "p", "span", "svg", "ul"].reduce((t12, s6) => ({ ...t12, [s6]: r.forwardRef((t13, n6) => {
  const { asChild: a5, ...m5 } = t13, d5 = a5 ? Slot : s6;
  return r.useEffect(() => {
    window[Symbol.for("radix-ui")] = true;
  }, []), t13.as && console.error(o3), r.createElement(d5, _extends({}, m5, { ref: n6 }));
}) }), {});
var o3 = "Warning: The `as` prop has been removed in favour of `asChild`. For details, see https://radix-ui.com/docs/primitives/overview/styling#changing-the-rendered-element";

// node_modules/@radix-ui/react-use-layout-effect/dist/index.module.js
var o4 = __toESM(require_react());
var useLayoutEffect2 = Boolean(null === globalThis || void 0 === globalThis ? void 0 : globalThis.document) ? o4.useLayoutEffect : () => {
};

// node_modules/@radix-ui/react-portal/dist/index.module.js
var import_react_dom = __toESM(require_react_dom());
var r2 = __toESM(require_react());
var Portal = r2.forwardRef((a5, i6) => {
  var n6, d5;
  const { containerRef: s6, style: u5, ...c6 } = a5, m5 = null !== (n6 = null == s6 ? void 0 : s6.current) && void 0 !== n6 ? n6 : null === globalThis || void 0 === globalThis || null === (d5 = globalThis.document) || void 0 === d5 ? void 0 : d5.body, [, f5] = r2.useState({});
  return useLayoutEffect2(() => {
    f5({});
  }, []), m5 ? import_react_dom.default.createPortal(r2.createElement(Primitive.div, _extends({ "data-radix-portal": "" }, c6, { ref: i6, style: m5 === document.body ? { position: "absolute", top: 0, left: 0, zIndex: 2147483647, ...u5 } : void 0 })), m5) : null;
});
var UnstablePortal = r2.forwardRef((t12, a5) => {
  var i6;
  const { container: n6 = null === globalThis || void 0 === globalThis || null === (i6 = globalThis.document) || void 0 === i6 ? void 0 : i6.body, ...d5 } = t12;
  return n6 ? import_react_dom.default.createPortal(r2.createElement(Primitive.div, _extends({}, d5, { ref: a5 })), n6) : null;
});
var Root = Portal;

// node_modules/dequal/lite/index.mjs
var has = Object.prototype.hasOwnProperty;
function dequal(foo, bar) {
  var ctor, len;
  if (foo === bar)
    return true;
  if (foo && bar && (ctor = foo.constructor) === bar.constructor) {
    if (ctor === Date)
      return foo.getTime() === bar.getTime();
    if (ctor === RegExp)
      return foo.toString() === bar.toString();
    if (ctor === Array) {
      if ((len = foo.length) === bar.length) {
        while (len-- && dequal(foo[len], bar[len]))
          ;
      }
      return len === -1;
    }
    if (!ctor || typeof foo === "object") {
      len = 0;
      for (ctor in foo) {
        if (has.call(foo, ctor) && ++len && !has.call(bar, ctor))
          return false;
        if (!(ctor in bar) || !dequal(foo[ctor], bar[ctor]))
          return false;
      }
      return Object.keys(bar).length === len;
    }
  }
  return foo !== foo && bar !== bar;
}

// node_modules/zustand/esm/shallow.js
function shallow(objA, objB) {
  if (Object.is(objA, objB)) {
    return true;
  }
  if (typeof objA !== "object" || objA === null || typeof objB !== "object" || objB === null) {
    return false;
  }
  const keysA = Object.keys(objA);
  if (keysA.length !== Object.keys(objB).length) {
    return false;
  }
  for (let i6 = 0; i6 < keysA.length; i6++) {
    if (!Object.prototype.hasOwnProperty.call(objB, keysA[i6]) || !Object.is(objA[keysA[i6]], objB[keysA[i6]])) {
      return false;
    }
  }
  return true;
}

// node_modules/v8n/dist/v8n.esm.js
var classCallCheck = function(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};
var createClass = function() {
  function defineProperties(target, props3) {
    for (var i6 = 0; i6 < props3.length; i6++) {
      var descriptor = props3[i6];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
var inherits = function(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
};
var possibleConstructorReturn = function(self2, call) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call && (typeof call === "object" || typeof call === "function") ? call : self2;
};
var Rule = function() {
  function Rule2(name, fn, args, modifiers) {
    classCallCheck(this, Rule2);
    this.name = name;
    this.fn = fn;
    this.args = args;
    this.modifiers = modifiers;
  }
  createClass(Rule2, [{
    key: "_test",
    value: function _test(value) {
      var fn = this.fn;
      try {
        testAux(this.modifiers.slice(), fn)(value);
      } catch (ex) {
        fn = function fn2() {
          return false;
        };
      }
      try {
        return testAux(this.modifiers.slice(), fn)(value);
      } catch (ex) {
        return false;
      }
    }
  }, {
    key: "_check",
    value: function _check(value) {
      try {
        testAux(this.modifiers.slice(), this.fn)(value);
      } catch (ex) {
        if (testAux(this.modifiers.slice(), function(it) {
          return it;
        })(false)) {
          return;
        }
      }
      if (!testAux(this.modifiers.slice(), this.fn)(value)) {
        throw null;
      }
    }
  }, {
    key: "_testAsync",
    value: function _testAsync(value) {
      var _this = this;
      return new Promise(function(resolve, reject) {
        testAsyncAux(_this.modifiers.slice(), _this.fn)(value).then(function(valid) {
          if (valid) {
            resolve(value);
          } else {
            reject(null);
          }
        }).catch(function(ex) {
          return reject(ex);
        });
      });
    }
  }]);
  return Rule2;
}();
function pickFn(fn) {
  var variant = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "simple";
  return typeof fn === "object" ? fn[variant] : fn;
}
function testAux(modifiers, fn) {
  if (modifiers.length) {
    var modifier = modifiers.shift();
    var nextFn = testAux(modifiers, fn);
    return modifier.perform(nextFn);
  } else {
    return pickFn(fn);
  }
}
function testAsyncAux(modifiers, fn) {
  if (modifiers.length) {
    var modifier = modifiers.shift();
    var nextFn = testAsyncAux(modifiers, fn);
    return modifier.performAsync(nextFn);
  } else {
    return function(value) {
      return Promise.resolve(pickFn(fn, "async")(value));
    };
  }
}
var Modifier = function Modifier2(name, perform, performAsync) {
  classCallCheck(this, Modifier2);
  this.name = name;
  this.perform = perform;
  this.performAsync = performAsync;
};
var ValidationError = function(_Error) {
  inherits(ValidationError2, _Error);
  function ValidationError2(rule, value, cause, target) {
    classCallCheck(this, ValidationError2);
    for (var _len = arguments.length, remaining = Array(_len > 4 ? _len - 4 : 0), _key = 4; _key < _len; _key++) {
      remaining[_key - 4] = arguments[_key];
    }
    var _this = possibleConstructorReturn(this, (ValidationError2.__proto__ || Object.getPrototypeOf(ValidationError2)).call(this, remaining));
    if (Error.captureStackTrace) {
      Error.captureStackTrace(_this, ValidationError2);
    }
    _this.rule = rule;
    _this.value = value;
    _this.cause = cause;
    _this.target = target;
    return _this;
  }
  return ValidationError2;
}(Error);
var Context = function() {
  function Context2() {
    var chain = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
    var nextRuleModifiers = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
    classCallCheck(this, Context2);
    this.chain = chain;
    this.nextRuleModifiers = nextRuleModifiers;
  }
  createClass(Context2, [{
    key: "_applyRule",
    value: function _applyRule(ruleFn, name) {
      var _this = this;
      return function() {
        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this.chain.push(new Rule(name, ruleFn.apply(_this, args), args, _this.nextRuleModifiers));
        _this.nextRuleModifiers = [];
        return _this;
      };
    }
  }, {
    key: "_applyModifier",
    value: function _applyModifier(modifier, name) {
      this.nextRuleModifiers.push(new Modifier(name, modifier.simple, modifier.async));
      return this;
    }
  }, {
    key: "_clone",
    value: function _clone() {
      return new Context2(this.chain.slice(), this.nextRuleModifiers.slice());
    }
  }, {
    key: "test",
    value: function test(value) {
      return this.chain.every(function(rule) {
        return rule._test(value);
      });
    }
  }, {
    key: "testAll",
    value: function testAll(value) {
      var err = [];
      this.chain.forEach(function(rule) {
        try {
          rule._check(value);
        } catch (ex) {
          err.push(new ValidationError(rule, value, ex));
        }
      });
      return err;
    }
  }, {
    key: "check",
    value: function check(value) {
      this.chain.forEach(function(rule) {
        try {
          rule._check(value);
        } catch (ex) {
          throw new ValidationError(rule, value, ex);
        }
      });
    }
  }, {
    key: "testAsync",
    value: function testAsync(value) {
      var _this2 = this;
      return new Promise(function(resolve, reject) {
        executeAsyncRules(value, _this2.chain.slice(), resolve, reject);
      });
    }
  }]);
  return Context2;
}();
function executeAsyncRules(value, rules, resolve, reject) {
  if (rules.length) {
    var rule = rules.shift();
    rule._testAsync(value).then(function() {
      executeAsyncRules(value, rules, resolve, reject);
    }, function(cause) {
      reject(new ValidationError(rule, value, cause));
    });
  } else {
    resolve(value);
  }
}
function v8n() {
  return proxyContext(new Context());
}
var customRules = {};
v8n.extend = function(newRules) {
  Object.assign(customRules, newRules);
};
v8n.clearCustomRules = function() {
  customRules = {};
};
function proxyContext(context) {
  return new Proxy(context, {
    get: function get(obj, prop) {
      if (prop in obj) {
        return obj[prop];
      }
      var newContext = proxyContext(context._clone());
      if (prop in availableModifiers) {
        return newContext._applyModifier(availableModifiers[prop], prop);
      }
      if (prop in customRules) {
        return newContext._applyRule(customRules[prop], prop);
      }
      if (prop in availableRules) {
        return newContext._applyRule(availableRules[prop], prop);
      }
    }
  });
}
var availableModifiers = {
  not: {
    simple: function simple(fn) {
      return function(value) {
        return !fn(value);
      };
    },
    async: function async(fn) {
      return function(value) {
        return Promise.resolve(fn(value)).then(function(result) {
          return !result;
        }).catch(function(e11) {
          return true;
        });
      };
    }
  },
  some: {
    simple: function simple2(fn) {
      return function(value) {
        return split(value).some(function(item) {
          try {
            return fn(item);
          } catch (ex) {
            return false;
          }
        });
      };
    },
    async: function async2(fn) {
      return function(value) {
        return Promise.all(split(value).map(function(item) {
          try {
            return fn(item).catch(function(e11) {
              return false;
            });
          } catch (ex) {
            return false;
          }
        })).then(function(result) {
          return result.some(Boolean);
        });
      };
    }
  },
  every: {
    simple: function simple3(fn) {
      return function(value) {
        return split(value).every(fn);
      };
    },
    async: function async3(fn) {
      return function(value) {
        return Promise.all(split(value).map(fn)).then(function(result) {
          return result.every(Boolean);
        });
      };
    }
  }
};
function split(value) {
  if (typeof value === "string") {
    return value.split("");
  }
  return value;
}
var availableRules = {
  equal: function equal(expected) {
    return function(value) {
      return value == expected;
    };
  },
  exact: function exact(expected) {
    return function(value) {
      return value === expected;
    };
  },
  number: function number() {
    var allowInfinite = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;
    return function(value) {
      return typeof value === "number" && (allowInfinite || isFinite(value));
    };
  },
  integer: function integer() {
    return function(value) {
      var isInteger = Number.isInteger || isIntegerPolyfill;
      return isInteger(value);
    };
  },
  numeric: function numeric() {
    return function(value) {
      return !isNaN(parseFloat(value)) && isFinite(value);
    };
  },
  string: function string() {
    return testType("string");
  },
  boolean: function boolean() {
    return testType("boolean");
  },
  undefined: function undefined2() {
    return testType("undefined");
  },
  null: function _null() {
    return testType("null");
  },
  array: function array() {
    return testType("array");
  },
  object: function object() {
    return testType("object");
  },
  instanceOf: function instanceOf(instance) {
    return function(value) {
      return value instanceof instance;
    };
  },
  pattern: function pattern(expected) {
    return function(value) {
      return expected.test(value);
    };
  },
  lowercase: function lowercase() {
    return function(value) {
      return /^([a-z]+\s*)+$/.test(value);
    };
  },
  uppercase: function uppercase() {
    return function(value) {
      return /^([A-Z]+\s*)+$/.test(value);
    };
  },
  vowel: function vowel() {
    return function(value) {
      return /^[aeiou]+$/i.test(value);
    };
  },
  consonant: function consonant() {
    return function(value) {
      return /^(?=[^aeiou])([a-z]+)$/i.test(value);
    };
  },
  first: function first(expected) {
    return function(value) {
      return value[0] == expected;
    };
  },
  last: function last(expected) {
    return function(value) {
      return value[value.length - 1] == expected;
    };
  },
  empty: function empty() {
    return function(value) {
      return value.length === 0;
    };
  },
  length: function length(min, max) {
    return function(value) {
      return value.length >= min && value.length <= (max || min);
    };
  },
  minLength: function minLength(min) {
    return function(value) {
      return value.length >= min;
    };
  },
  maxLength: function maxLength(max) {
    return function(value) {
      return value.length <= max;
    };
  },
  negative: function negative() {
    return function(value) {
      return value < 0;
    };
  },
  positive: function positive() {
    return function(value) {
      return value >= 0;
    };
  },
  between: function between(a5, b5) {
    return function(value) {
      return value >= a5 && value <= b5;
    };
  },
  range: function range(a5, b5) {
    return function(value) {
      return value >= a5 && value <= b5;
    };
  },
  lessThan: function lessThan(n6) {
    return function(value) {
      return value < n6;
    };
  },
  lessThanOrEqual: function lessThanOrEqual(n6) {
    return function(value) {
      return value <= n6;
    };
  },
  greaterThan: function greaterThan(n6) {
    return function(value) {
      return value > n6;
    };
  },
  greaterThanOrEqual: function greaterThanOrEqual(n6) {
    return function(value) {
      return value >= n6;
    };
  },
  even: function even() {
    return function(value) {
      return value % 2 === 0;
    };
  },
  odd: function odd() {
    return function(value) {
      return value % 2 !== 0;
    };
  },
  includes: function includes(expected) {
    return function(value) {
      return ~value.indexOf(expected);
    };
  },
  schema: function schema(_schema) {
    return testSchema(_schema);
  },
  passesAnyOf: function passesAnyOf() {
    for (var _len = arguments.length, validations = Array(_len), _key = 0; _key < _len; _key++) {
      validations[_key] = arguments[_key];
    }
    return function(value) {
      return validations.some(function(validation) {
        return validation.test(value);
      });
    };
  },
  optional: function optional(validation) {
    var considerTrimmedEmptyString = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
    return function(value) {
      if (considerTrimmedEmptyString && typeof value === "string" && value.trim() === "") {
        return true;
      }
      if (value !== void 0 && value !== null)
        validation.check(value);
      return true;
    };
  }
};
function testType(expected) {
  return function(value) {
    return Array.isArray(value) && expected === "array" || value === null && expected === "null" || typeof value === expected;
  };
}
function isIntegerPolyfill(value) {
  return typeof value === "number" && isFinite(value) && Math.floor(value) === value;
}
function testSchema(schema4) {
  return {
    simple: function simple4(value) {
      var causes = [];
      Object.keys(schema4).forEach(function(key) {
        var nestedValidation = schema4[key];
        try {
          nestedValidation.check((value || {})[key]);
        } catch (ex) {
          ex.target = key;
          causes.push(ex);
        }
      });
      if (causes.length > 0) {
        throw causes;
      }
      return true;
    },
    async: function async4(value) {
      var causes = [];
      var nested = Object.keys(schema4).map(function(key) {
        var nestedValidation = schema4[key];
        return nestedValidation.testAsync((value || {})[key]).catch(function(ex) {
          ex.target = key;
          causes.push(ex);
        });
      });
      return Promise.all(nested).then(function(values) {
        if (causes.length > 0) {
          throw causes;
        }
        return true;
      });
    }
  };
}
var v8n_esm_default = v8n;

// node_modules/@stitches/react/dist/index.mjs
var import_react = __toESM(require_react(), 1);
var e2 = "colors";
var t2 = "sizes";
var r3 = "space";
var n2 = { gap: r3, gridGap: r3, columnGap: r3, gridColumnGap: r3, rowGap: r3, gridRowGap: r3, inset: r3, insetBlock: r3, insetBlockEnd: r3, insetBlockStart: r3, insetInline: r3, insetInlineEnd: r3, insetInlineStart: r3, margin: r3, marginTop: r3, marginRight: r3, marginBottom: r3, marginLeft: r3, marginBlock: r3, marginBlockEnd: r3, marginBlockStart: r3, marginInline: r3, marginInlineEnd: r3, marginInlineStart: r3, padding: r3, paddingTop: r3, paddingRight: r3, paddingBottom: r3, paddingLeft: r3, paddingBlock: r3, paddingBlockEnd: r3, paddingBlockStart: r3, paddingInline: r3, paddingInlineEnd: r3, paddingInlineStart: r3, top: r3, right: r3, bottom: r3, left: r3, scrollMargin: r3, scrollMarginTop: r3, scrollMarginRight: r3, scrollMarginBottom: r3, scrollMarginLeft: r3, scrollMarginX: r3, scrollMarginY: r3, scrollMarginBlock: r3, scrollMarginBlockEnd: r3, scrollMarginBlockStart: r3, scrollMarginInline: r3, scrollMarginInlineEnd: r3, scrollMarginInlineStart: r3, scrollPadding: r3, scrollPaddingTop: r3, scrollPaddingRight: r3, scrollPaddingBottom: r3, scrollPaddingLeft: r3, scrollPaddingX: r3, scrollPaddingY: r3, scrollPaddingBlock: r3, scrollPaddingBlockEnd: r3, scrollPaddingBlockStart: r3, scrollPaddingInline: r3, scrollPaddingInlineEnd: r3, scrollPaddingInlineStart: r3, fontSize: "fontSizes", background: e2, backgroundColor: e2, backgroundImage: e2, borderImage: e2, border: e2, borderBlock: e2, borderBlockEnd: e2, borderBlockStart: e2, borderBottom: e2, borderBottomColor: e2, borderColor: e2, borderInline: e2, borderInlineEnd: e2, borderInlineStart: e2, borderLeft: e2, borderLeftColor: e2, borderRight: e2, borderRightColor: e2, borderTop: e2, borderTopColor: e2, caretColor: e2, color: e2, columnRuleColor: e2, fill: e2, outline: e2, outlineColor: e2, stroke: e2, textDecorationColor: e2, fontFamily: "fonts", fontWeight: "fontWeights", lineHeight: "lineHeights", letterSpacing: "letterSpacings", blockSize: t2, minBlockSize: t2, maxBlockSize: t2, inlineSize: t2, minInlineSize: t2, maxInlineSize: t2, width: t2, minWidth: t2, maxWidth: t2, height: t2, minHeight: t2, maxHeight: t2, flexBasis: t2, gridTemplateColumns: t2, gridTemplateRows: t2, borderWidth: "borderWidths", borderTopWidth: "borderWidths", borderRightWidth: "borderWidths", borderBottomWidth: "borderWidths", borderLeftWidth: "borderWidths", borderStyle: "borderStyles", borderTopStyle: "borderStyles", borderRightStyle: "borderStyles", borderBottomStyle: "borderStyles", borderLeftStyle: "borderStyles", borderRadius: "radii", borderTopLeftRadius: "radii", borderTopRightRadius: "radii", borderBottomRightRadius: "radii", borderBottomLeftRadius: "radii", boxShadow: "shadows", textShadow: "shadows", transition: "transitions", zIndex: "zIndices" };
var i = (e11, t12) => "function" == typeof t12 ? { "()": Function.prototype.toString.call(t12) } : t12;
var o5 = () => {
  const e11 = /* @__PURE__ */ Object.create(null);
  return (t12, r12, ...n6) => {
    const o9 = ((e12) => JSON.stringify(e12, i))(t12);
    return o9 in e11 ? e11[o9] : e11[o9] = r12(t12, ...n6);
  };
};
var l2 = Symbol.for("sxs.internal");
var s = (e11, t12) => Object.defineProperties(e11, Object.getOwnPropertyDescriptors(t12));
var a = (e11) => {
  for (const t12 in e11)
    return true;
  return false;
};
var { hasOwnProperty: c } = Object.prototype;
var d = (e11) => e11.includes("-") ? e11 : e11.replace(/[A-Z]/g, (e12) => "-" + e12.toLowerCase());
var g = /\s+(?![^()]*\))/;
var p = (e11) => (t12) => e11(..."string" == typeof t12 ? String(t12).split(g) : [t12]);
var u = { appearance: (e11) => ({ WebkitAppearance: e11, appearance: e11 }), backfaceVisibility: (e11) => ({ WebkitBackfaceVisibility: e11, backfaceVisibility: e11 }), backdropFilter: (e11) => ({ WebkitBackdropFilter: e11, backdropFilter: e11 }), backgroundClip: (e11) => ({ WebkitBackgroundClip: e11, backgroundClip: e11 }), boxDecorationBreak: (e11) => ({ WebkitBoxDecorationBreak: e11, boxDecorationBreak: e11 }), clipPath: (e11) => ({ WebkitClipPath: e11, clipPath: e11 }), content: (e11) => ({ content: e11.includes('"') || e11.includes("'") || /^([A-Za-z]+\([^]*|[^]*-quote|inherit|initial|none|normal|revert|unset)$/.test(e11) ? e11 : `"${e11}"` }), hyphens: (e11) => ({ WebkitHyphens: e11, hyphens: e11 }), maskImage: (e11) => ({ WebkitMaskImage: e11, maskImage: e11 }), maskSize: (e11) => ({ WebkitMaskSize: e11, maskSize: e11 }), tabSize: (e11) => ({ MozTabSize: e11, tabSize: e11 }), textSizeAdjust: (e11) => ({ WebkitTextSizeAdjust: e11, textSizeAdjust: e11 }), userSelect: (e11) => ({ WebkitUserSelect: e11, userSelect: e11 }), marginBlock: p((e11, t12) => ({ marginBlockStart: e11, marginBlockEnd: t12 || e11 })), marginInline: p((e11, t12) => ({ marginInlineStart: e11, marginInlineEnd: t12 || e11 })), maxSize: p((e11, t12) => ({ maxBlockSize: e11, maxInlineSize: t12 || e11 })), minSize: p((e11, t12) => ({ minBlockSize: e11, minInlineSize: t12 || e11 })), paddingBlock: p((e11, t12) => ({ paddingBlockStart: e11, paddingBlockEnd: t12 || e11 })), paddingInline: p((e11, t12) => ({ paddingInlineStart: e11, paddingInlineEnd: t12 || e11 })) };
var h = /([\d.]+)([^]*)/;
var f = (e11, t12) => e11.length ? e11.reduce((e12, r12) => (e12.push(...t12.map((e13) => e13.includes("&") ? e13.replace(/&/g, /[ +>|~]/.test(r12) && /&.*&/.test(e13) ? `:is(${r12})` : r12) : r12 + " " + e13)), e12), []) : t12;
var m = (e11, t12) => e11 in b && "string" == typeof t12 ? t12.replace(/^((?:[^]*[^\w-])?)(fit-content|stretch)((?:[^\w-][^]*)?)$/, (t13, r12, n6, i6) => r12 + ("stretch" === n6 ? `-moz-available${i6};${d(e11)}:${r12}-webkit-fill-available` : `-moz-fit-content${i6};${d(e11)}:${r12}fit-content`) + i6) : String(t12);
var b = { blockSize: 1, height: 1, inlineSize: 1, maxBlockSize: 1, maxHeight: 1, maxInlineSize: 1, maxWidth: 1, minBlockSize: 1, minHeight: 1, minInlineSize: 1, minWidth: 1, width: 1 };
var S = (e11) => e11 ? e11 + "-" : "";
var k = (e11, t12, r12) => e11.replace(/([+-])?((?:\d+(?:\.\d*)?|\.\d+)(?:[Ee][+-]?\d+)?)?(\$|--)([$\w-]+)/g, (e12, n6, i6, o9, l6) => "$" == o9 == !!i6 ? e12 : (n6 || "--" == o9 ? "calc(" : "") + "var(--" + ("$" === o9 ? S(t12) + (l6.includes("$") ? "" : S(r12)) + l6.replace(/\$/g, "-") : l6) + ")" + (n6 || "--" == o9 ? "*" + (n6 || "") + (i6 || "1") + ")" : ""));
var y = /\s*,\s*(?![^()]*\))/;
var B = Object.prototype.toString;
var $ = (e11, t12, r12, n6, i6) => {
  let o9, l6, s6;
  const a5 = (e12, t13, r13) => {
    let c6, g5;
    const p5 = (e13) => {
      for (c6 in e13) {
        const R3 = 64 === c6.charCodeAt(0), z2 = R3 && Array.isArray(e13[c6]) ? e13[c6] : [e13[c6]];
        for (g5 of z2) {
          const e14 = /[A-Z]/.test($4 = c6) ? $4 : $4.replace(/-[^]/g, (e15) => e15[1].toUpperCase()), z3 = "object" == typeof g5 && g5 && g5.toString === B && (!n6.utils[e14] || !t13.length);
          if (e14 in n6.utils && !z3) {
            const t14 = n6.utils[e14];
            if (t14 !== l6) {
              l6 = t14, p5(t14(g5)), l6 = null;
              continue;
            }
          } else if (e14 in u) {
            const t14 = u[e14];
            if (t14 !== s6) {
              s6 = t14, p5(t14(g5)), s6 = null;
              continue;
            }
          }
          if (R3 && (b5 = c6.slice(1) in n6.media ? "@media " + n6.media[c6.slice(1)] : c6, c6 = b5.replace(/\(\s*([\w-]+)\s*(=|<|<=|>|>=)\s*([\w-]+)\s*(?:(<|<=|>|>=)\s*([\w-]+)\s*)?\)/g, (e15, t14, r14, n7, i7, o10) => {
            const l7 = h.test(t14), s7 = 0.0625 * (l7 ? -1 : 1), [a6, c7] = l7 ? [n7, t14] : [t14, n7];
            return "(" + ("=" === r14[0] ? "" : ">" === r14[0] === l7 ? "max-" : "min-") + a6 + ":" + ("=" !== r14[0] && 1 === r14.length ? c7.replace(h, (e16, t15, n8) => Number(t15) + s7 * (">" === r14 ? 1 : -1) + n8) : c7) + (i7 ? ") and (" + (">" === i7[0] ? "min-" : "max-") + a6 + ":" + (1 === i7.length ? o10.replace(h, (e16, t15, r15) => Number(t15) + s7 * (">" === i7 ? -1 : 1) + r15) : o10) : "") + ")";
          })), z3) {
            const e15 = R3 ? r13.concat(c6) : [...r13], n7 = R3 ? [...t13] : f(t13, c6.split(y));
            void 0 !== o9 && i6(x(...o9)), o9 = void 0, a5(g5, n7, e15);
          } else
            void 0 === o9 && (o9 = [[], t13, r13]), c6 = R3 || 36 !== c6.charCodeAt(0) ? c6 : `--${S(n6.prefix)}${c6.slice(1).replace(/\$/g, "-")}`, g5 = z3 ? g5 : "number" == typeof g5 ? g5 && e14 in I ? String(g5) + "px" : String(g5) : k(m(e14, null == g5 ? "" : g5), n6.prefix, n6.themeMap[e14]), o9[0].push(`${R3 ? `${c6} ` : `${d(c6)}:`}${g5}`);
        }
      }
      var b5, $4;
    };
    p5(e12), void 0 !== o9 && i6(x(...o9)), o9 = void 0;
  };
  a5(e11, t12, r12);
};
var x = (e11, t12, r12) => `${r12.map((e12) => `${e12}{`).join("")}${t12.length ? `${t12.join(",")}{` : ""}${e11.join(";")}${t12.length ? "}" : ""}${Array(r12.length ? r12.length + 1 : 0).join("}")}`;
var I = { animationDelay: 1, animationDuration: 1, backgroundSize: 1, blockSize: 1, border: 1, borderBlock: 1, borderBlockEnd: 1, borderBlockEndWidth: 1, borderBlockStart: 1, borderBlockStartWidth: 1, borderBlockWidth: 1, borderBottom: 1, borderBottomLeftRadius: 1, borderBottomRightRadius: 1, borderBottomWidth: 1, borderEndEndRadius: 1, borderEndStartRadius: 1, borderInlineEnd: 1, borderInlineEndWidth: 1, borderInlineStart: 1, borderInlineStartWidth: 1, borderInlineWidth: 1, borderLeft: 1, borderLeftWidth: 1, borderRadius: 1, borderRight: 1, borderRightWidth: 1, borderSpacing: 1, borderStartEndRadius: 1, borderStartStartRadius: 1, borderTop: 1, borderTopLeftRadius: 1, borderTopRightRadius: 1, borderTopWidth: 1, borderWidth: 1, bottom: 1, columnGap: 1, columnRule: 1, columnRuleWidth: 1, columnWidth: 1, containIntrinsicSize: 1, flexBasis: 1, fontSize: 1, gap: 1, gridAutoColumns: 1, gridAutoRows: 1, gridTemplateColumns: 1, gridTemplateRows: 1, height: 1, inlineSize: 1, inset: 1, insetBlock: 1, insetBlockEnd: 1, insetBlockStart: 1, insetInline: 1, insetInlineEnd: 1, insetInlineStart: 1, left: 1, letterSpacing: 1, margin: 1, marginBlock: 1, marginBlockEnd: 1, marginBlockStart: 1, marginBottom: 1, marginInline: 1, marginInlineEnd: 1, marginInlineStart: 1, marginLeft: 1, marginRight: 1, marginTop: 1, maxBlockSize: 1, maxHeight: 1, maxInlineSize: 1, maxWidth: 1, minBlockSize: 1, minHeight: 1, minInlineSize: 1, minWidth: 1, offsetDistance: 1, offsetRotate: 1, outline: 1, outlineOffset: 1, outlineWidth: 1, overflowClipMargin: 1, padding: 1, paddingBlock: 1, paddingBlockEnd: 1, paddingBlockStart: 1, paddingBottom: 1, paddingInline: 1, paddingInlineEnd: 1, paddingInlineStart: 1, paddingLeft: 1, paddingRight: 1, paddingTop: 1, perspective: 1, right: 1, rowGap: 1, scrollMargin: 1, scrollMarginBlock: 1, scrollMarginBlockEnd: 1, scrollMarginBlockStart: 1, scrollMarginBottom: 1, scrollMarginInline: 1, scrollMarginInlineEnd: 1, scrollMarginInlineStart: 1, scrollMarginLeft: 1, scrollMarginRight: 1, scrollMarginTop: 1, scrollPadding: 1, scrollPaddingBlock: 1, scrollPaddingBlockEnd: 1, scrollPaddingBlockStart: 1, scrollPaddingBottom: 1, scrollPaddingInline: 1, scrollPaddingInlineEnd: 1, scrollPaddingInlineStart: 1, scrollPaddingLeft: 1, scrollPaddingRight: 1, scrollPaddingTop: 1, shapeMargin: 1, textDecoration: 1, textDecorationThickness: 1, textIndent: 1, textUnderlineOffset: 1, top: 1, transitionDelay: 1, transitionDuration: 1, verticalAlign: 1, width: 1, wordSpacing: 1 };
var R = (e11) => String.fromCharCode(e11 + (e11 > 25 ? 39 : 97));
var z = (e11) => ((e12) => {
  let t12, r12 = "";
  for (t12 = Math.abs(e12); t12 > 52; t12 = t12 / 52 | 0)
    r12 = R(t12 % 52) + r12;
  return R(t12 % 52) + r12;
})(((e12, t12) => {
  let r12 = t12.length;
  for (; r12; )
    e12 = 33 * e12 ^ t12.charCodeAt(--r12);
  return e12;
})(5381, JSON.stringify(e11)) >>> 0);
var W = ["themed", "global", "styled", "onevar", "resonevar", "allvar", "inline"];
var j = (e11) => {
  if (e11.href && !e11.href.startsWith(location.origin))
    return false;
  try {
    return e11.cssRules, true;
  } catch (e12) {
    return false;
  }
};
var E = (e11) => {
  let t12;
  const r12 = () => {
    if (t12) {
      const { rules: e12, sheet: r13 } = t12;
      if (!r13.deleteRule) {
        for (; 3 === Object(Object(r13.cssRules)[0]).type; )
          r13.cssRules.splice(0, 1);
        r13.cssRules = [];
      }
      for (const t13 in e12)
        delete e12[t13];
    }
    const n6 = Object(e11).styleSheets || [];
    for (const e12 of n6)
      if (j(e12)) {
        for (let n7 = 0, i7 = e12.cssRules; i7[n7]; ++n7) {
          const o10 = Object(i7[n7]);
          if (1 !== o10.type)
            continue;
          const l6 = Object(i7[n7 + 1]);
          if (4 !== l6.type)
            continue;
          ++n7;
          const { cssText: s6 } = o10;
          if (!s6.startsWith("--sxs"))
            continue;
          const a5 = s6.slice(14, -3).trim().split(/\s+/), c6 = W[a5[0]];
          c6 && (t12 || (t12 = { sheet: e12, reset: r12, rules: {} }), t12.rules[c6] = { group: l6, index: n7, cache: new Set(a5) });
        }
        if (t12)
          break;
      }
    if (!t12) {
      const n7 = (e12, t13) => ({ type: t13, cssRules: [], insertRule(e13, t14) {
        this.cssRules.splice(t14, 0, n7(e13, { import: 3, undefined: 1 }[(e13.toLowerCase().match(/^@([a-z]+)/) || [])[1]] || 4));
      }, get cssText() {
        return "@media{}" === e12 ? `@media{${[].map.call(this.cssRules, (e13) => e13.cssText).join("")}}` : e12;
      } });
      t12 = { sheet: e11 ? (e11.head || e11).appendChild(document.createElement("style")).sheet : n7("", "text/css"), rules: {}, reset: r12, toString() {
        const { cssRules: e12 } = t12.sheet;
        return [].map.call(e12, (r13, n8) => {
          const { cssText: i7 } = r13;
          let o10 = "";
          if (i7.startsWith("--sxs"))
            return "";
          if (e12[n8 - 1] && (o10 = e12[n8 - 1].cssText).startsWith("--sxs")) {
            if (!r13.cssRules.length)
              return "";
            for (const e13 in t12.rules)
              if (t12.rules[e13].group === r13)
                return `--sxs{--sxs:${[...t12.rules[e13].cache].join(" ")}}${i7}`;
            return r13.cssRules.length ? `${o10}${i7}` : "";
          }
          return i7;
        }).join("");
      } };
    }
    const { sheet: i6, rules: o9 } = t12;
    for (let e12 = W.length - 1; e12 >= 0; --e12) {
      const t13 = W[e12];
      if (!o9[t13]) {
        const r13 = W[e12 + 1], n7 = o9[r13] ? o9[r13].index : i6.cssRules.length;
        i6.insertRule("@media{}", n7), i6.insertRule(`--sxs{--sxs:${e12}}`, n7), o9[t13] = { group: i6.cssRules[n7 + 1], index: n7, cache: /* @__PURE__ */ new Set([e12]) };
      }
      v(o9[t13]);
    }
  };
  return r12(), t12;
};
var v = (e11) => {
  const t12 = e11.group;
  let r12 = t12.cssRules.length;
  e11.apply = (e12) => {
    try {
      t12.insertRule(e12, r12), ++r12;
    } catch {
    }
  };
};
var T = Symbol();
var w = o5();
var M = (e11, t12) => w(e11, () => (...r12) => {
  let n6 = { type: null, composers: /* @__PURE__ */ new Set() };
  for (const t13 of r12)
    if (null != t13)
      if (t13[l2]) {
        null == n6.type && (n6.type = t13[l2].type);
        for (const e12 of t13[l2].composers)
          n6.composers.add(e12);
      } else
        t13.constructor !== Object || t13.$$typeof ? null == n6.type && (n6.type = t13) : n6.composers.add(C(t13, e11));
  return null == n6.type && (n6.type = "span"), n6.composers.size || n6.composers.add(["PJLV", {}, [], [], {}, []]), P(e11, n6, t12);
});
var C = ({ variants: e11, compoundVariants: t12, defaultVariants: r12, ...n6 }, i6) => {
  const o9 = `${S(i6.prefix)}c-${z(n6)}`, l6 = [], s6 = [], d5 = /* @__PURE__ */ Object.create(null), g5 = [];
  for (const e12 in r12)
    d5[e12] = String(r12[e12]);
  if ("object" == typeof e11 && e11)
    for (const t13 in e11) {
      p5 = d5, u5 = t13, c.call(p5, u5) || (d5[t13] = "undefined");
      const r13 = e11[t13];
      for (const e12 in r13) {
        const n7 = { [t13]: String(e12) };
        "undefined" === String(e12) && g5.push(t13);
        const i7 = r13[e12], o10 = [n7, i7, !a(i7)];
        l6.push(o10);
      }
    }
  var p5, u5;
  if ("object" == typeof t12 && t12)
    for (const e12 of t12) {
      let { css: t13, ...r13 } = e12;
      t13 = "object" == typeof t13 && t13 || {};
      for (const e13 in r13)
        r13[e13] = String(r13[e13]);
      const n7 = [r13, t13, !a(t13)];
      s6.push(n7);
    }
  return [o9, n6, l6, s6, d5, g5];
};
var P = (e11, t12, r12) => {
  const [n6, i6, o9, a5] = L(t12.composers), c6 = "function" == typeof t12.type || t12.type.$$typeof ? ((e12) => {
    function t13() {
      for (let r13 = 0; r13 < t13[T].length; r13++) {
        const [n7, i7] = t13[T][r13];
        e12.rules[n7].apply(i7);
      }
      return t13[T] = [], null;
    }
    return t13[T] = [], t13.rules = {}, W.forEach((e13) => t13.rules[e13] = { apply: (r13) => t13[T].push([e13, r13]) }), t13;
  })(r12) : null, d5 = (c6 || r12).rules, g5 = `.${n6}${i6.length > 1 ? `:where(.${i6.slice(1).join(".")})` : ""}`, p5 = (l6) => {
    l6 = "object" == typeof l6 && l6 || A;
    const { css: s6, ...p6 } = l6, u5 = {};
    for (const e12 in o9)
      if (delete p6[e12], e12 in l6) {
        let t13 = l6[e12];
        "object" == typeof t13 && t13 ? u5[e12] = { "@initial": o9[e12], ...t13 } : (t13 = String(t13), u5[e12] = "undefined" !== t13 || a5.has(e12) ? t13 : o9[e12]);
      } else
        u5[e12] = o9[e12];
    const h5 = /* @__PURE__ */ new Set([...i6]);
    for (const [n7, i7, o10, l7] of t12.composers) {
      r12.rules.styled.cache.has(n7) || (r12.rules.styled.cache.add(n7), $(i7, [`.${n7}`], [], e11, (e12) => {
        d5.styled.apply(e12);
      }));
      const t13 = O(o10, u5, e11.media), s7 = O(l7, u5, e11.media, true);
      for (const i8 of t13)
        if (void 0 !== i8)
          for (const [t14, o11, l8] of i8) {
            const i9 = `${n7}-${z(o11)}-${t14}`;
            h5.add(i9);
            const s8 = (l8 ? r12.rules.resonevar : r12.rules.onevar).cache, a6 = l8 ? d5.resonevar : d5.onevar;
            s8.has(i9) || (s8.add(i9), $(o11, [`.${i9}`], [], e11, (e12) => {
              a6.apply(e12);
            }));
          }
      for (const t14 of s7)
        if (void 0 !== t14)
          for (const [i8, o11] of t14) {
            const t15 = `${n7}-${z(o11)}-${i8}`;
            h5.add(t15), r12.rules.allvar.cache.has(t15) || (r12.rules.allvar.cache.add(t15), $(o11, [`.${t15}`], [], e11, (e12) => {
              d5.allvar.apply(e12);
            }));
          }
    }
    if ("object" == typeof s6 && s6) {
      const t13 = `${n6}-i${z(s6)}-css`;
      h5.add(t13), r12.rules.inline.cache.has(t13) || (r12.rules.inline.cache.add(t13), $(s6, [`.${t13}`], [], e11, (e12) => {
        d5.inline.apply(e12);
      }));
    }
    for (const e12 of String(l6.className || "").trim().split(/\s+/))
      e12 && h5.add(e12);
    const f5 = p6.className = [...h5].join(" ");
    return { type: t12.type, className: f5, selector: g5, props: p6, toString: () => f5, deferredInjector: c6 };
  };
  return s(p5, { className: n6, selector: g5, [l2]: t12, toString: () => (r12.rules.styled.cache.has(n6) || p5(), n6) });
};
var L = (e11) => {
  let t12 = "";
  const r12 = [], n6 = {}, i6 = [];
  for (const [o9, , , , l6, s6] of e11) {
    "" === t12 && (t12 = o9), r12.push(o9), i6.push(...s6);
    for (const e12 in l6) {
      const t13 = l6[e12];
      (void 0 === n6[e12] || "undefined" !== t13 || s6.includes(t13)) && (n6[e12] = t13);
    }
  }
  return [t12, r12, n6, new Set(i6)];
};
var O = (e11, t12, r12, n6) => {
  const i6 = [];
  e:
    for (let [o9, l6, s6] of e11) {
      if (s6)
        continue;
      let e12, a5 = 0, c6 = false;
      for (e12 in o9) {
        const n7 = o9[e12];
        let i7 = t12[e12];
        if (i7 !== n7) {
          if ("object" != typeof i7 || !i7)
            continue e;
          {
            let e13, t13, o10 = 0;
            for (const l7 in i7) {
              if (n7 === String(i7[l7])) {
                if ("@initial" !== l7) {
                  const e14 = l7.slice(1);
                  (t13 = t13 || []).push(e14 in r12 ? r12[e14] : l7.replace(/^@media ?/, "")), c6 = true;
                }
                a5 += o10, e13 = true;
              }
              ++o10;
            }
            if (t13 && t13.length && (l6 = { ["@media " + t13.join(", ")]: l6 }), !e13)
              continue e;
          }
        }
      }
      (i6[a5] = i6[a5] || []).push([n6 ? "cv" : `${e12}-${o9[e12]}`, l6, c6]);
    }
  return i6;
};
var A = {};
var N = o5();
var D = (e11, t12) => N(e11, () => (...r12) => {
  const n6 = () => {
    for (let n7 of r12) {
      n7 = "object" == typeof n7 && n7 || {};
      let r13 = z(n7);
      if (!t12.rules.global.cache.has(r13)) {
        if (t12.rules.global.cache.add(r13), "@import" in n7) {
          let e12 = [].indexOf.call(t12.sheet.cssRules, t12.rules.themed.group) - 1;
          for (let r14 of [].concat(n7["@import"]))
            r14 = r14.includes('"') || r14.includes("'") ? r14 : `"${r14}"`, t12.sheet.insertRule(`@import ${r14};`, e12++);
          delete n7["@import"];
        }
        $(n7, [], [], e11, (e12) => {
          t12.rules.global.apply(e12);
        });
      }
    }
    return "";
  };
  return s(n6, { toString: n6 });
});
var H = o5();
var V = (e11, t12) => H(e11, () => (r12) => {
  const n6 = `${S(e11.prefix)}k-${z(r12)}`, i6 = () => {
    if (!t12.rules.global.cache.has(n6)) {
      t12.rules.global.cache.add(n6);
      const i7 = [];
      $(r12, [], [], e11, (e12) => i7.push(e12));
      const o9 = `@keyframes ${n6}{${i7.join("")}}`;
      t12.rules.global.apply(o9);
    }
    return n6;
  };
  return s(i6, { get name() {
    return i6();
  }, toString: i6 });
});
var G = class {
  constructor(e11, t12, r12, n6) {
    this.token = null == e11 ? "" : String(e11), this.value = null == t12 ? "" : String(t12), this.scale = null == r12 ? "" : String(r12), this.prefix = null == n6 ? "" : String(n6);
  }
  get computedValue() {
    return "var(" + this.variable + ")";
  }
  get variable() {
    return "--" + S(this.prefix) + S(this.scale) + this.token;
  }
  toString() {
    return this.computedValue;
  }
};
var F = o5();
var J = (e11, t12) => F(e11, () => (r12, n6) => {
  n6 = "object" == typeof r12 && r12 || Object(n6);
  const i6 = `.${r12 = (r12 = "string" == typeof r12 ? r12 : "") || `${S(e11.prefix)}t-${z(n6)}`}`, o9 = {}, l6 = [];
  for (const t13 in n6) {
    o9[t13] = {};
    for (const r13 in n6[t13]) {
      const i7 = `--${S(e11.prefix)}${t13}-${r13}`, s7 = k(String(n6[t13][r13]), e11.prefix, t13);
      o9[t13][r13] = new G(r13, s7, t13, e11.prefix), l6.push(`${i7}:${s7}`);
    }
  }
  const s6 = () => {
    if (l6.length && !t12.rules.themed.cache.has(r12)) {
      t12.rules.themed.cache.add(r12);
      const i7 = `${n6 === e11.theme ? ":root," : ""}.${r12}{${l6.join(";")}}`;
      t12.rules.themed.apply(i7);
    }
    return r12;
  };
  return { ...o9, get className() {
    return s6();
  }, selector: i6, toString: s6 };
});
var U = o5();
var Y = o5();
var q = (e11) => {
  const t12 = ((e12) => {
    let t13 = false;
    const r12 = U(e12, (e13) => {
      t13 = true;
      const r13 = "prefix" in (e13 = "object" == typeof e13 && e13 || {}) ? String(e13.prefix) : "", i6 = "object" == typeof e13.media && e13.media || {}, o9 = "object" == typeof e13.root ? e13.root || null : globalThis.document || null, l6 = "object" == typeof e13.theme && e13.theme || {}, s6 = { prefix: r13, media: i6, theme: l6, themeMap: "object" == typeof e13.themeMap && e13.themeMap || { ...n2 }, utils: "object" == typeof e13.utils && e13.utils || {} }, a5 = E(o9), c6 = { css: M(s6, a5), globalCss: D(s6, a5), keyframes: V(s6, a5), createTheme: J(s6, a5), reset() {
        a5.reset(), c6.theme.toString();
      }, theme: {}, sheet: a5, config: s6, prefix: r13, getCssText: a5.toString, toString: a5.toString };
      return String(c6.theme = c6.createTheme(l6)), c6;
    });
    return t13 || r12.reset(), r12;
  })(e11);
  return t12.styled = (({ config: e12, sheet: t13 }) => Y(e12, () => {
    const r12 = M(e12, t13);
    return (...e13) => {
      const t14 = r12(...e13), n6 = t14[l2].type, i6 = import_react.default.forwardRef((e14, r13) => {
        const i7 = e14 && e14.as || n6, { props: o9, deferredInjector: l6 } = t14(e14);
        return delete o9.as, o9.ref = r13, l6 ? import_react.default.createElement(import_react.default.Fragment, null, import_react.default.createElement(i7, o9), import_react.default.createElement(l6, null)) : import_react.default.createElement(i7, o9);
      });
      return i6.className = t14.className, i6.displayName = `Styled.${n6.displayName || n6.name || n6}`, i6.selector = t14.selector, i6.toString = () => t14.selector, i6[l2] = t14[l2], i6;
    };
  }))(t12), t12;
};

// node_modules/@radix-ui/react-id/dist/index.module.js
var t3 = __toESM(require_react());
var r4 = t3["useId".toString()] || (() => {
});
var i2 = 0;
function useId(n6) {
  const [o9, s6] = t3.useState(r4());
  return useLayoutEffect2(() => {
    n6 || s6((e11) => null != e11 ? e11 : String(i2++));
  }, [n6]), n6 || (o9 ? `radix-${o9}` : "");
}

// node_modules/@radix-ui/react-visually-hidden/dist/index.module.js
var r5 = __toESM(require_react());
var VisuallyHidden = r5.forwardRef((i6, o9) => r5.createElement(Primitive.span, _extends({}, i6, { ref: o9, style: { ...i6.style, position: "absolute", border: 0, width: 1, height: 1, padding: 0, margin: -1, overflow: "hidden", clip: "rect(0, 0, 0, 0)", whiteSpace: "nowrap", wordWrap: "normal" } })));
var Root2 = VisuallyHidden;

// node_modules/@radix-ui/react-arrow/dist/index.module.js
var r6 = __toESM(require_react());
var Arrow = r6.forwardRef((o9, i6) => {
  const { children: n6, width: s6 = 10, height: m5 = 5, ...p5 } = o9;
  return r6.createElement(Primitive.svg, _extends({}, p5, { ref: i6, width: s6, height: m5, viewBox: "0 0 30 10", preserveAspectRatio: "none" }), o9.asChild ? n6 : r6.createElement("polygon", { points: "0,0 30,0 15,10" }));
});
var Root3 = Arrow;

// node_modules/@radix-ui/react-use-size/dist/index.module.js
var e3 = __toESM(require_react());
function useSize(r12) {
  const [i6, t12] = e3.useState(void 0);
  return e3.useEffect(() => {
    if (r12) {
      const e11 = new ResizeObserver((e12) => {
        if (!Array.isArray(e12))
          return;
        if (!e12.length)
          return;
        const i7 = e12[0];
        let o9, n6;
        if ("borderBoxSize" in i7) {
          const e13 = i7.borderBoxSize, r13 = Array.isArray(e13) ? e13[0] : e13;
          o9 = r13.inlineSize, n6 = r13.blockSize;
        } else {
          const e13 = r12.getBoundingClientRect();
          o9 = e13.width, n6 = e13.height;
        }
        t12({ width: o9, height: n6 });
      });
      return e11.observe(r12, { box: "border-box" }), () => {
        t12(void 0), e11.unobserve(r12);
      };
    }
  }, [r12]), i6;
}

// node_modules/@radix-ui/rect/dist/index.module.js
function observeElementRect(n6, o9) {
  const i6 = e4.get(n6);
  return void 0 === i6 ? (e4.set(n6, { rect: {}, callbacks: [o9] }), 1 === e4.size && (t4 = requestAnimationFrame(c2))) : (i6.callbacks.push(o9), o9(n6.getBoundingClientRect())), () => {
    const c6 = e4.get(n6);
    if (void 0 === c6)
      return;
    const i7 = c6.callbacks.indexOf(o9);
    i7 > -1 && c6.callbacks.splice(i7, 1), 0 === c6.callbacks.length && (e4.delete(n6), 0 === e4.size && cancelAnimationFrame(t4));
  };
}
var t4;
var e4 = /* @__PURE__ */ new Map();
function c2() {
  const n6 = [];
  e4.forEach((t12, e11) => {
    const c6 = e11.getBoundingClientRect();
    var o9, i6;
    o9 = t12.rect, i6 = c6, (o9.width !== i6.width || o9.height !== i6.height || o9.top !== i6.top || o9.right !== i6.right || o9.bottom !== i6.bottom || o9.left !== i6.left) && (t12.rect = c6, n6.push(t12));
  }), n6.forEach((t12) => {
    t12.callbacks.forEach((e11) => e11(t12.rect));
  }), t4 = requestAnimationFrame(c2);
}

// node_modules/@radix-ui/react-use-rect/dist/index.module.js
var r7 = __toESM(require_react());
function useRect(e11) {
  const [o9, c6] = r7.useState();
  return r7.useEffect(() => {
    if (e11) {
      const r12 = observeElementRect(e11, c6);
      return () => {
        c6(void 0), r12();
      };
    }
  }, [e11]), o9;
}

// node_modules/@radix-ui/react-context/dist/index.module.js
var e5 = __toESM(require_react());
function createContextScope(n6, o9 = []) {
  let r12 = [];
  const c6 = () => {
    const t12 = r12.map((t13) => e5.createContext(t13));
    return function(o10) {
      const r13 = (null == o10 ? void 0 : o10[n6]) || t12;
      return e5.useMemo(() => ({ [`__scope${n6}`]: { ...o10, [n6]: r13 } }), [o10, r13]);
    };
  };
  return c6.scopeName = n6, [function(t12, o10) {
    const c7 = e5.createContext(o10), u5 = r12.length;
    function s6(t13) {
      const { scope: o11, children: r13, ...s7 } = t13, i6 = (null == o11 ? void 0 : o11[n6][u5]) || c7, a5 = e5.useMemo(() => s7, Object.values(s7));
      return e5.createElement(i6.Provider, { value: a5 }, r13);
    }
    return r12 = [...r12, o10], s6.displayName = t12 + "Provider", [s6, function(r13, s7) {
      const i6 = (null == s7 ? void 0 : s7[n6][u5]) || c7, a5 = e5.useContext(i6);
      if (a5)
        return a5;
      if (void 0 !== o10)
        return o10;
      throw new Error(`\`${r13}\` must be used within \`${t12}\``);
    }];
  }, t5(c6, ...o9)];
}
function t5(...t12) {
  const n6 = t12[0];
  if (1 === t12.length)
    return n6;
  const o9 = () => {
    const o10 = t12.map((e11) => ({ useScope: e11(), scopeName: e11.scopeName }));
    return function(t13) {
      const r12 = o10.reduce((e11, { useScope: n7, scopeName: o11 }) => ({ ...e11, ...n7(t13)[`__scope${o11}`] }), {});
      return e5.useMemo(() => ({ [`__scope${n6.scopeName}`]: r12 }), [r12]);
    };
  };
  return o9.scopeName = n6.scopeName, o9;
}

// node_modules/@radix-ui/popper/dist/index.module.js
function getPlacementData({ anchorRect: p5, popperSize: c6, arrowSize: f5, arrowOffset: l6 = 0, side: d5, sideOffset: h5 = 0, align: x4, alignOffset: g5 = 0, shouldAvoidCollisions: u5 = true, collisionBoundariesRect: w5, collisionTolerance: m5 = 0 }) {
  if (!p5 || !c6 || !w5)
    return { popperStyles: o6, arrowStyles: n3 };
  const y5 = function(e11, r12, o9 = 0, n6 = 0, i6) {
    const p6 = i6 ? i6.height : 0, a5 = t6(r12, e11, "x"), s6 = t6(r12, e11, "y"), c7 = s6.before - o9 - p6, f6 = s6.after + o9 + p6, l7 = a5.before - o9 - p6, d6 = a5.after + o9 + p6;
    return { top: { start: { x: a5.start + n6, y: c7 }, center: { x: a5.center, y: c7 }, end: { x: a5.end - n6, y: c7 } }, right: { start: { x: d6, y: s6.start + n6 }, center: { x: d6, y: s6.center }, end: { x: d6, y: s6.end - n6 } }, bottom: { start: { x: a5.start + n6, y: f6 }, center: { x: a5.center, y: f6 }, end: { x: a5.end - n6, y: f6 } }, left: { start: { x: l7, y: s6.start + n6 }, center: { x: l7, y: s6.center }, end: { x: l7, y: s6.end - n6 } } };
  }(c6, p5, h5, g5, f5), b5 = y5[d5][x4];
  if (false === u5) {
    const t12 = e6(b5);
    let o9 = n3;
    f5 && (o9 = i3({ popperSize: c6, arrowSize: f5, arrowOffset: l6, side: d5, align: x4 }));
    return { popperStyles: { ...t12, "--radix-popper-transform-origin": r8(c6, d5, x4, l6, f5) }, arrowStyles: o9, placedSide: d5, placedAlign: x4 };
  }
  const S3 = DOMRect.fromRect({ ...c6, ...b5 }), $4 = (O2 = w5, z2 = m5, DOMRect.fromRect({ width: O2.width - 2 * z2, height: O2.height - 2 * z2, x: O2.left + z2, y: O2.top + z2 }));
  var O2, z2;
  const R3 = s2(S3, $4), M3 = y5[a2(d5)][x4], D2 = function(t12, e11, r12) {
    const o9 = a2(t12);
    return e11[t12] && !r12[o9] ? o9 : t12;
  }(d5, R3, s2(DOMRect.fromRect({ ...c6, ...M3 }), $4)), A3 = function(t12, e11, r12, o9, n6) {
    const i6 = "top" === r12 || "bottom" === r12, p6 = i6 ? "left" : "top", a5 = i6 ? "right" : "bottom", s6 = i6 ? "width" : "height", c7 = e11[s6] > t12[s6];
    if (("start" === o9 || "center" === o9) && (n6[p6] && c7 || n6[a5] && !c7))
      return "end";
    if (("end" === o9 || "center" === o9) && (n6[a5] && c7 || n6[p6] && !c7))
      return "start";
    return o9;
  }(c6, p5, d5, x4, R3), I3 = e6(y5[D2][A3]);
  let C2 = n3;
  f5 && (C2 = i3({ popperSize: c6, arrowSize: f5, arrowOffset: l6, side: D2, align: A3 }));
  return { popperStyles: { ...I3, "--radix-popper-transform-origin": r8(c6, D2, A3, l6, f5) }, arrowStyles: C2, placedSide: D2, placedAlign: A3 };
}
function t6(t12, e11, r12) {
  const o9 = t12["x" === r12 ? "left" : "top"], n6 = "x" === r12 ? "width" : "height", i6 = t12[n6], p5 = e11[n6];
  return { before: o9 - p5, start: o9, center: o9 + (i6 - p5) / 2, end: o9 + i6 - p5, after: o9 + i6 };
}
function e6(t12) {
  return { position: "absolute", top: 0, left: 0, minWidth: "max-content", willChange: "transform", transform: `translate3d(${Math.round(t12.x + window.scrollX)}px, ${Math.round(t12.y + window.scrollY)}px, 0)` };
}
function r8(t12, e11, r12, o9, n6) {
  const i6 = "top" === e11 || "bottom" === e11, p5 = n6 ? n6.width : 0, a5 = n6 ? n6.height : 0, s6 = p5 / 2 + o9;
  let c6 = "", f5 = "";
  return i6 ? (c6 = { start: `${s6}px`, center: "center", end: t12.width - s6 + "px" }[r12], f5 = "top" === e11 ? `${t12.height + a5}px` : -a5 + "px") : (c6 = "left" === e11 ? `${t12.width + a5}px` : -a5 + "px", f5 = { start: `${s6}px`, center: "center", end: t12.height - s6 + "px" }[r12]), `${c6} ${f5}`;
}
var o6 = { position: "fixed", top: 0, left: 0, opacity: 0, transform: "translate3d(0, -200%, 0)" };
var n3 = { position: "absolute", opacity: 0 };
function i3({ popperSize: t12, arrowSize: e11, arrowOffset: r12, side: o9, align: n6 }) {
  const i6 = (t12.width - e11.width) / 2, a5 = (t12.height - e11.width) / 2, s6 = { top: 0, right: 90, bottom: 180, left: -90 }[o9], c6 = Math.max(e11.width, e11.height), f5 = { width: `${c6}px`, height: `${c6}px`, transform: `rotate(${s6}deg)`, willChange: "transform", position: "absolute", [o9]: "100%", direction: p2(o9, n6) };
  return "top" !== o9 && "bottom" !== o9 || ("start" === n6 && (f5.left = `${r12}px`), "center" === n6 && (f5.left = `${i6}px`), "end" === n6 && (f5.right = `${r12}px`)), "left" !== o9 && "right" !== o9 || ("start" === n6 && (f5.top = `${r12}px`), "center" === n6 && (f5.top = `${a5}px`), "end" === n6 && (f5.bottom = `${r12}px`)), f5;
}
function p2(t12, e11) {
  return ("top" !== t12 && "right" !== t12 || "end" !== e11) && ("bottom" !== t12 && "left" !== t12 || "end" === e11) ? "ltr" : "rtl";
}
function a2(t12) {
  return { top: "bottom", right: "left", bottom: "top", left: "right" }[t12];
}
function s2(t12, e11) {
  return { top: t12.top < e11.top, right: t12.right > e11.right, bottom: t12.bottom > e11.bottom, left: t12.left < e11.left };
}

// node_modules/@radix-ui/react-popper/dist/index.module.js
var s3 = __toESM(require_react());
var [c3, l3] = createContextScope("Popper");
var [f2, d2] = c3("Popper");
var Popper = (e11) => {
  const { __scopePopper: o9, children: r12 } = e11, [t12, n6] = s3.useState(null);
  return s3.createElement(f2, { scope: o9, anchor: t12, onAnchorChange: n6 }, r12);
};
var PopperAnchor = s3.forwardRef((e11, r12) => {
  const { __scopePopper: t12, virtualRef: n6, ...p5 } = e11, c6 = d2("PopperAnchor", t12), l6 = s3.useRef(null), f5 = useComposedRefs(r12, l6);
  return s3.useEffect(() => {
    c6.onAnchorChange((null == n6 ? void 0 : n6.current) || l6.current);
  }), n6 ? null : s3.createElement(Primitive.div, _extends({}, p5, { ref: f5 }));
});
var [u2, m2] = c3("PopperContent");
var PopperContent = s3.forwardRef((e11, n6) => {
  const { __scopePopper: c6, side: l6 = "bottom", sideOffset: f5, align: m5 = "center", alignOffset: w5, collisionTolerance: h5, avoidCollisions: x4 = true, ...v5 } = e11, P3 = d2("PopperContent", c6), [A3, g5] = s3.useState(), E3 = useRect(P3.anchor), [y5, C2] = s3.useState(null), S3 = useSize(y5), [R3, O2] = s3.useState(null), _3 = useSize(R3), b5 = useComposedRefs(n6, (e12) => C2(e12)), z2 = function() {
    const [e12, o9] = s3.useState(void 0);
    return s3.useEffect(() => {
      let e13;
      function r12() {
        o9({ width: window.innerWidth, height: window.innerHeight });
      }
      function t12() {
        window.clearTimeout(e13), e13 = window.setTimeout(r12, 100);
      }
      return r12(), window.addEventListener("resize", t12), () => window.removeEventListener("resize", t12);
    }, []), e12;
  }(), T4 = z2 ? DOMRect.fromRect({ ...z2, x: 0, y: 0 }) : void 0, { popperStyles: k4, arrowStyles: L3, placedSide: B3, placedAlign: D2 } = getPlacementData({ anchorRect: E3, popperSize: S3, arrowSize: _3, arrowOffset: A3, side: l6, sideOffset: f5, align: m5, alignOffset: w5, shouldAvoidCollisions: x4, collisionBoundariesRect: T4, collisionTolerance: h5 }), H3 = void 0 !== B3;
  return s3.createElement("div", { style: k4, "data-radix-popper-content-wrapper": "" }, s3.createElement(u2, { scope: c6, arrowStyles: L3, onArrowChange: O2, onArrowOffsetChange: g5 }, s3.createElement(Primitive.div, _extends({ "data-side": B3, "data-align": D2 }, v5, { style: { ...v5.style, animation: H3 ? void 0 : "none" }, ref: b5 }))));
});
var PopperArrow = s3.forwardRef(function(o9, r12) {
  const { __scopePopper: t12, offset: n6, ...i6 } = o9, p5 = m2("PopperArrow", t12), { onArrowOffsetChange: c6 } = p5;
  return s3.useEffect(() => c6(n6), [c6, n6]), s3.createElement("span", { style: { ...p5.arrowStyles, pointerEvents: "none" } }, s3.createElement("span", { ref: p5.onArrowChange, style: { display: "inline-block", verticalAlign: "top", pointerEvents: "auto" } }, s3.createElement(Root3, _extends({}, i6, { ref: r12, style: { ...i6.style, display: "block" } }))));
});
var Root4 = Popper;
var Anchor = PopperAnchor;
var Content = PopperContent;
var Arrow2 = PopperArrow;

// node_modules/@radix-ui/react-presence/dist/index.module.js
var t7 = __toESM(require_react());
var Presence = (u5) => {
  const { present: o9, children: i6 } = u5, s6 = function(n6) {
    const [u6, o10] = t7.useState(), i7 = t7.useRef({}), s7 = t7.useRef(n6), c7 = t7.useRef("none"), a6 = n6 ? "mounted" : "unmounted", [d5, m5] = function(e11, n7) {
      return t7.useReducer((e12, t12) => {
        const r12 = n7[e12][t12];
        return null != r12 ? r12 : e12;
      }, e11);
    }(a6, { mounted: { UNMOUNT: "unmounted", ANIMATION_OUT: "unmountSuspended" }, unmountSuspended: { MOUNT: "mounted", ANIMATION_END: "unmounted" }, unmounted: { MOUNT: "mounted" } });
    return t7.useEffect(() => {
      const e11 = r9(i7.current);
      c7.current = "mounted" === d5 ? e11 : "none";
    }, [d5]), useLayoutEffect2(() => {
      const e11 = i7.current, t12 = s7.current;
      if (t12 !== n6) {
        const u7 = c7.current, o11 = r9(e11);
        if (n6)
          m5("MOUNT");
        else if ("none" === o11 || "none" === (null == e11 ? void 0 : e11.display))
          m5("UNMOUNT");
        else {
          const e12 = u7 !== o11;
          m5(t12 && e12 ? "ANIMATION_OUT" : "UNMOUNT");
        }
        s7.current = n6;
      }
    }, [n6, m5]), useLayoutEffect2(() => {
      if (u6) {
        const e11 = (e12) => {
          const n8 = r9(i7.current).includes(e12.animationName);
          e12.target === u6 && n8 && m5("ANIMATION_END");
        }, n7 = (e12) => {
          e12.target === u6 && (c7.current = r9(i7.current));
        };
        return u6.addEventListener("animationstart", n7), u6.addEventListener("animationcancel", e11), u6.addEventListener("animationend", e11), () => {
          u6.removeEventListener("animationstart", n7), u6.removeEventListener("animationcancel", e11), u6.removeEventListener("animationend", e11);
        };
      }
    }, [u6, m5]), { isPresent: ["mounted", "unmountSuspended"].includes(d5), ref: t7.useCallback((e11) => {
      e11 && (i7.current = getComputedStyle(e11)), o10(e11);
    }, []) };
  }(o9), c6 = "function" == typeof i6 ? i6({ present: s6.isPresent }) : t7.Children.only(i6), a5 = useComposedRefs(s6.ref, c6.ref);
  return "function" == typeof i6 || s6.isPresent ? t7.cloneElement(c6, { ref: a5 }) : null;
};
function r9(e11) {
  return (null == e11 ? void 0 : e11.animationName) || "none";
}
Presence.displayName = "Presence";

// node_modules/@radix-ui/react-use-previous/dist/index.module.js
var e7 = __toESM(require_react());
function usePrevious(r12) {
  const t12 = e7.useRef(r12);
  return e7.useEffect(() => {
    t12.current = r12;
  }, [r12]), t12.current;
}

// node_modules/@radix-ui/react-use-callback-ref/dist/index.module.js
var e8 = __toESM(require_react());
function useCallbackRef(r12) {
  const t12 = e8.useRef(r12);
  return e8.useEffect(() => {
    t12.current = r12;
  }), e8.useMemo(() => (...e11) => {
    var r13;
    return null === (r13 = t12.current) || void 0 === r13 ? void 0 : r13.call(t12, ...e11);
  }, []);
}

// node_modules/@radix-ui/react-use-escape-keydown/dist/index.module.js
var t8 = __toESM(require_react());
function useEscapeKeydown(n6) {
  const o9 = useCallbackRef(n6);
  t8.useEffect(() => {
    const e11 = (e12) => {
      "Escape" === e12.key && o9(e12);
    };
    return document.addEventListener("keydown", e11), () => document.removeEventListener("keydown", e11);
  }, [o9]);
}

// node_modules/@radix-ui/react-use-controllable-state/dist/index.module.js
var t9 = __toESM(require_react());
function useControllableState({ prop: o9, defaultProp: r12, onChange: n6 = () => {
} }) {
  const [a5, u5] = function({ defaultProp: o10, onChange: r13 }) {
    const n7 = t9.useState(o10), [a6] = n7, u6 = t9.useRef(a6), c7 = useCallbackRef(r13);
    return t9.useEffect(() => {
      u6.current !== a6 && (c7(a6), u6.current = a6);
    }, [a6, u6, c7]), n7;
  }({ defaultProp: r12, onChange: n6 }), c6 = void 0 !== o9, f5 = c6 ? o9 : a5, l6 = useCallbackRef(n6);
  return [f5, t9.useCallback((e11) => {
    if (c6) {
      const t12 = e11, r13 = "function" == typeof e11 ? t12(o9) : e11;
      r13 !== o9 && l6(r13);
    } else
      u5(e11);
  }, [c6, o9, u5, l6])];
}

// node_modules/@radix-ui/primitive/dist/index.module.js
function composeEventHandlers(e11, n6, { checkForDefaultPrevented: t12 = true } = {}) {
  return function(r12) {
    if (null == e11 || e11(r12), false === t12 || !r12.defaultPrevented)
      return null == n6 ? void 0 : n6(r12);
  };
}

// node_modules/@radix-ui/react-tooltip/dist/index.module.js
var T2 = __toESM(require_react());
var [w2, x2] = createContextScope("Tooltip", [l3]);
var g2 = l3();
var E2 = 700;
var [v2, b2] = w2("TooltipProvider", { isOpenDelayed: true, delayDuration: E2, onOpen: () => {
}, onClose: () => {
} });
var [y2, _] = w2("Tooltip");
var Tooltip = (o9) => {
  const { __scopeTooltip: t12, children: r12, open: i6, defaultOpen: a5 = false, onOpenChange: l6, delayDuration: c6 } = o9, s6 = b2("Tooltip", t12), u5 = g2(t12), [d5, m5] = T2.useState(null), f5 = useId(), C2 = T2.useRef(0), w5 = null != c6 ? c6 : s6.delayDuration, x4 = T2.useRef(false), { onOpen: E3, onClose: v5 } = s6, [_3 = false, h5] = useControllableState({ prop: i6, defaultProp: a5, onChange: (e11) => {
    e11 && (document.dispatchEvent(new CustomEvent("tooltip.open")), E3()), null == l6 || l6(e11);
  } }), k4 = T2.useMemo(() => _3 ? x4.current ? "delayed-open" : "instant-open" : "closed", [_3]), D2 = T2.useCallback(() => {
    window.clearTimeout(C2.current), x4.current = false, h5(true);
  }, [h5]), O2 = T2.useCallback(() => {
    window.clearTimeout(C2.current), C2.current = window.setTimeout(() => {
      x4.current = true, h5(true);
    }, w5);
  }, [w5, h5]);
  return T2.useEffect(() => () => window.clearTimeout(C2.current), []), T2.createElement(Root4, u5, T2.createElement(y2, { scope: t12, contentId: f5, open: _3, stateAttribute: k4, trigger: d5, onTriggerChange: m5, onTriggerEnter: T2.useCallback(() => {
    s6.isOpenDelayed ? O2() : D2();
  }, [s6.isOpenDelayed, O2, D2]), onOpen: T2.useCallback(D2, [D2]), onClose: T2.useCallback(() => {
    window.clearTimeout(C2.current), h5(false), v5();
  }, [h5, v5]) }, r12));
};
var TooltipTrigger = T2.forwardRef((e11, o9) => {
  const { __scopeTooltip: t12, ...r12 } = e11, i6 = _("TooltipTrigger", t12), l6 = g2(t12), c6 = useComposedRefs(o9, i6.onTriggerChange), s6 = T2.useRef(false), u5 = T2.useCallback(() => s6.current = false, []);
  return T2.useEffect(() => () => document.removeEventListener("mouseup", u5), [u5]), T2.createElement(Anchor, _extends({ asChild: true }, l6), T2.createElement(Primitive.button, _extends({ "aria-describedby": i6.open ? i6.contentId : void 0, "data-state": i6.stateAttribute }, r12, { ref: c6, onMouseEnter: composeEventHandlers(e11.onMouseEnter, i6.onTriggerEnter), onMouseLeave: composeEventHandlers(e11.onMouseLeave, i6.onClose), onMouseDown: composeEventHandlers(e11.onMouseDown, () => {
    i6.onClose(), s6.current = true, document.addEventListener("mouseup", u5, { once: true });
  }), onFocus: composeEventHandlers(e11.onFocus, () => {
    s6.current || i6.onOpen();
  }), onBlur: composeEventHandlers(e11.onBlur, i6.onClose), onClick: composeEventHandlers(e11.onClick, i6.onClose) })));
});
var TooltipContent = T2.forwardRef((e11, o9) => {
  const { forceMount: t12, ...r12 } = e11, n6 = _("TooltipContent", e11.__scopeTooltip);
  return T2.createElement(Presence, { present: t12 || n6.open }, T2.createElement(h2, _extends({ ref: o9 }, r12)));
});
var h2 = T2.forwardRef((e11, i6) => {
  const { __scopeTooltip: a5, children: l6, "aria-label": c6, portalled: s6 = true, ...p5 } = e11, d5 = _("TooltipContent", a5), m5 = g2(a5), f5 = s6 ? Portal : T2.Fragment, { onClose: w5 } = d5;
  return useEscapeKeydown(() => w5()), T2.useEffect(() => (document.addEventListener("tooltip.open", w5), () => document.removeEventListener("tooltip.open", w5)), [w5]), T2.createElement(f5, null, T2.createElement(k2, { __scopeTooltip: a5 }), T2.createElement(Content, _extends({ "data-state": d5.stateAttribute }, m5, p5, { ref: i6, style: { ...p5.style, "--radix-tooltip-content-transform-origin": "var(--radix-popper-transform-origin)" } }), T2.createElement(Slottable, null, l6), T2.createElement(Root2, { id: d5.contentId, role: "tooltip" }, c6 || l6)));
});
var TooltipArrow = T2.forwardRef((e11, o9) => {
  const { __scopeTooltip: t12, ...r12 } = e11, i6 = g2(t12);
  return T2.createElement(Arrow2, _extends({}, i6, r12, { ref: o9 }));
});
function k2(e11) {
  const { __scopeTooltip: o9 } = e11, t12 = _("CheckTriggerMoved", o9), r12 = useRect(t12.trigger), n6 = null == r12 ? void 0 : r12.left, i6 = usePrevious(n6), a5 = null == r12 ? void 0 : r12.top, l6 = usePrevious(a5), u5 = t12.onClose;
  return T2.useEffect(() => {
    (void 0 !== i6 && i6 !== n6 || void 0 !== l6 && l6 !== a5) && u5();
  }, [u5, i6, l6, n6, a5]), null;
}
var Root5 = Tooltip;
var Trigger = TooltipTrigger;
var Content2 = TooltipContent;
var Arrow3 = TooltipArrow;

// node_modules/leva/dist/vector-plugin-e3326e0a.esm.js
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i6;
  for (i6 = 0; i6 < sourceKeys.length; i6++) {
    key = sourceKeys[i6];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _objectWithoutProperties(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose(source, excluded);
  var key, i6;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i6 = 0; i6 < sourceSymbolKeys.length; i6++) {
      key = sourceSymbolKeys[i6];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
var LevaErrors;
(function(LevaErrors2) {
  LevaErrors2[LevaErrors2["UNSUPPORTED_INPUT"] = 0] = "UNSUPPORTED_INPUT";
  LevaErrors2[LevaErrors2["NO_COMPONENT_FOR_TYPE"] = 1] = "NO_COMPONENT_FOR_TYPE";
  LevaErrors2[LevaErrors2["UNKNOWN_INPUT"] = 2] = "UNKNOWN_INPUT";
  LevaErrors2[LevaErrors2["DUPLICATE_KEYS"] = 3] = "DUPLICATE_KEYS";
  LevaErrors2[LevaErrors2["ALREADY_REGISTERED_TYPE"] = 4] = "ALREADY_REGISTERED_TYPE";
  LevaErrors2[LevaErrors2["CLIPBOARD_ERROR"] = 5] = "CLIPBOARD_ERROR";
  LevaErrors2[LevaErrors2["THEME_ERROR"] = 6] = "THEME_ERROR";
  LevaErrors2[LevaErrors2["PATH_DOESNT_EXIST"] = 7] = "PATH_DOESNT_EXIST";
  LevaErrors2[LevaErrors2["INPUT_TYPE_OVERRIDE"] = 8] = "INPUT_TYPE_OVERRIDE";
  LevaErrors2[LevaErrors2["EMPTY_KEY"] = 9] = "EMPTY_KEY";
})(LevaErrors || (LevaErrors = {}));
var ErrorList = {
  [LevaErrors.UNSUPPORTED_INPUT]: (type, path) => [`An input with type \`${type}\` input was found at path \`${path}\` but it's not supported yet.`],
  [LevaErrors.NO_COMPONENT_FOR_TYPE]: (type, path) => [`Type \`${type}\` found at path \`${path}\` can't be displayed in panel because no component supports it yet.`],
  [LevaErrors.UNKNOWN_INPUT]: (path, value) => [`input at path \`${path}\` is not recognized.`, value],
  [LevaErrors.DUPLICATE_KEYS]: (key, path, prevPath) => [`Key \`${key}\` of path \`${path}\` already exists at path \`${prevPath}\`. Even nested keys need to be unique. Rename one of the keys.`],
  [LevaErrors.ALREADY_REGISTERED_TYPE]: (type) => [`Type ${type} has already been registered. You can't register a component with the same type.`],
  [LevaErrors.CLIPBOARD_ERROR]: (value) => [`Error copying the value`, value],
  [LevaErrors.THEME_ERROR]: (category, key) => [`Error accessing the theme \`${category}.${key}\` value.`],
  [LevaErrors.PATH_DOESNT_EXIST]: (path) => [`Error getting the value at path \`${path}\`. There is probably an error in your \`render\` function.`],
  [LevaErrors.PATH_DOESNT_EXIST]: (path) => [`Error accessing the value at path \`${path}\``],
  [LevaErrors.INPUT_TYPE_OVERRIDE]: (path, type, wrongType) => [`Input at path \`${path}\` already exists with type: \`${type}\`. Its type cannot be overridden with type \`${wrongType}\`.`],
  [LevaErrors.EMPTY_KEY]: () => ["Keys can not be empty, if you want to hide a label use whitespace."]
};
function _log(fn, errorType, ...args) {
  const [message, ...rest2] = ErrorList[errorType](...args);
  console[fn]("LEVA: " + message, ...rest2);
}
var warn = _log.bind(null, "warn");
var log = _log.bind(null, "log");
var _excluded$a = ["value"];
var _excluded2$4 = ["schema"];
var _excluded3$1 = ["value"];
var Schemas = [];
var Plugins = {};
function getValueType(_ref) {
  let {
    value
  } = _ref, settings = _objectWithoutProperties(_ref, _excluded$a);
  for (let checker of Schemas) {
    const type = checker(value, settings);
    if (type)
      return type;
  }
  return void 0;
}
function register(type, _ref2) {
  let {
    schema: schema4
  } = _ref2, plugin2 = _objectWithoutProperties(_ref2, _excluded2$4);
  if (type in Plugins) {
    warn(LevaErrors.ALREADY_REGISTERED_TYPE, type);
    return;
  }
  Schemas.push((value, settings) => schema4(value, settings) && type);
  Plugins[type] = plugin2;
}
function createInternalPlugin(plugin2) {
  return plugin2;
}
function normalize$2(type, input, path, data) {
  const {
    normalize: _normalize
  } = Plugins[type];
  if (_normalize)
    return _normalize(input, path, data);
  if (typeof input !== "object" || !("value" in input))
    return {
      value: input
    };
  const {
    value
  } = input, settings = _objectWithoutProperties(input, _excluded3$1);
  return {
    value,
    settings
  };
}
function sanitize$4(type, value, settings, prevValue, path, store) {
  const {
    sanitize: sanitize3
  } = Plugins[type];
  if (sanitize3)
    return sanitize3(value, settings, prevValue, path, store);
  return value;
}
function format$2(type, value, settings) {
  const {
    format: format3
  } = Plugins[type];
  if (format3)
    return format3(value, settings);
  return value;
}
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
function ownKeys(object2, enumerableOnly) {
  var keys = Object.keys(object2);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object2);
    if (enumerableOnly) {
      symbols = symbols.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object2, sym).enumerable;
      });
    }
    keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread2(target) {
  for (var i6 = 1; i6 < arguments.length; i6++) {
    var source = arguments[i6] != null ? arguments[i6] : {};
    if (i6 % 2) {
      ownKeys(Object(source), true).forEach(function(key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
var clamp = (x4, min, max) => x4 > max ? max : x4 < min ? min : x4;
var parseNumber = (v5) => {
  if (v5 === "" || typeof v5 === "number")
    return v5;
  try {
    const _v = evaluate(v5);
    if (!isNaN(_v))
      return _v;
  } catch (_unused) {
  }
  return parseFloat(v5);
};
var log10 = Math.log(10);
function getStep(number4) {
  let n6 = Math.abs(+String(number4).replace(".", ""));
  if (n6 === 0)
    return 0.01;
  while (n6 !== 0 && n6 % 10 === 0)
    n6 /= 10;
  const significantDigits = Math.floor(Math.log(n6) / log10) + 1;
  const numberLog = Math.floor(Math.log10(Math.abs(number4)));
  const step = Math.pow(10, numberLog - significantDigits);
  return Math.max(step, 1e-3);
}
var range2 = (v5, min, max) => {
  if (max === min)
    return 0;
  const _v = clamp(v5, min, max);
  return (_v - min) / (max - min);
};
var invertedRange = (p5, min, max) => p5 * (max - min) + min;
var getUid = () => "_" + Math.random().toString(36).substr(2, 9);
var parens = /\(([0-9+\-*/^ .]+)\)/;
var exp = /(\d+(?:\.\d+)?) ?\^ ?(\d+(?:\.\d+)?)/;
var mul = /(\d+(?:\.\d+)?) ?\* ?(\d+(?:\.\d+)?)/;
var div = /(\d+(?:\.\d+)?) ?\/ ?(\d+(?:\.\d+)?)/;
var add = /(\d+(?:\.\d+)?) ?\+ ?(\d+(?:\.\d+)?)/;
var sub = /(\d+(?:\.\d+)?) ?- ?(\d+(?:\.\d+)?)/;
function evaluate(expr) {
  if (isNaN(Number(expr))) {
    if (parens.test(expr)) {
      const newExpr = expr.replace(parens, (match, subExpr) => String(evaluate(subExpr)));
      return evaluate(newExpr);
    } else if (exp.test(expr)) {
      const newExpr = expr.replace(exp, (match, base, pow) => String(Math.pow(Number(base), Number(pow))));
      return evaluate(newExpr);
    } else if (mul.test(expr)) {
      const newExpr = expr.replace(mul, (match, a5, b5) => String(Number(a5) * Number(b5)));
      return evaluate(newExpr);
    } else if (div.test(expr)) {
      const newExpr = expr.replace(div, (match, a5, b5) => {
        if (b5 != 0)
          return String(Number(a5) / Number(b5));
        else
          throw new Error("Division by zero");
      });
      return evaluate(newExpr);
    } else if (add.test(expr)) {
      const newExpr = expr.replace(add, (match, a5, b5) => String(Number(a5) + Number(b5)));
      return evaluate(newExpr);
    } else if (sub.test(expr)) {
      const newExpr = expr.replace(sub, (match, a5, b5) => String(Number(a5) - Number(b5)));
      return evaluate(newExpr);
    } else {
      return Number(expr);
    }
  }
  return Number(expr);
}
function pick(object2, keys) {
  return keys.reduce((obj, key) => {
    if (!!object2 && object2.hasOwnProperty(key)) {
      obj[key] = object2[key];
    }
    return obj;
  }, {});
}
function omit(object2, keys) {
  const obj = _objectSpread2({}, object2);
  keys.forEach((k4) => k4 in object2 && delete obj[k4]);
  return obj;
}
function mapArrayToKeys(value, keys) {
  return value.reduce((acc, v5, i6) => Object.assign(acc, {
    [keys[i6]]: v5
  }), {});
}
var SpecialInputs;
(function(SpecialInputs2) {
  SpecialInputs2["BUTTON"] = "BUTTON";
  SpecialInputs2["BUTTON_GROUP"] = "BUTTON_GROUP";
  SpecialInputs2["MONITOR"] = "MONITOR";
  SpecialInputs2["FOLDER"] = "FOLDER";
})(SpecialInputs || (SpecialInputs = {}));
var LevaInputs;
(function(LevaInputs2) {
  LevaInputs2["SELECT"] = "SELECT";
  LevaInputs2["IMAGE"] = "IMAGE";
  LevaInputs2["NUMBER"] = "NUMBER";
  LevaInputs2["COLOR"] = "COLOR";
  LevaInputs2["STRING"] = "STRING";
  LevaInputs2["BOOLEAN"] = "BOOLEAN";
  LevaInputs2["INTERVAL"] = "INTERVAL";
  LevaInputs2["VECTOR3D"] = "VECTOR3D";
  LevaInputs2["VECTOR2D"] = "VECTOR2D";
})(LevaInputs || (LevaInputs = {}));
var _excluded$9 = ["type", "__customInput"];
var _excluded2$3 = ["render", "label", "optional", "disabled", "hint", "onChange", "onEditStart", "onEditEnd", "transient"];
var _excluded3 = ["type"];
function parseOptions(_input, key, mergedOptions = {}, customType) {
  if (typeof _input !== "object" || Array.isArray(_input)) {
    return {
      type: customType,
      input: _input,
      options: _objectSpread2({
        key,
        label: key,
        optional: false,
        disabled: false
      }, mergedOptions)
    };
  }
  if ("__customInput" in _input) {
    const {
      type: _type,
      __customInput
    } = _input, options = _objectWithoutProperties(_input, _excluded$9);
    return parseOptions(__customInput, key, options, _type);
  }
  const {
    render,
    label,
    optional: optional2,
    disabled,
    hint,
    onChange,
    onEditStart,
    onEditEnd,
    transient
  } = _input, inputWithType = _objectWithoutProperties(_input, _excluded2$3);
  const commonOptions = _objectSpread2({
    render,
    key,
    label: label !== null && label !== void 0 ? label : key,
    hint,
    transient: transient !== null && transient !== void 0 ? transient : !!onChange,
    onEditStart,
    onEditEnd
  }, mergedOptions);
  let {
    type
  } = inputWithType, input = _objectWithoutProperties(inputWithType, _excluded3);
  type = customType !== null && customType !== void 0 ? customType : type;
  if (type in SpecialInputs) {
    return {
      type,
      input,
      options: commonOptions
    };
  }
  return {
    type,
    input,
    options: _objectSpread2(_objectSpread2({}, commonOptions), {}, {
      onChange,
      optional: optional2 !== null && optional2 !== void 0 ? optional2 : false,
      disabled: disabled !== null && disabled !== void 0 ? disabled : false
    })
  };
}
function normalizeInput(_input, key, path, data) {
  const parsedInputAndOptions = parseOptions(_input, key);
  const {
    type,
    input: parsedInput,
    options
  } = parsedInputAndOptions;
  if (type) {
    if (type in SpecialInputs)
      return parsedInputAndOptions;
    return {
      type,
      input: normalize$2(type, parsedInput, path, data),
      options
    };
  }
  let inputType = getValueType(parsedInput);
  if (inputType)
    return {
      type: inputType,
      input: normalize$2(inputType, parsedInput, path, data),
      options
    };
  inputType = getValueType({
    value: parsedInput
  });
  if (inputType)
    return {
      type: inputType,
      input: normalize$2(inputType, {
        value: parsedInput
      }, path, data),
      options
    };
  return false;
}
function updateInput(input, newValue, path, store, fromPanel) {
  const {
    value,
    type,
    settings
  } = input;
  input.value = sanitizeValue({
    type,
    value,
    settings
  }, newValue, path, store);
  input.fromPanel = fromPanel;
}
var ValueError = function ValueError2(message, value, error) {
  this.type = "LEVA_ERROR";
  this.message = "LEVA: " + message;
  this.previousValue = value;
  this.error = error;
};
function sanitizeValue({
  type,
  value,
  settings
}, newValue, path, store) {
  const _newValue = type !== "SELECT" && typeof newValue === "function" ? newValue(value) : newValue;
  let sanitizedNewValue;
  try {
    sanitizedNewValue = sanitize$4(type, _newValue, settings, value, path, store);
  } catch (e11) {
    throw new ValueError(`The value \`${newValue}\` did not result in a correct value.`, value, e11);
  }
  if (dequal(sanitizedNewValue, value)) {
    throw new ValueError(`The value \`${newValue}\` did not result in a value update, which remained the same: \`${value}\`.
        You can ignore this warning if this is the intended behavior.`, value);
  }
  return sanitizedNewValue;
}
var debounce = (callback, wait, immediate = false) => {
  let timeout = 0;
  return function() {
    const args = arguments;
    const callNow = immediate && !timeout;
    const next = () => callback.apply(this, args);
    window.clearTimeout(timeout);
    timeout = window.setTimeout(next, wait);
    if (callNow)
      next();
  };
};
var multiplyStep = (event) => event.shiftKey ? 5 : event.altKey ? 1 / 5 : 1;
var _excluded$8 = ["value"];
var _excluded2$2 = ["min", "max"];
var schema$3 = (o9) => typeof o9 === "number" || typeof o9 === "string" && !isNaN(parseFloat(o9));
var sanitize$3 = (v5, {
  min: _min = -Infinity,
  max: _max = Infinity,
  suffix
}) => {
  const _v = parseFloat(v5);
  if (v5 === "" || isNaN(_v))
    throw Error("Invalid number");
  const f5 = clamp(_v, _min, _max);
  return suffix ? f5 + suffix : f5;
};
var format$1 = (v5, {
  pad: _pad = 0,
  suffix
}) => {
  const f5 = parseFloat(v5).toFixed(_pad);
  return suffix ? f5 + suffix : f5;
};
var normalize$1 = (_ref) => {
  let {
    value
  } = _ref, settings = _objectWithoutProperties(_ref, _excluded$8);
  const {
    min = -Infinity,
    max = Infinity
  } = settings, _settings = _objectWithoutProperties(settings, _excluded2$2);
  const _value = clamp(parseFloat(value), min, max);
  let suffix;
  if (!Number.isFinite(value)) {
    const match = String(value).match(/[A-Z]+/i);
    if (match)
      suffix = match[0];
  }
  let step = settings.step;
  if (!step) {
    if (Number.isFinite(min)) {
      if (Number.isFinite(max))
        step = +(Math.abs(max - min) / 100).toPrecision(1);
      else
        step = +(Math.abs(_value - min) / 100).toPrecision(1);
    } else if (Number.isFinite(max))
      step = +(Math.abs(max - _value) / 100).toPrecision(1);
  }
  const padStep = step ? getStep(step) * 10 : getStep(_value);
  step = step || padStep / 10;
  const pad = Math.round(clamp(Math.log10(1 / padStep), 0, 2));
  return {
    value: suffix ? _value + suffix : _value,
    settings: _objectSpread2({
      initialValue: _value,
      step,
      pad,
      min,
      max,
      suffix
    }, _settings)
  };
};
var sanitizeStep$1 = (v5, {
  step,
  initialValue
}) => {
  const steps = Math.round((v5 - initialValue) / step);
  return initialValue + steps * step;
};
var props$3 = Object.freeze({
  __proto__: null,
  schema: schema$3,
  sanitize: sanitize$3,
  format: format$1,
  normalize: normalize$1,
  sanitizeStep: sanitizeStep$1
});
function _extends2() {
  _extends2 = Object.assign || function(target) {
    for (var i6 = 1; i6 < arguments.length; i6++) {
      var source = arguments[i6];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends2.apply(this, arguments);
}
var InputContext = (0, import_react2.createContext)({});
function useInputContext() {
  return (0, import_react2.useContext)(InputContext);
}
var ThemeContext = (0, import_react2.createContext)(null);
var StoreContext = (0, import_react2.createContext)(null);
var PanelSettingsContext = (0, import_react2.createContext)(null);
function useStoreContext() {
  return (0, import_react2.useContext)(StoreContext);
}
function usePanelSettingsContext() {
  return (0, import_react2.useContext)(PanelSettingsContext);
}
function LevaStoreProvider({
  children,
  store
}) {
  return import_react2.default.createElement(StoreContext.Provider, {
    value: store
  }, children);
}
var getDefaultTheme = () => ({
  colors: {
    elevation1: "#292d39",
    elevation2: "#181c20",
    elevation3: "#373c4b",
    accent1: "#0066dc",
    accent2: "#007bff",
    accent3: "#3c93ff",
    highlight1: "#535760",
    highlight2: "#8c92a4",
    highlight3: "#fefefe",
    vivid1: "#ffcc00",
    folderWidgetColor: "$highlight2",
    folderTextColor: "$highlight3",
    toolTipBackground: "$highlight3",
    toolTipText: "$elevation2"
  },
  radii: {
    xs: "2px",
    sm: "3px",
    lg: "10px"
  },
  space: {
    xs: "3px",
    sm: "6px",
    md: "10px",
    rowGap: "7px",
    colGap: "7px"
  },
  fonts: {
    mono: `ui-monospace, SFMono-Regular, Menlo, 'Roboto Mono', monospace`,
    sans: `system-ui, sans-serif`
  },
  fontSizes: {
    root: "11px",
    toolTip: "$root"
  },
  sizes: {
    rootWidth: "280px",
    controlWidth: "160px",
    numberInputMinWidth: "38px",
    scrubberWidth: "8px",
    scrubberHeight: "16px",
    rowHeight: "24px",
    folderTitleHeight: "20px",
    checkboxSize: "16px",
    joystickWidth: "100px",
    joystickHeight: "100px",
    colorPickerWidth: "$controlWidth",
    colorPickerHeight: "100px",
    imagePreviewWidth: "$controlWidth",
    imagePreviewHeight: "100px",
    monitorHeight: "60px",
    titleBarHeight: "39px"
  },
  shadows: {
    level1: "0 0 9px 0 #00000088",
    level2: "0 4px 14px #00000033"
  },
  borderWidths: {
    root: "0px",
    input: "1px",
    focus: "1px",
    hover: "1px",
    active: "1px",
    folder: "1px"
  },
  fontWeights: {
    label: "normal",
    folder: "normal",
    button: "normal"
  }
});
function createStateClass(value, options) {
  const [borderColor, bgColor] = value.split(" ");
  const css2 = {};
  if (borderColor !== "none") {
    css2.boxShadow = `${options.inset ? "inset " : ""}0 0 0 $borderWidths${[options.key]} $colors${borderColor !== "default" && borderColor || options.borderColor}`;
  }
  if (bgColor) {
    css2.backgroundColor = bgColor;
  }
  return css2;
}
var utils = {
  $inputStyle: () => (value) => createStateClass(value, {
    key: "$input",
    borderColor: "$highlight1",
    inset: true
  }),
  $focusStyle: () => (value) => createStateClass(value, {
    key: "$focus",
    borderColor: "$accent2"
  }),
  $hoverStyle: () => (value) => createStateClass(value, {
    key: "$hover",
    borderColor: "$accent1",
    inset: true
  }),
  $activeStyle: () => (value) => createStateClass(value, {
    key: "$active",
    borderColor: "$accent1",
    inset: true
  })
};
var {
  styled,
  css,
  createTheme,
  globalCss,
  keyframes
} = q({
  prefix: "leva",
  theme: getDefaultTheme(),
  utils: _objectSpread2(_objectSpread2({}, utils), {}, {
    $flex: () => ({
      display: "flex",
      alignItems: "center"
    }),
    $flexCenter: () => ({
      display: "flex",
      alignItems: "center",
      justifyContent: "center"
    }),
    $reset: () => ({
      outline: "none",
      fontSize: "inherit",
      fontWeight: "inherit",
      color: "inherit",
      fontFamily: "inherit",
      border: "none",
      backgroundColor: "transparent",
      appearance: "none"
    }),
    $draggable: () => ({
      touchAction: "none",
      WebkitUserDrag: "none",
      userSelect: "none"
    }),
    $focus: (value) => ({
      "&:focus": utils.$focusStyle()(value)
    }),
    $focusWithin: (value) => ({
      "&:focus-within": utils.$focusStyle()(value)
    }),
    $hover: (value) => ({
      "&:hover": utils.$hoverStyle()(value)
    }),
    $active: (value) => ({
      "&:active": utils.$activeStyle()(value)
    })
  })
});
var globalStyles = globalCss({
  ".panel__dragged": {
    WebkitUserDrag: "none",
    userSelect: "none",
    input: {
      userSelect: "none"
    },
    "*": {
      cursor: "ew-resize !important"
    }
  }
});
globalStyles();
function mergeTheme(newTheme) {
  const defaultTheme = getDefaultTheme();
  if (!newTheme)
    return {
      theme: defaultTheme,
      className: ""
    };
  Object.keys(newTheme).forEach((key) => {
    Object.assign(defaultTheme[key], newTheme[key]);
  });
  const customTheme = createTheme(defaultTheme);
  return {
    theme: defaultTheme,
    className: customTheme.className
  };
}
function useTh(category, key) {
  const {
    theme
  } = (0, import_react2.useContext)(ThemeContext);
  if (!(category in theme) || !(key in theme[category])) {
    warn(LevaErrors.THEME_ERROR, category, key);
    return "";
  }
  let _key = key;
  while (true) {
    let value = theme[category][_key];
    if (typeof value === "string" && value.charAt(0) === "$")
      _key = value.substr(1);
    else
      return value;
  }
}
var StyledInput = styled("input", {
  $reset: "",
  padding: "0 $sm",
  width: 0,
  minWidth: 0,
  flex: 1,
  height: "100%",
  variants: {
    levaType: {
      number: {
        textAlign: "right"
      }
    }
  }
});
var InnerLabel = styled("div", {
  $draggable: "",
  height: "100%",
  $flexCenter: "",
  position: "relative",
  padding: "0 $xs",
  fontSize: "0.8em",
  opacity: 0.8,
  cursor: "default",
  touchAction: "none",
  [`& + ${StyledInput}`]: {
    paddingLeft: 0
  }
});
var InnerNumberLabel = styled(InnerLabel, {
  cursor: "ew-resize",
  marginRight: "-$xs",
  textTransform: "uppercase",
  opacity: 0.3,
  "&:hover": {
    opacity: 1
  },
  variants: {
    dragging: {
      true: {
        backgroundColor: "$accent2",
        opacity: 1
      }
    }
  }
});
var InputContainer = styled("div", {
  $flex: "",
  position: "relative",
  borderRadius: "$sm",
  overflow: "hidden",
  color: "inherit",
  height: "$rowHeight",
  backgroundColor: "$elevation3",
  $inputStyle: "$elevation1",
  $hover: "",
  $focusWithin: ""
});
var _excluded$7 = ["innerLabel", "value", "onUpdate", "onChange", "onKeyDown", "type", "id"];
var _excluded2$1 = ["onUpdate"];
function ValueInput(_ref) {
  let {
    innerLabel,
    value,
    onUpdate,
    onChange,
    onKeyDown,
    type,
    id
  } = _ref, props3 = _objectWithoutProperties(_ref, _excluded$7);
  const {
    id: _id,
    emitOnEditStart,
    emitOnEditEnd
  } = useInputContext();
  const inputId = id || _id;
  const inputRef = (0, import_react2.useRef)(null);
  const update = (0, import_react2.useCallback)((fn) => (event) => {
    const _value = event.currentTarget.value;
    fn(_value);
  }, []);
  import_react2.default.useEffect(() => {
    const ref = inputRef.current;
    const _onUpdate = update((value2) => {
      onUpdate(value2);
      emitOnEditEnd();
    });
    ref === null || ref === void 0 ? void 0 : ref.addEventListener("blur", _onUpdate);
    return () => ref === null || ref === void 0 ? void 0 : ref.removeEventListener("blur", _onUpdate);
  }, [update, onUpdate, emitOnEditEnd]);
  const onKeyPress = (0, import_react2.useCallback)((event) => {
    if (event.key === "Enter") {
      update(onUpdate)(event);
    }
  }, [update, onUpdate]);
  return import_react2.default.createElement(InputContainer, null, innerLabel && typeof innerLabel === "string" ? import_react2.default.createElement(InnerLabel, null, innerLabel) : innerLabel, import_react2.default.createElement(StyledInput, _extends2({
    levaType: type,
    ref: inputRef,
    id: inputId,
    type: "text",
    autoComplete: "off",
    spellCheck: "false",
    value,
    onChange: update(onChange),
    onFocus: () => emitOnEditStart(),
    onKeyPress,
    onKeyDown
  }, props3)));
}
function NumberInput(_ref2) {
  let {
    onUpdate
  } = _ref2, props3 = _objectWithoutProperties(_ref2, _excluded2$1);
  const _onUpdate = (0, import_react2.useCallback)((v5) => onUpdate(parseNumber(v5)), [onUpdate]);
  const onKeyDown = (0, import_react2.useCallback)((event) => {
    const dir = event.key === "ArrowUp" ? 1 : event.key === "ArrowDown" ? -1 : 0;
    if (dir) {
      event.preventDefault();
      const step = event.altKey ? 0.1 : event.shiftKey ? 10 : 1;
      onUpdate((v5) => parseFloat(v5) + dir * step);
    }
  }, [onUpdate]);
  return import_react2.default.createElement(ValueInput, _extends2({}, props3, {
    onUpdate: _onUpdate,
    onKeyDown,
    type: "number"
  }));
}
var StyledFolder = styled("div", {});
var StyledWrapper = styled("div", {
  position: "relative",
  background: "$elevation2",
  transition: "height 300ms ease",
  variants: {
    fill: {
      true: {},
      false: {}
    },
    flat: {
      false: {},
      true: {}
    },
    isRoot: {
      true: {},
      false: {
        paddingLeft: "$md",
        "&::after": {
          content: '""',
          position: "absolute",
          left: 0,
          top: 0,
          width: "$borderWidths$folder",
          height: "100%",
          backgroundColor: "$folderWidgetColor",
          opacity: 0.4,
          transform: "translateX(-50%)"
        }
      }
    }
  },
  compoundVariants: [{
    isRoot: true,
    fill: false,
    css: {
      overflowY: "auto",
      maxHeight: "calc(100vh - 20px - $$titleBarHeight)"
    }
  }, {
    isRoot: true,
    flat: false,
    css: {
      borderRadius: "$lg"
    }
  }]
});
var StyledTitle = styled("div", {
  $flex: "",
  color: "$folderTextColor",
  userSelect: "none",
  cursor: "pointer",
  height: "$folderTitleHeight",
  fontWeight: "$folder",
  "> svg": {
    marginLeft: -4,
    marginRight: 4,
    cursor: "pointer",
    fill: "$folderWidgetColor",
    opacity: 0.6
  },
  "&:hover > svg": {
    fill: "$folderWidgetColor"
  },
  [`&:hover + ${StyledWrapper}::after`]: {
    opacity: 0.6
  },
  [`${StyledFolder}:hover > & + ${StyledWrapper}::after`]: {
    opacity: 0.6
  },
  [`${StyledFolder}:hover > & > svg`]: {
    opacity: 1
  }
});
var StyledContent = styled("div", {
  position: "relative",
  display: "grid",
  gridTemplateColumns: "100%",
  rowGap: "$rowGap",
  transition: "opacity 250ms ease",
  variants: {
    toggled: {
      true: {
        opacity: 1,
        transitionDelay: "250ms"
      },
      false: {
        opacity: 0,
        transitionDelay: "0ms",
        pointerEvents: "none"
      }
    },
    isRoot: {
      true: {
        "& > div": {
          paddingLeft: "$md",
          paddingRight: "$md"
        },
        "& > div:first-of-type": {
          paddingTop: "$sm"
        },
        "& > div:last-of-type": {
          paddingBottom: "$sm"
        },
        [`> ${StyledFolder}:not(:first-of-type)`]: {
          paddingTop: "$sm",
          marginTop: "$md",
          borderTop: "$borderWidths$folder solid $colors$elevation1"
        }
      }
    }
  }
});
var StyledRow = styled("div", {
  position: "relative",
  zIndex: 100,
  display: "grid",
  rowGap: "$rowGap",
  gridTemplateRows: "minmax($sizes$rowHeight, max-content)",
  alignItems: "center",
  color: "$highlight2",
  [`${StyledContent} > &`]: {
    "&:first-of-type": {
      marginTop: "$rowGap"
    },
    "&:last-of-type": {
      marginBottom: "$rowGap"
    }
  },
  "&:hover,&:focus-within": {
    color: "$highlight3"
  }
});
var StyledInputRow = styled(StyledRow, {
  gridTemplateColumns: "auto $sizes$controlWidth",
  columnGap: "$colGap"
});
var CopyLabelContainer = styled("div", {
  $flex: "",
  height: "100%",
  position: "relative",
  overflow: "hidden",
  "& > div": {
    marginLeft: "$colGap",
    padding: "0 $xs",
    opacity: 0.4
  },
  "& > div:hover": {
    opacity: 0.8
  },
  "& > div > svg": {
    display: "none",
    cursor: "pointer",
    width: 13,
    minWidth: 13,
    height: 13,
    backgroundColor: "$elevation2"
  },
  "&:hover > div > svg": {
    display: "block"
  },
  variants: {
    align: {
      top: {
        height: "100%",
        alignItems: "flex-start",
        paddingTop: "$sm"
      }
    }
  }
});
var StyledOptionalToggle = styled("input", {
  $reset: "",
  height: 0,
  width: 0,
  opacity: 0,
  margin: 0,
  "& + label": {
    position: "relative",
    $flexCenter: "",
    height: "100%",
    userSelect: "none",
    cursor: "pointer",
    paddingLeft: 2,
    paddingRight: "$sm",
    pointerEvents: "auto"
  },
  "& + label:after": {
    content: '""',
    width: 6,
    height: 6,
    backgroundColor: "$elevation3",
    borderRadius: "50%",
    $activeStyle: ""
  },
  "&:focus + label:after": {
    $focusStyle: ""
  },
  "& + label:active:after": {
    backgroundColor: "$accent1",
    $focusStyle: ""
  },
  "&:checked + label:after": {
    backgroundColor: "$accent1"
  }
});
var StyledInputWrapper$1 = styled("div", {
  opacity: 1,
  variants: {
    disabled: {
      true: {
        opacity: 0.6,
        pointerEvents: "none"
      }
    }
  }
});
var StyledLabel = styled("label", {
  fontWeight: "$label",
  overflow: "hidden",
  textOverflow: "ellipsis",
  whiteSpace: "nowrap",
  "& > svg": {
    display: "block"
  }
});
var Overlay = styled("div", {
  position: "fixed",
  top: 0,
  bottom: 0,
  right: 0,
  left: 0,
  zIndex: 1e3,
  userSelect: "none"
});
var StyledToolTipContent = styled("div", {
  background: "$toolTipBackground",
  fontFamily: "$sans",
  fontSize: "$toolTip",
  padding: "$xs $sm",
  color: "$toolTipText",
  borderRadius: "$xs",
  boxShadow: "$level2",
  maxWidth: 260
});
var ToolTipArrow = styled(Arrow3, {
  fill: "$toolTipBackground"
});
function Portal2({
  children
}) {
  const {
    className
  } = (0, import_react2.useContext)(ThemeContext);
  return import_react2.default.createElement(Root, {
    className
  }, children);
}
var _excluded$6 = ["align"];
function OptionalToggle() {
  const {
    id,
    disable,
    disabled
  } = useInputContext();
  return import_react2.default.createElement(import_react2.default.Fragment, null, import_react2.default.createElement(StyledOptionalToggle, {
    id: id + "__disable",
    type: "checkbox",
    checked: !disabled,
    onChange: () => disable(!disabled)
  }), import_react2.default.createElement("label", {
    htmlFor: id + "__disable"
  }));
}
function RawLabel(props3) {
  const {
    id,
    optional: optional2,
    hint
  } = useInputContext();
  const htmlFor = props3.htmlFor || (id ? {
    htmlFor: id
  } : null);
  const title = !hint && typeof props3.children === "string" ? {
    title: props3.children
  } : null;
  return import_react2.default.createElement(import_react2.default.Fragment, null, optional2 && import_react2.default.createElement(OptionalToggle, null), hint !== void 0 ? import_react2.default.createElement(Root5, null, import_react2.default.createElement(Trigger, {
    asChild: true
  }, import_react2.default.createElement(StyledLabel, _extends2({}, htmlFor, props3))), import_react2.default.createElement(Content2, {
    side: "top",
    sideOffset: 2
  }, import_react2.default.createElement(StyledToolTipContent, null, hint, import_react2.default.createElement(ToolTipArrow, null)))) : import_react2.default.createElement(StyledLabel, _extends2({}, htmlFor, title, props3)));
}
function Label(_ref) {
  let {
    align
  } = _ref, props3 = _objectWithoutProperties(_ref, _excluded$6);
  const {
    value,
    label,
    key
  } = useInputContext();
  const {
    hideCopyButton
  } = usePanelSettingsContext();
  const copyEnabled = !hideCopyButton && key !== void 0;
  const [copied, setCopied] = (0, import_react2.useState)(false);
  const handleClick = async () => {
    try {
      await navigator.clipboard.writeText(JSON.stringify({
        [key]: value !== null && value !== void 0 ? value : ""
      }));
      setCopied(true);
    } catch (_unused) {
      warn(LevaErrors.CLIPBOARD_ERROR, {
        [key]: value
      });
    }
  };
  return import_react2.default.createElement(CopyLabelContainer, {
    align,
    onPointerLeave: () => setCopied(false)
  }, import_react2.default.createElement(RawLabel, props3), copyEnabled && import_react2.default.createElement("div", {
    title: `Click to copy ${typeof label === "string" ? label : key} value`
  }, !copied ? import_react2.default.createElement("svg", {
    onClick: handleClick,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 20 20",
    fill: "currentColor"
  }, import_react2.default.createElement("path", {
    d: "M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"
  }), import_react2.default.createElement("path", {
    d: "M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"
  })) : import_react2.default.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 20 20",
    fill: "currentColor"
  }, import_react2.default.createElement("path", {
    d: "M9 2a1 1 0 000 2h2a1 1 0 100-2H9z"
  }), import_react2.default.createElement("path", {
    fillRule: "evenodd",
    d: "M4 5a2 2 0 012-2 3 3 0 003 3h2a3 3 0 003-3 2 2 0 012 2v11a2 2 0 01-2 2H6a2 2 0 01-2-2V5zm9.707 5.707a1 1 0 00-1.414-1.414L9 12.586l-1.293-1.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z",
    clipRule: "evenodd"
  }))));
}
var _excluded$5 = ["toggled"];
var Svg = styled("svg", {
  fill: "currentColor",
  transition: "transform 350ms ease, fill 250ms ease"
});
function Chevron(_ref) {
  let {
    toggled
  } = _ref, props3 = _objectWithoutProperties(_ref, _excluded$5);
  return import_react2.default.createElement(Svg, _extends2({
    width: "9",
    height: "5",
    viewBox: "0 0 9 5",
    xmlns: "http://www.w3.org/2000/svg",
    style: {
      transform: `rotate(${toggled ? 0 : -90}deg)`
    }
  }, props3), import_react2.default.createElement("path", {
    d: "M3.8 4.4c.4.3 1 .3 1.4 0L8 1.7A1 1 0 007.4 0H1.6a1 1 0 00-.7 1.7l3 2.7z"
  }));
}
var _excluded$4 = ["input"];
function Row(_ref) {
  let {
    input
  } = _ref, props3 = _objectWithoutProperties(_ref, _excluded$4);
  if (input)
    return import_react2.default.createElement(StyledInputRow, props3);
  return import_react2.default.createElement(StyledRow, props3);
}
function useInputSetters({
  value,
  type,
  settings,
  setValue
}) {
  const [displayValue, setDisplayValue] = (0, import_react2.useState)(format$2(type, value, settings));
  const previousValueRef = (0, import_react2.useRef)(value);
  const settingsRef = (0, import_react2.useRef)(settings);
  settingsRef.current = settings;
  const setFormat = (0, import_react2.useCallback)((v5) => setDisplayValue(format$2(type, v5, settingsRef.current)), [type]);
  const onUpdate = (0, import_react2.useCallback)((updatedValue) => {
    try {
      setValue(updatedValue);
    } catch (error) {
      const {
        type: type2,
        previousValue
      } = error;
      if (type2 !== "LEVA_ERROR")
        throw error;
      setFormat(previousValue);
    }
  }, [setFormat, setValue]);
  (0, import_react2.useEffect)(() => {
    if (!dequal(value, previousValueRef.current)) {
      setFormat(value);
    }
    previousValueRef.current = value;
  }, [value, setFormat]);
  return {
    displayValue,
    onChange: setDisplayValue,
    onUpdate
  };
}
function useDrag2(handler, config) {
  const {
    emitOnEditStart,
    emitOnEditEnd
  } = useInputContext();
  return useDrag((state) => {
    if (state.first) {
      document.body.classList.add("panel__dragged");
      emitOnEditStart();
    }
    const result = handler(state);
    if (state.last) {
      document.body.classList.remove("panel__dragged");
      emitOnEditEnd();
    }
    return result;
  }, config);
}
function useCanvas2d(fn) {
  const canvas = (0, import_react2.useRef)(null);
  const ctx = (0, import_react2.useRef)(null);
  const hasFired = (0, import_react2.useRef)(false);
  (0, import_react2.useEffect)(() => {
    const handleCanvas = debounce(() => {
      canvas.current.width = canvas.current.offsetWidth * window.devicePixelRatio;
      canvas.current.height = canvas.current.offsetHeight * window.devicePixelRatio;
      fn(canvas.current, ctx.current);
    }, 250);
    window.addEventListener("resize", handleCanvas);
    if (!hasFired.current) {
      handleCanvas();
      hasFired.current = true;
    }
    return () => window.removeEventListener("resize", handleCanvas);
  }, [fn]);
  (0, import_react2.useEffect)(() => {
    ctx.current = canvas.current.getContext("2d");
  }, []);
  return [canvas, ctx];
}
function useTransform() {
  const ref = (0, import_react2.useRef)(null);
  const local = (0, import_react2.useRef)({
    x: 0,
    y: 0
  });
  const set = (0, import_react2.useCallback)((point) => {
    Object.assign(local.current, point);
    if (ref.current)
      ref.current.style.transform = `translate3d(${local.current.x}px, ${local.current.y}px, 0)`;
  }, []);
  return [ref, set];
}
var _excluded$3 = ["__refCount"];
var getInputAtPath = (data, path) => {
  if (!data[path])
    return null;
  const _data$path = data[path], input = _objectWithoutProperties(_data$path, _excluded$3);
  return input;
};
function useInput(path) {
  const store = useStoreContext();
  const [state, setState] = (0, import_react2.useState)(getInputAtPath(store.getData(), path));
  const set = (0, import_react2.useCallback)((value) => store.setValueAtPath(path, value, true), [path, store]);
  const setSettings = (0, import_react2.useCallback)((settings) => store.setSettingsAtPath(path, settings), [path, store]);
  const disable = (0, import_react2.useCallback)((flag) => store.disableInputAtPath(path, flag), [path, store]);
  const emitOnEditStart = (0, import_react2.useCallback)(() => store.emitOnEditStart(path), [path, store]);
  const emitOnEditEnd = (0, import_react2.useCallback)(() => store.emitOnEditEnd(path), [path, store]);
  (0, import_react2.useEffect)(() => {
    setState(getInputAtPath(store.getData(), path));
    const unsub = store.useStore.subscribe((s6) => getInputAtPath(s6.data, path), setState, {
      equalityFn: shallow
    });
    return () => unsub();
  }, [store, path]);
  return [state, {
    set,
    setSettings,
    disable,
    storeId: store.storeId,
    emitOnEditStart,
    emitOnEditEnd
  }];
}
var RangeGrid = styled("div", {
  variants: {
    hasRange: {
      true: {
        position: "relative",
        display: "grid",
        gridTemplateColumns: "auto $sizes$numberInputMinWidth",
        columnGap: "$colGap",
        alignItems: "center"
      }
    }
  }
});
var Range = styled("div", {
  position: "relative",
  width: "100%",
  height: 2,
  borderRadius: "$xs",
  backgroundColor: "$elevation1"
});
var Scrubber = styled("div", {
  position: "absolute",
  width: "$scrubberWidth",
  height: "$scrubberHeight",
  borderRadius: "$xs",
  boxShadow: "0 0 0 2px $colors$elevation2",
  backgroundColor: "$accent2",
  cursor: "pointer",
  $active: "none $accent1",
  $hover: "none $accent3",
  variants: {
    position: {
      left: {
        borderTopRightRadius: 0,
        borderBottomRightRadius: 0,
        transform: "translateX(calc(-0.5 * ($sizes$scrubberWidth + 4px)))"
      },
      right: {
        borderTopLeftRadius: 0,
        borderBottomLeftRadius: 0,
        transform: "translateX(calc(0.5 * ($sizes$scrubberWidth + 4px)))"
      }
    }
  }
});
var RangeWrapper = styled("div", {
  position: "relative",
  $flex: "",
  height: "100%",
  cursor: "pointer",
  touchAction: "none"
});
var Indicator = styled("div", {
  position: "absolute",
  height: "100%",
  backgroundColor: "$accent2"
});
function RangeSlider({
  value,
  min,
  max,
  onDrag,
  step,
  initialValue
}) {
  const ref = (0, import_react2.useRef)(null);
  const scrubberRef = (0, import_react2.useRef)(null);
  const rangeWidth = (0, import_react2.useRef)(0);
  const scrubberWidth = useTh("sizes", "scrubberWidth");
  const bind = useDrag2(({
    event,
    first: first2,
    xy: [x4],
    movement: [mx],
    memo
  }) => {
    if (first2) {
      const {
        width,
        left
      } = ref.current.getBoundingClientRect();
      rangeWidth.current = width - parseFloat(scrubberWidth);
      const targetIsScrub = (event === null || event === void 0 ? void 0 : event.target) === scrubberRef.current;
      memo = targetIsScrub ? value : invertedRange((x4 - left) / width, min, max);
    }
    const newValue = memo + invertedRange(mx / rangeWidth.current, 0, max - min);
    onDrag(sanitizeStep$1(newValue, {
      step,
      initialValue
    }));
    return memo;
  });
  const pos = range2(value, min, max);
  return import_react2.default.createElement(RangeWrapper, _extends2({
    ref
  }, bind()), import_react2.default.createElement(Range, null, import_react2.default.createElement(Indicator, {
    style: {
      left: 0,
      right: `${(1 - pos) * 100}%`
    }
  })), import_react2.default.createElement(Scrubber, {
    ref: scrubberRef,
    style: {
      left: `calc(${pos} * (100% - ${scrubberWidth}))`
    }
  }));
}
var DraggableLabel = import_react2.default.memo(({
  label,
  onUpdate,
  step,
  innerLabelTrim
}) => {
  const [dragging, setDragging] = (0, import_react2.useState)(false);
  const bind = useDrag2(({
    active,
    delta: [dx],
    event,
    memo: _memo = 0
  }) => {
    setDragging(active);
    _memo += dx / 2;
    if (Math.abs(_memo) >= 1) {
      onUpdate((v5) => parseFloat(v5) + Math.floor(_memo) * step * multiplyStep(event));
      _memo = 0;
    }
    return _memo;
  });
  return import_react2.default.createElement(InnerNumberLabel, _extends2({
    dragging,
    title: label.length > 1 ? label : ""
  }, bind()), label.slice(0, innerLabelTrim));
});
function Number$1({
  label,
  id,
  displayValue,
  onUpdate,
  onChange,
  settings,
  innerLabelTrim = 1
}) {
  const InnerLabel2 = innerLabelTrim > 0 && import_react2.default.createElement(DraggableLabel, {
    label,
    step: settings.step,
    onUpdate,
    innerLabelTrim
  });
  return import_react2.default.createElement(NumberInput, {
    id,
    value: String(displayValue),
    onUpdate,
    onChange,
    innerLabel: InnerLabel2
  });
}
function NumberComponent() {
  const props3 = useInputContext();
  const {
    label,
    value,
    onUpdate,
    settings,
    id
  } = props3;
  const {
    min,
    max
  } = settings;
  const hasRange = max !== Infinity && min !== -Infinity;
  return import_react2.default.createElement(Row, {
    input: true
  }, import_react2.default.createElement(Label, null, label), import_react2.default.createElement(RangeGrid, {
    hasRange
  }, hasRange && import_react2.default.createElement(RangeSlider, _extends2({
    value: parseFloat(value),
    onDrag: onUpdate
  }, settings)), import_react2.default.createElement(Number$1, _extends2({}, props3, {
    id,
    label: "value",
    innerLabelTrim: hasRange ? 0 : 1
  }))));
}
var {
  sanitizeStep
} = props$3;
var rest = _objectWithoutProperties(props$3, ["sanitizeStep"]);
var number2 = createInternalPlugin(_objectSpread2({
  component: NumberComponent
}, rest));
var schema$2 = (_o, s6) => v8n_esm_default().schema({
  options: v8n_esm_default().passesAnyOf(v8n_esm_default().object(), v8n_esm_default().array())
}).test(s6);
var sanitize$2 = (value, {
  values
}) => {
  if (values.indexOf(value) < 0)
    throw Error(`Selected value doesn't match Select options`);
  return value;
};
var format = (value, {
  values
}) => {
  return values.indexOf(value);
};
var normalize = (input) => {
  let {
    value,
    options
  } = input;
  let keys;
  let values;
  if (Array.isArray(options)) {
    values = options;
    keys = options.map((o9) => String(o9));
  } else {
    values = Object.values(options);
    keys = Object.keys(options);
  }
  if (!("value" in input))
    value = values[0];
  else if (!values.includes(value)) {
    keys.unshift(String(value));
    values.unshift(value);
  }
  if (!Object.values(options).includes(value))
    options[String(value)] = value;
  return {
    value,
    settings: {
      keys,
      values
    }
  };
};
var props$2 = Object.freeze({
  __proto__: null,
  schema: schema$2,
  sanitize: sanitize$2,
  format,
  normalize
});
var SelectContainer = styled("div", {
  $flexCenter: "",
  position: "relative",
  "> svg": {
    pointerEvents: "none",
    position: "absolute",
    right: "$md"
  }
});
var NativeSelect = styled("select", {
  position: "absolute",
  top: 0,
  left: 0,
  width: "100%",
  height: "100%",
  opacity: 0
});
var PresentationalSelect = styled("div", {
  display: "flex",
  alignItems: "center",
  width: "100%",
  height: "$rowHeight",
  backgroundColor: "$elevation3",
  borderRadius: "$sm",
  padding: "0 $sm",
  cursor: "pointer",
  [`${NativeSelect}:focus + &`]: {
    $focusStyle: ""
  },
  [`${NativeSelect}:hover + &`]: {
    $hoverStyle: ""
  }
});
function Select({
  displayValue,
  value,
  onUpdate,
  id,
  settings
}) {
  const {
    keys,
    values
  } = settings;
  const lastDisplayedValue = (0, import_react2.useRef)();
  if (value === values[displayValue]) {
    lastDisplayedValue.current = keys[displayValue];
  }
  return import_react2.default.createElement(SelectContainer, null, import_react2.default.createElement(NativeSelect, {
    id,
    value: displayValue,
    onChange: (e11) => onUpdate(values[Number(e11.currentTarget.value)])
  }, keys.map((key, index) => import_react2.default.createElement("option", {
    key,
    value: index
  }, key))), import_react2.default.createElement(PresentationalSelect, null, lastDisplayedValue.current), import_react2.default.createElement(Chevron, {
    toggled: true
  }));
}
function SelectComponent() {
  const {
    label,
    value,
    displayValue,
    onUpdate,
    id,
    settings
  } = useInputContext();
  return import_react2.default.createElement(Row, {
    input: true
  }, import_react2.default.createElement(Label, null, label), import_react2.default.createElement(Select, {
    id,
    value,
    displayValue,
    onUpdate,
    settings
  }));
}
var select = createInternalPlugin(_objectSpread2({
  component: SelectComponent
}, props$2));
var schema$1 = (o9) => v8n_esm_default().string().test(o9);
var sanitize$1 = (v5) => {
  if (typeof v5 !== "string")
    throw Error(`Invalid string`);
  return v5;
};
var props$1 = Object.freeze({
  __proto__: null,
  schema: schema$1,
  sanitize: sanitize$1
});
var _excluded$2 = ["displayValue", "onUpdate", "onChange"];
function String$1(_ref) {
  let {
    displayValue,
    onUpdate,
    onChange
  } = _ref, props3 = _objectWithoutProperties(_ref, _excluded$2);
  return import_react2.default.createElement(ValueInput, _extends2({
    value: displayValue,
    onUpdate,
    onChange
  }, props3));
}
function StringComponent() {
  const {
    label,
    displayValue,
    onUpdate,
    onChange
  } = useInputContext();
  return import_react2.default.createElement(Row, {
    input: true
  }, import_react2.default.createElement(Label, null, label), import_react2.default.createElement(String$1, {
    displayValue,
    onUpdate,
    onChange
  }));
}
var string2 = createInternalPlugin(_objectSpread2({
  component: StringComponent
}, props$1));
var schema2 = (o9) => v8n_esm_default().boolean().test(o9);
var sanitize = (v5) => {
  if (typeof v5 !== "boolean")
    throw Error("Invalid boolean");
  return v5;
};
var props = Object.freeze({
  __proto__: null,
  schema: schema2,
  sanitize
});
var StyledInputWrapper = styled("div", {
  position: "relative",
  $flex: "",
  height: "$rowHeight",
  input: {
    $reset: "",
    height: 0,
    width: 0,
    opacity: 0,
    margin: 0
  },
  label: {
    position: "relative",
    $flexCenter: "",
    userSelect: "none",
    cursor: "pointer",
    height: "$checkboxSize",
    width: "$checkboxSize",
    backgroundColor: "$elevation3",
    borderRadius: "$sm",
    $hover: ""
  },
  "input:focus + label": {
    $focusStyle: ""
  },
  "input:focus:checked + label, input:checked + label:hover": {
    $hoverStyle: "$accent3"
  },
  "input + label:active": {
    backgroundColor: "$accent1"
  },
  "input:checked + label:active": {
    backgroundColor: "$accent1"
  },
  "label > svg": {
    display: "none",
    width: "90%",
    height: "90%",
    stroke: "$highlight3"
  },
  "input:checked + label": {
    backgroundColor: "$accent2"
  },
  "input:checked + label > svg": {
    display: "block"
  }
});
function Boolean2({
  value,
  onUpdate,
  id
}) {
  return import_react2.default.createElement(StyledInputWrapper, null, import_react2.default.createElement("input", {
    id,
    type: "checkbox",
    checked: value,
    onChange: (e11) => onUpdate(e11.currentTarget.checked)
  }), import_react2.default.createElement("label", {
    htmlFor: id
  }, import_react2.default.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    fill: "none",
    viewBox: "0 0 24 24"
  }, import_react2.default.createElement("path", {
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 2,
    d: "M5 13l4 4L19 7"
  }))));
}
function BooleanComponent() {
  const {
    label,
    value,
    onUpdate,
    id
  } = useInputContext();
  return import_react2.default.createElement(Row, {
    input: true
  }, import_react2.default.createElement(Label, null, label), import_react2.default.createElement(Boolean2, {
    value,
    onUpdate,
    id
  }));
}
var boolean2 = createInternalPlugin(_objectSpread2({
  component: BooleanComponent
}, props));
var _excluded$1 = ["locked"];
function Coordinate({
  value,
  id,
  valueKey,
  settings,
  onUpdate,
  innerLabelTrim
}) {
  const valueRef = (0, import_react2.useRef)(value[valueKey]);
  valueRef.current = value[valueKey];
  const setValue = (0, import_react2.useCallback)((newValue) => onUpdate({
    [valueKey]: sanitizeValue({
      type: "NUMBER",
      value: valueRef.current,
      settings
    }, newValue)
  }), [onUpdate, settings, valueKey]);
  const number4 = useInputSetters({
    type: "NUMBER",
    value: value[valueKey],
    settings,
    setValue
  });
  return import_react2.default.createElement(Number$1, {
    id,
    label: valueKey,
    value: value[valueKey],
    displayValue: number4.displayValue,
    onUpdate: number4.onUpdate,
    onChange: number4.onChange,
    settings,
    innerLabelTrim
  });
}
var Container = styled("div", {
  display: "grid",
  columnGap: "$colGap",
  gridAutoFlow: "column dense",
  alignItems: "center",
  variants: {
    withLock: {
      true: {
        gridTemplateColumns: "10px auto",
        "> svg": {
          cursor: "pointer"
        }
      }
    }
  }
});
function Lock(_ref) {
  let {
    locked
  } = _ref, props3 = _objectWithoutProperties(_ref, _excluded$1);
  return import_react2.default.createElement("svg", _extends2({
    width: "10",
    height: "10",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props3), locked ? import_react2.default.createElement("path", {
    d: "M5 4.63601C5 3.76031 5.24219 3.1054 5.64323 2.67357C6.03934 2.24705 6.64582 1.9783 7.5014 1.9783C8.35745 1.9783 8.96306 2.24652 9.35823 2.67208C9.75838 3.10299 10 3.75708 10 4.63325V5.99999H5V4.63601ZM4 5.99999V4.63601C4 3.58148 4.29339 2.65754 4.91049 1.99307C5.53252 1.32329 6.42675 0.978302 7.5014 0.978302C8.57583 0.978302 9.46952 1.32233 10.091 1.99162C10.7076 2.65557 11 3.57896 11 4.63325V5.99999H12C12.5523 5.99999 13 6.44771 13 6.99999V13C13 13.5523 12.5523 14 12 14H3C2.44772 14 2 13.5523 2 13V6.99999C2 6.44771 2.44772 5.99999 3 5.99999H4ZM3 6.99999H12V13H3V6.99999Z",
    fill: "currentColor",
    fillRule: "evenodd",
    clipRule: "evenodd"
  }) : import_react2.default.createElement("path", {
    d: "M9 3.63601C9 2.76044 9.24207 2.11211 9.64154 1.68623C10.0366 1.26502 10.6432 1 11.5014 1C12.4485 1 13.0839 1.30552 13.4722 1.80636C13.8031 2.23312 14 2.84313 14 3.63325H15C15 2.68242 14.7626 1.83856 14.2625 1.19361C13.6389 0.38943 12.6743 0 11.5014 0C10.4294 0 9.53523 0.337871 8.91218 1.0021C8.29351 1.66167 8 2.58135 8 3.63601V6H1C0.447715 6 0 6.44772 0 7V13C0 13.5523 0.447715 14 1 14H10C10.5523 14 11 13.5523 11 13V7C11 6.44772 10.5523 6 10 6H9V3.63601ZM1 7H10V13H1V7Z",
    fill: "currentColor",
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
}
function Vector({
  value,
  onUpdate,
  settings,
  innerLabelTrim
}) {
  const {
    id,
    setSettings
  } = useInputContext();
  const {
    lock,
    locked
  } = settings;
  return import_react2.default.createElement(Container, {
    withLock: lock
  }, lock && import_react2.default.createElement(Lock, {
    locked,
    onClick: () => setSettings({
      locked: !locked
    })
  }), Object.keys(value).map((key, i6) => import_react2.default.createElement(Coordinate, {
    id: i6 === 0 ? id : `${id}.${key}`,
    key,
    valueKey: key,
    value,
    settings: settings[key],
    onUpdate,
    innerLabelTrim
  })));
}
var normalizeKeyedNumberSettings = (value, settings) => {
  const _settings = {};
  let maxStep = 0;
  let minPad = Infinity;
  Object.entries(value).forEach(([key, v5]) => {
    _settings[key] = normalize$1(_objectSpread2({
      value: v5
    }, settings[key])).settings;
    maxStep = Math.max(maxStep, _settings[key].step);
    minPad = Math.min(minPad, _settings[key].pad);
  });
  for (let key in _settings) {
    const {
      step,
      min,
      max
    } = settings[key] || {};
    if (!isFinite(step) && (!isFinite(min) || !isFinite(max))) {
      _settings[key].step = maxStep;
      _settings[key].pad = minPad;
    }
  }
  return _settings;
};
var _excluded = ["lock"];
var _excluded2 = ["value"];
function getVectorSchema(dimension) {
  const isVectorArray = v8n_esm_default().array().length(dimension).every.number();
  const isVectorObject = (o9) => {
    if (!o9 || typeof o9 !== "object")
      return false;
    const values = Object.values(o9);
    return values.length === dimension && values.every((v5) => isFinite(v5));
  };
  return (o9) => {
    return isVectorArray.test(o9) || isVectorObject(o9);
  };
}
function getVectorType(value) {
  return Array.isArray(value) ? "array" : "object";
}
function convert(value, format3, keys) {
  if (getVectorType(value) === format3)
    return value;
  return format3 === "array" ? Object.values(value) : mapArrayToKeys(value, keys);
}
var sanitizeVector = (value, settings, previousValue) => {
  const _value = convert(value, "object", settings.keys);
  for (let key in _value)
    _value[key] = sanitize$3(_value[key], settings[key]);
  const _valueKeys = Object.keys(_value);
  let newValue = {};
  if (_valueKeys.length === settings.keys.length)
    newValue = _value;
  else {
    const _previousValue = convert(previousValue, "object", settings.keys);
    if (_valueKeys.length === 1 && settings.locked) {
      const lockedKey = _valueKeys[0];
      const lockedCoordinate = _value[lockedKey];
      const previousLockedCoordinate = _previousValue[lockedKey];
      const ratio = previousLockedCoordinate !== 0 ? lockedCoordinate / previousLockedCoordinate : 1;
      for (let key in _previousValue) {
        if (key === lockedKey)
          newValue[lockedKey] = lockedCoordinate;
        else
          newValue[key] = _previousValue[key] * ratio;
      }
    } else {
      newValue = _objectSpread2(_objectSpread2({}, _previousValue), _value);
    }
  }
  return convert(newValue, settings.format, settings.keys);
};
var formatVector = (value, settings) => convert(value, "object", settings.keys);
var isNumberSettings = (o9) => !!o9 && ("step" in o9 || "min" in o9 || "max" in o9);
function normalizeVector(value, settings, defaultKeys = []) {
  const {
    lock = false
  } = settings, _settings = _objectWithoutProperties(settings, _excluded);
  const format3 = Array.isArray(value) ? "array" : "object";
  const keys = format3 === "object" ? Object.keys(value) : defaultKeys;
  const _value = convert(value, "object", keys);
  const mergedSettings = isNumberSettings(_settings) ? keys.reduce((acc, k4) => Object.assign(acc, {
    [k4]: _settings
  }), {}) : _settings;
  const numberSettings = normalizeKeyedNumberSettings(_value, mergedSettings);
  return {
    value: format3 === "array" ? value : _value,
    settings: _objectSpread2(_objectSpread2({}, numberSettings), {}, {
      format: format3,
      keys,
      lock,
      locked: false
    })
  };
}
function getVectorPlugin(defaultKeys) {
  return {
    schema: getVectorSchema(defaultKeys.length),
    normalize: (_ref) => {
      let {
        value
      } = _ref, settings = _objectWithoutProperties(_ref, _excluded2);
      return normalizeVector(value, settings, defaultKeys);
    },
    format: (value, settings) => formatVector(value, settings),
    sanitize: (value, settings, prevValue) => sanitizeVector(value, settings, prevValue)
  };
}

// node_modules/colord/index.mjs
var r10 = { grad: 0.9, turn: 360, rad: 360 / (2 * Math.PI) };
var t10 = function(r12) {
  return "string" == typeof r12 ? r12.length > 0 : "number" == typeof r12;
};
var n4 = function(r12, t12, n6) {
  return void 0 === t12 && (t12 = 0), void 0 === n6 && (n6 = Math.pow(10, t12)), Math.round(n6 * r12) / n6 + 0;
};
var e9 = function(r12, t12, n6) {
  return void 0 === t12 && (t12 = 0), void 0 === n6 && (n6 = 1), r12 > n6 ? n6 : r12 > t12 ? r12 : t12;
};
var u3 = function(r12) {
  return (r12 = isFinite(r12) ? r12 % 360 : 0) > 0 ? r12 : r12 + 360;
};
var a3 = function(r12) {
  return { r: e9(r12.r, 0, 255), g: e9(r12.g, 0, 255), b: e9(r12.b, 0, 255), a: e9(r12.a) };
};
var o7 = function(r12) {
  return { r: n4(r12.r), g: n4(r12.g), b: n4(r12.b), a: n4(r12.a, 3) };
};
var i4 = /^#([0-9a-f]{3,8})$/i;
var s4 = function(r12) {
  var t12 = r12.toString(16);
  return t12.length < 2 ? "0" + t12 : t12;
};
var h3 = function(r12) {
  var t12 = r12.r, n6 = r12.g, e11 = r12.b, u5 = r12.a, a5 = Math.max(t12, n6, e11), o9 = a5 - Math.min(t12, n6, e11), i6 = o9 ? a5 === t12 ? (n6 - e11) / o9 : a5 === n6 ? 2 + (e11 - t12) / o9 : 4 + (t12 - n6) / o9 : 0;
  return { h: 60 * (i6 < 0 ? i6 + 6 : i6), s: a5 ? o9 / a5 * 100 : 0, v: a5 / 255 * 100, a: u5 };
};
var b3 = function(r12) {
  var t12 = r12.h, n6 = r12.s, e11 = r12.v, u5 = r12.a;
  t12 = t12 / 360 * 6, n6 /= 100, e11 /= 100;
  var a5 = Math.floor(t12), o9 = e11 * (1 - n6), i6 = e11 * (1 - (t12 - a5) * n6), s6 = e11 * (1 - (1 - t12 + a5) * n6), h5 = a5 % 6;
  return { r: 255 * [e11, i6, o9, o9, s6, e11][h5], g: 255 * [s6, e11, e11, i6, o9, o9][h5], b: 255 * [o9, o9, s6, e11, e11, i6][h5], a: u5 };
};
var g3 = function(r12) {
  return { h: u3(r12.h), s: e9(r12.s, 0, 100), l: e9(r12.l, 0, 100), a: e9(r12.a) };
};
var d3 = function(r12) {
  return { h: n4(r12.h), s: n4(r12.s), l: n4(r12.l), a: n4(r12.a, 3) };
};
var f3 = function(r12) {
  return b3((n6 = (t12 = r12).s, { h: t12.h, s: (n6 *= ((e11 = t12.l) < 50 ? e11 : 100 - e11) / 100) > 0 ? 2 * n6 / (e11 + n6) * 100 : 0, v: e11 + n6, a: t12.a }));
  var t12, n6, e11;
};
var c4 = function(r12) {
  return { h: (t12 = h3(r12)).h, s: (u5 = (200 - (n6 = t12.s)) * (e11 = t12.v) / 100) > 0 && u5 < 200 ? n6 * e11 / 100 / (u5 <= 100 ? u5 : 200 - u5) * 100 : 0, l: u5 / 2, a: t12.a };
  var t12, n6, e11, u5;
};
var l4 = /^hsla?\(\s*([+-]?\d*\.?\d+)(deg|rad|grad|turn)?\s*,\s*([+-]?\d*\.?\d+)%\s*,\s*([+-]?\d*\.?\d+)%\s*(?:,\s*([+-]?\d*\.?\d+)(%)?\s*)?\)$/i;
var p3 = /^hsla?\(\s*([+-]?\d*\.?\d+)(deg|rad|grad|turn)?\s+([+-]?\d*\.?\d+)%\s+([+-]?\d*\.?\d+)%\s*(?:\/\s*([+-]?\d*\.?\d+)(%)?\s*)?\)$/i;
var v3 = /^rgba?\(\s*([+-]?\d*\.?\d+)(%)?\s*,\s*([+-]?\d*\.?\d+)(%)?\s*,\s*([+-]?\d*\.?\d+)(%)?\s*(?:,\s*([+-]?\d*\.?\d+)(%)?\s*)?\)$/i;
var m3 = /^rgba?\(\s*([+-]?\d*\.?\d+)(%)?\s+([+-]?\d*\.?\d+)(%)?\s+([+-]?\d*\.?\d+)(%)?\s*(?:\/\s*([+-]?\d*\.?\d+)(%)?\s*)?\)$/i;
var y3 = { string: [[function(r12) {
  var t12 = i4.exec(r12);
  return t12 ? (r12 = t12[1]).length <= 4 ? { r: parseInt(r12[0] + r12[0], 16), g: parseInt(r12[1] + r12[1], 16), b: parseInt(r12[2] + r12[2], 16), a: 4 === r12.length ? n4(parseInt(r12[3] + r12[3], 16) / 255, 2) : 1 } : 6 === r12.length || 8 === r12.length ? { r: parseInt(r12.substr(0, 2), 16), g: parseInt(r12.substr(2, 2), 16), b: parseInt(r12.substr(4, 2), 16), a: 8 === r12.length ? n4(parseInt(r12.substr(6, 2), 16) / 255, 2) : 1 } : null : null;
}, "hex"], [function(r12) {
  var t12 = v3.exec(r12) || m3.exec(r12);
  return t12 ? t12[2] !== t12[4] || t12[4] !== t12[6] ? null : a3({ r: Number(t12[1]) / (t12[2] ? 100 / 255 : 1), g: Number(t12[3]) / (t12[4] ? 100 / 255 : 1), b: Number(t12[5]) / (t12[6] ? 100 / 255 : 1), a: void 0 === t12[7] ? 1 : Number(t12[7]) / (t12[8] ? 100 : 1) }) : null;
}, "rgb"], [function(t12) {
  var n6 = l4.exec(t12) || p3.exec(t12);
  if (!n6)
    return null;
  var e11, u5, a5 = g3({ h: (e11 = n6[1], u5 = n6[2], void 0 === u5 && (u5 = "deg"), Number(e11) * (r10[u5] || 1)), s: Number(n6[3]), l: Number(n6[4]), a: void 0 === n6[5] ? 1 : Number(n6[5]) / (n6[6] ? 100 : 1) });
  return f3(a5);
}, "hsl"]], object: [[function(r12) {
  var n6 = r12.r, e11 = r12.g, u5 = r12.b, o9 = r12.a, i6 = void 0 === o9 ? 1 : o9;
  return t10(n6) && t10(e11) && t10(u5) ? a3({ r: Number(n6), g: Number(e11), b: Number(u5), a: Number(i6) }) : null;
}, "rgb"], [function(r12) {
  var n6 = r12.h, e11 = r12.s, u5 = r12.l, a5 = r12.a, o9 = void 0 === a5 ? 1 : a5;
  if (!t10(n6) || !t10(e11) || !t10(u5))
    return null;
  var i6 = g3({ h: Number(n6), s: Number(e11), l: Number(u5), a: Number(o9) });
  return f3(i6);
}, "hsl"], [function(r12) {
  var n6 = r12.h, a5 = r12.s, o9 = r12.v, i6 = r12.a, s6 = void 0 === i6 ? 1 : i6;
  if (!t10(n6) || !t10(a5) || !t10(o9))
    return null;
  var h5 = function(r13) {
    return { h: u3(r13.h), s: e9(r13.s, 0, 100), v: e9(r13.v, 0, 100), a: e9(r13.a) };
  }({ h: Number(n6), s: Number(a5), v: Number(o9), a: Number(s6) });
  return b3(h5);
}, "hsv"]] };
var N2 = function(r12, t12) {
  for (var n6 = 0; n6 < t12.length; n6++) {
    var e11 = t12[n6][0](r12);
    if (e11)
      return [e11, t12[n6][1]];
  }
  return [null, void 0];
};
var x3 = function(r12) {
  return "string" == typeof r12 ? N2(r12.trim(), y3.string) : "object" == typeof r12 && null !== r12 ? N2(r12, y3.object) : [null, void 0];
};
var I2 = function(r12) {
  return x3(r12)[1];
};
var M2 = function(r12, t12) {
  var n6 = c4(r12);
  return { h: n6.h, s: e9(n6.s + 100 * t12, 0, 100), l: n6.l, a: n6.a };
};
var H2 = function(r12) {
  return (299 * r12.r + 587 * r12.g + 114 * r12.b) / 1e3 / 255;
};
var $2 = function(r12, t12) {
  var n6 = c4(r12);
  return { h: n6.h, s: n6.s, l: e9(n6.l + 100 * t12, 0, 100), a: n6.a };
};
var j2 = function() {
  function r12(r13) {
    this.parsed = x3(r13)[0], this.rgba = this.parsed || { r: 0, g: 0, b: 0, a: 1 };
  }
  return r12.prototype.isValid = function() {
    return null !== this.parsed;
  }, r12.prototype.brightness = function() {
    return n4(H2(this.rgba), 2);
  }, r12.prototype.isDark = function() {
    return H2(this.rgba) < 0.5;
  }, r12.prototype.isLight = function() {
    return H2(this.rgba) >= 0.5;
  }, r12.prototype.toHex = function() {
    return r13 = o7(this.rgba), t12 = r13.r, e11 = r13.g, u5 = r13.b, i6 = (a5 = r13.a) < 1 ? s4(n4(255 * a5)) : "", "#" + s4(t12) + s4(e11) + s4(u5) + i6;
    var r13, t12, e11, u5, a5, i6;
  }, r12.prototype.toRgb = function() {
    return o7(this.rgba);
  }, r12.prototype.toRgbString = function() {
    return r13 = o7(this.rgba), t12 = r13.r, n6 = r13.g, e11 = r13.b, (u5 = r13.a) < 1 ? "rgba(" + t12 + ", " + n6 + ", " + e11 + ", " + u5 + ")" : "rgb(" + t12 + ", " + n6 + ", " + e11 + ")";
    var r13, t12, n6, e11, u5;
  }, r12.prototype.toHsl = function() {
    return d3(c4(this.rgba));
  }, r12.prototype.toHslString = function() {
    return r13 = d3(c4(this.rgba)), t12 = r13.h, n6 = r13.s, e11 = r13.l, (u5 = r13.a) < 1 ? "hsla(" + t12 + ", " + n6 + "%, " + e11 + "%, " + u5 + ")" : "hsl(" + t12 + ", " + n6 + "%, " + e11 + "%)";
    var r13, t12, n6, e11, u5;
  }, r12.prototype.toHsv = function() {
    return r13 = h3(this.rgba), { h: n4(r13.h), s: n4(r13.s), v: n4(r13.v), a: n4(r13.a, 3) };
    var r13;
  }, r12.prototype.invert = function() {
    return w3({ r: 255 - (r13 = this.rgba).r, g: 255 - r13.g, b: 255 - r13.b, a: r13.a });
    var r13;
  }, r12.prototype.saturate = function(r13) {
    return void 0 === r13 && (r13 = 0.1), w3(M2(this.rgba, r13));
  }, r12.prototype.desaturate = function(r13) {
    return void 0 === r13 && (r13 = 0.1), w3(M2(this.rgba, -r13));
  }, r12.prototype.grayscale = function() {
    return w3(M2(this.rgba, -1));
  }, r12.prototype.lighten = function(r13) {
    return void 0 === r13 && (r13 = 0.1), w3($2(this.rgba, r13));
  }, r12.prototype.darken = function(r13) {
    return void 0 === r13 && (r13 = 0.1), w3($2(this.rgba, -r13));
  }, r12.prototype.rotate = function(r13) {
    return void 0 === r13 && (r13 = 15), this.hue(this.hue() + r13);
  }, r12.prototype.alpha = function(r13) {
    return "number" == typeof r13 ? w3({ r: (t12 = this.rgba).r, g: t12.g, b: t12.b, a: r13 }) : n4(this.rgba.a, 3);
    var t12;
  }, r12.prototype.hue = function(r13) {
    var t12 = c4(this.rgba);
    return "number" == typeof r13 ? w3({ h: r13, s: t12.s, l: t12.l, a: t12.a }) : n4(t12.h);
  }, r12.prototype.isEqual = function(r13) {
    return this.toHex() === w3(r13).toHex();
  }, r12;
}();
var w3 = function(r12) {
  return r12 instanceof j2 ? r12 : new j2(r12);
};
var S2 = [];
var k3 = function(r12) {
  r12.forEach(function(r13) {
    S2.indexOf(r13) < 0 && (r13(j2, y3), S2.push(r13));
  });
};

// node_modules/colord/plugins/names.mjs
function names_default(e11, f5) {
  var a5 = { white: "#ffffff", bisque: "#ffe4c4", blue: "#0000ff", cadetblue: "#5f9ea0", chartreuse: "#7fff00", chocolate: "#d2691e", coral: "#ff7f50", antiquewhite: "#faebd7", aqua: "#00ffff", azure: "#f0ffff", whitesmoke: "#f5f5f5", papayawhip: "#ffefd5", plum: "#dda0dd", blanchedalmond: "#ffebcd", black: "#000000", gold: "#ffd700", goldenrod: "#daa520", gainsboro: "#dcdcdc", cornsilk: "#fff8dc", cornflowerblue: "#6495ed", burlywood: "#deb887", aquamarine: "#7fffd4", beige: "#f5f5dc", crimson: "#dc143c", cyan: "#00ffff", darkblue: "#00008b", darkcyan: "#008b8b", darkgoldenrod: "#b8860b", darkkhaki: "#bdb76b", darkgray: "#a9a9a9", darkgreen: "#006400", darkgrey: "#a9a9a9", peachpuff: "#ffdab9", darkmagenta: "#8b008b", darkred: "#8b0000", darkorchid: "#9932cc", darkorange: "#ff8c00", darkslateblue: "#483d8b", gray: "#808080", darkslategray: "#2f4f4f", darkslategrey: "#2f4f4f", deeppink: "#ff1493", deepskyblue: "#00bfff", wheat: "#f5deb3", firebrick: "#b22222", floralwhite: "#fffaf0", ghostwhite: "#f8f8ff", darkviolet: "#9400d3", magenta: "#ff00ff", green: "#008000", dodgerblue: "#1e90ff", grey: "#808080", honeydew: "#f0fff0", hotpink: "#ff69b4", blueviolet: "#8a2be2", forestgreen: "#228b22", lawngreen: "#7cfc00", indianred: "#cd5c5c", indigo: "#4b0082", fuchsia: "#ff00ff", brown: "#a52a2a", maroon: "#800000", mediumblue: "#0000cd", lightcoral: "#f08080", darkturquoise: "#00ced1", lightcyan: "#e0ffff", ivory: "#fffff0", lightyellow: "#ffffe0", lightsalmon: "#ffa07a", lightseagreen: "#20b2aa", linen: "#faf0e6", mediumaquamarine: "#66cdaa", lemonchiffon: "#fffacd", lime: "#00ff00", khaki: "#f0e68c", mediumseagreen: "#3cb371", limegreen: "#32cd32", mediumspringgreen: "#00fa9a", lightskyblue: "#87cefa", lightblue: "#add8e6", midnightblue: "#191970", lightpink: "#ffb6c1", mistyrose: "#ffe4e1", moccasin: "#ffe4b5", mintcream: "#f5fffa", lightslategray: "#778899", lightslategrey: "#778899", navajowhite: "#ffdead", navy: "#000080", mediumvioletred: "#c71585", powderblue: "#b0e0e6", palegoldenrod: "#eee8aa", oldlace: "#fdf5e6", paleturquoise: "#afeeee", mediumturquoise: "#48d1cc", mediumorchid: "#ba55d3", rebeccapurple: "#663399", lightsteelblue: "#b0c4de", mediumslateblue: "#7b68ee", thistle: "#d8bfd8", tan: "#d2b48c", orchid: "#da70d6", mediumpurple: "#9370db", purple: "#800080", pink: "#ffc0cb", skyblue: "#87ceeb", springgreen: "#00ff7f", palegreen: "#98fb98", red: "#ff0000", yellow: "#ffff00", slateblue: "#6a5acd", lavenderblush: "#fff0f5", peru: "#cd853f", palevioletred: "#db7093", violet: "#ee82ee", teal: "#008080", slategray: "#708090", slategrey: "#708090", aliceblue: "#f0f8ff", darkseagreen: "#8fbc8f", darkolivegreen: "#556b2f", greenyellow: "#adff2f", seagreen: "#2e8b57", seashell: "#fff5ee", tomato: "#ff6347", silver: "#c0c0c0", sienna: "#a0522d", lavender: "#e6e6fa", lightgreen: "#90ee90", orange: "#ffa500", orangered: "#ff4500", steelblue: "#4682b4", royalblue: "#4169e1", turquoise: "#40e0d0", yellowgreen: "#9acd32", salmon: "#fa8072", saddlebrown: "#8b4513", sandybrown: "#f4a460", rosybrown: "#bc8f8f", darksalmon: "#e9967a", lightgoldenrodyellow: "#fafad2", snow: "#fffafa", lightgrey: "#d3d3d3", lightgray: "#d3d3d3", dimgray: "#696969", dimgrey: "#696969", olivedrab: "#6b8e23", olive: "#808000" }, r12 = {};
  for (var d5 in a5)
    r12[a5[d5]] = d5;
  var l6 = {};
  e11.prototype.toName = function(f6) {
    if (!(this.rgba.a || this.rgba.r || this.rgba.g || this.rgba.b))
      return "transparent";
    var d6, i6, n6 = r12[this.toHex()];
    if (n6)
      return n6;
    if (null == f6 ? void 0 : f6.closest) {
      var o9 = this.toRgb(), t12 = 1 / 0, b5 = "black";
      if (!l6.length)
        for (var c6 in a5)
          l6[c6] = new e11(a5[c6]).toRgb();
      for (var g5 in a5) {
        var u5 = (d6 = o9, i6 = l6[g5], Math.pow(d6.r - i6.r, 2) + Math.pow(d6.g - i6.g, 2) + Math.pow(d6.b - i6.b, 2));
        u5 < t12 && (t12 = u5, b5 = g5);
      }
      return b5;
    }
  };
  f5.string.push([function(f6) {
    var r13 = f6.toLowerCase(), d6 = "transparent" === r13 ? "#0000" : a5[r13];
    return d6 ? new e11(d6).toRgb() : null;
  }, "name"]);
}

// node_modules/leva/dist/leva.esm.js
var import_react7 = __toESM(require_react());

// node_modules/react-colorful/dist/index.module.js
var import_react5 = __toESM(require_react());
function u4() {
  return (u4 = Object.assign || function(e11) {
    for (var r12 = 1; r12 < arguments.length; r12++) {
      var t12 = arguments[r12];
      for (var n6 in t12)
        Object.prototype.hasOwnProperty.call(t12, n6) && (e11[n6] = t12[n6]);
    }
    return e11;
  }).apply(this, arguments);
}
function c5(e11, r12) {
  if (null == e11)
    return {};
  var t12, n6, o9 = {}, a5 = Object.keys(e11);
  for (n6 = 0; n6 < a5.length; n6++)
    r12.indexOf(t12 = a5[n6]) >= 0 || (o9[t12] = e11[t12]);
  return o9;
}
function i5(e11) {
  var t12 = (0, import_react5.useRef)(e11), n6 = (0, import_react5.useRef)(function(e12) {
    t12.current && t12.current(e12);
  });
  return t12.current = e11, n6.current;
}
var s5 = function(e11, r12, t12) {
  return void 0 === r12 && (r12 = 0), void 0 === t12 && (t12 = 1), e11 > t12 ? t12 : e11 < r12 ? r12 : e11;
};
var f4 = function(e11) {
  return "touches" in e11;
};
var v4 = function(e11) {
  return e11 && e11.ownerDocument.defaultView || self;
};
var d4 = function(e11, r12, t12) {
  var n6 = e11.getBoundingClientRect(), o9 = f4(r12) ? function(e12, r13) {
    for (var t13 = 0; t13 < e12.length; t13++)
      if (e12[t13].identifier === r13)
        return e12[t13];
    return e12[0];
  }(r12.touches, t12) : r12;
  return { left: s5((o9.pageX - (n6.left + v4(e11).pageXOffset)) / n6.width), top: s5((o9.pageY - (n6.top + v4(e11).pageYOffset)) / n6.height) };
};
var h4 = function(e11) {
  !f4(e11) && e11.preventDefault();
};
var m4 = import_react5.default.memo(function(o9) {
  var a5 = o9.onMove, l6 = o9.onKey, s6 = c5(o9, ["onMove", "onKey"]), m5 = (0, import_react5.useRef)(null), g5 = i5(a5), p5 = i5(l6), b5 = (0, import_react5.useRef)(null), _3 = (0, import_react5.useRef)(false), x4 = (0, import_react5.useMemo)(function() {
    var e11 = function(e12) {
      h4(e12), (f4(e12) ? e12.touches.length > 0 : e12.buttons > 0) && m5.current ? g5(d4(m5.current, e12, b5.current)) : t12(false);
    }, r12 = function() {
      return t12(false);
    };
    function t12(t13) {
      var n6 = _3.current, o10 = v4(m5.current), a6 = t13 ? o10.addEventListener : o10.removeEventListener;
      a6(n6 ? "touchmove" : "mousemove", e11), a6(n6 ? "touchend" : "mouseup", r12);
    }
    return [function(e12) {
      var r13 = e12.nativeEvent, n6 = m5.current;
      if (n6 && (h4(r13), !function(e13, r14) {
        return r14 && !f4(e13);
      }(r13, _3.current) && n6)) {
        if (f4(r13)) {
          _3.current = true;
          var o10 = r13.changedTouches || [];
          o10.length && (b5.current = o10[0].identifier);
        }
        n6.focus(), g5(d4(n6, r13, b5.current)), t12(true);
      }
    }, function(e12) {
      var r13 = e12.which || e12.keyCode;
      r13 < 37 || r13 > 40 || (e12.preventDefault(), p5({ left: 39 === r13 ? 0.05 : 37 === r13 ? -0.05 : 0, top: 40 === r13 ? 0.05 : 38 === r13 ? -0.05 : 0 }));
    }, t12];
  }, [p5, g5]), C2 = x4[0], E3 = x4[1], H3 = x4[2];
  return (0, import_react5.useEffect)(function() {
    return H3;
  }, [H3]), import_react5.default.createElement("div", u4({}, s6, { onTouchStart: C2, onMouseDown: C2, className: "react-colorful__interactive", ref: m5, onKeyDown: E3, tabIndex: 0, role: "slider" }));
});
var g4 = function(e11) {
  return e11.filter(Boolean).join(" ");
};
var p4 = function(r12) {
  var t12 = r12.color, n6 = r12.left, o9 = r12.top, a5 = void 0 === o9 ? 0.5 : o9, l6 = g4(["react-colorful__pointer", r12.className]);
  return import_react5.default.createElement("div", { className: l6, style: { top: 100 * a5 + "%", left: 100 * n6 + "%" } }, import_react5.default.createElement("div", { className: "react-colorful__pointer-fill", style: { backgroundColor: t12 } }));
};
var b4 = function(e11, r12, t12) {
  return void 0 === r12 && (r12 = 0), void 0 === t12 && (t12 = Math.pow(10, r12)), Math.round(t12 * e11) / t12;
};
var _2 = { grad: 0.9, turn: 360, rad: 360 / (2 * Math.PI) };
var N3 = function(e11) {
  var r12 = e11.s, t12 = e11.v, n6 = e11.a, o9 = (200 - r12) * t12 / 100;
  return { h: b4(e11.h), s: b4(o9 > 0 && o9 < 200 ? r12 * t12 / 100 / (o9 <= 100 ? o9 : 200 - o9) * 100 : 0), l: b4(o9 / 2), a: b4(n6, 2) };
};
var w4 = function(e11) {
  var r12 = N3(e11);
  return "hsl(" + r12.h + ", " + r12.s + "%, " + r12.l + "%)";
};
var y4 = function(e11) {
  var r12 = N3(e11);
  return "hsla(" + r12.h + ", " + r12.s + "%, " + r12.l + "%, " + r12.a + ")";
};
var q2 = function(e11) {
  var r12 = e11.h, t12 = e11.s, n6 = e11.v, o9 = e11.a;
  r12 = r12 / 360 * 6, t12 /= 100, n6 /= 100;
  var a5 = Math.floor(r12), l6 = n6 * (1 - t12), u5 = n6 * (1 - (r12 - a5) * t12), c6 = n6 * (1 - (1 - r12 + a5) * t12), i6 = a5 % 6;
  return { r: b4(255 * [n6, u5, l6, l6, c6, n6][i6]), g: b4(255 * [c6, n6, n6, u5, l6, l6][i6]), b: b4(255 * [l6, l6, c6, n6, n6, u5][i6]), a: b4(o9, 2) };
};
var B2 = function(e11) {
  var r12 = e11.r, t12 = e11.g, n6 = e11.b, o9 = e11.a, a5 = Math.max(r12, t12, n6), l6 = a5 - Math.min(r12, t12, n6), u5 = l6 ? a5 === r12 ? (t12 - n6) / l6 : a5 === t12 ? 2 + (n6 - r12) / l6 : 4 + (r12 - t12) / l6 : 0;
  return { h: b4(60 * (u5 < 0 ? u5 + 6 : u5)), s: b4(a5 ? l6 / a5 * 100 : 0), v: b4(a5 / 255 * 100), a: o9 };
};
var K = import_react5.default.memo(function(r12) {
  var t12 = r12.hue, n6 = r12.onChange, o9 = g4(["react-colorful__hue", r12.className]);
  return import_react5.default.createElement("div", { className: o9 }, import_react5.default.createElement(m4, { onMove: function(e11) {
    n6({ h: 360 * e11.left });
  }, onKey: function(e11) {
    n6({ h: s5(t12 + 360 * e11.left, 0, 360) });
  }, "aria-label": "Hue", "aria-valuetext": b4(t12) }, import_react5.default.createElement(p4, { className: "react-colorful__hue-pointer", left: t12 / 360, color: w4({ h: t12, s: 100, v: 100, a: 1 }) })));
});
var L2 = import_react5.default.memo(function(r12) {
  var t12 = r12.hsva, n6 = r12.onChange, o9 = { backgroundColor: w4({ h: t12.h, s: 100, v: 100, a: 1 }) };
  return import_react5.default.createElement("div", { className: "react-colorful__saturation", style: o9 }, import_react5.default.createElement(m4, { onMove: function(e11) {
    n6({ s: 100 * e11.left, v: 100 - 100 * e11.top });
  }, onKey: function(e11) {
    n6({ s: s5(t12.s + 100 * e11.left, 0, 100), v: s5(t12.v - 100 * e11.top, 0, 100) });
  }, "aria-label": "Color", "aria-valuetext": "Saturation " + b4(t12.s) + "%, Brightness " + b4(t12.v) + "%" }, import_react5.default.createElement(p4, { className: "react-colorful__saturation-pointer", top: 1 - t12.v / 100, left: t12.s / 100, color: w4(t12) })));
});
var A2 = function(e11, r12) {
  if (e11 === r12)
    return true;
  for (var t12 in e11)
    if (e11[t12] !== r12[t12])
      return false;
  return true;
};
function T3(e11, t12, l6) {
  var u5 = i5(l6), c6 = (0, import_react5.useState)(function() {
    return e11.toHsva(t12);
  }), s6 = c6[0], f5 = c6[1], v5 = (0, import_react5.useRef)({ color: t12, hsva: s6 });
  (0, import_react5.useEffect)(function() {
    if (!e11.equal(t12, v5.current.color)) {
      var r12 = e11.toHsva(t12);
      v5.current = { hsva: r12, color: t12 }, f5(r12);
    }
  }, [t12, e11]), (0, import_react5.useEffect)(function() {
    var r12;
    A2(s6, v5.current.hsva) || e11.equal(r12 = e11.fromHsva(s6), v5.current.color) || (v5.current = { hsva: s6, color: r12 }, u5(r12));
  }, [s6, e11, u5]);
  var d5 = (0, import_react5.useCallback)(function(e12) {
    f5(function(r12) {
      return Object.assign({}, r12, e12);
    });
  }, []);
  return [s6, d5];
}
var F2;
var P2 = "undefined" != typeof window ? import_react5.useLayoutEffect : import_react5.useEffect;
var X = function() {
  return F2 || ("undefined" != typeof __webpack_nonce__ ? __webpack_nonce__ : void 0);
};
var R2 = /* @__PURE__ */ new Map();
var V2 = function(e11) {
  P2(function() {
    var r12 = e11.current ? e11.current.ownerDocument : document;
    if (void 0 !== r12 && !R2.has(r12)) {
      var t12 = r12.createElement("style");
      t12.innerHTML = `.react-colorful{position:relative;display:flex;flex-direction:column;width:200px;height:200px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.react-colorful__saturation{position:relative;flex-grow:1;border-color:transparent;border-bottom:12px solid #000;border-radius:8px 8px 0 0;background-image:linear-gradient(0deg,#000,transparent),linear-gradient(90deg,#fff,hsla(0,0%,100%,0))}.react-colorful__alpha-gradient,.react-colorful__pointer-fill{content:"";position:absolute;left:0;top:0;right:0;bottom:0;pointer-events:none;border-radius:inherit}.react-colorful__alpha-gradient,.react-colorful__saturation{box-shadow:inset 0 0 0 1px rgba(0,0,0,.05)}.react-colorful__alpha,.react-colorful__hue{position:relative;height:24px}.react-colorful__hue{background:linear-gradient(90deg,red 0,#ff0 17%,#0f0 33%,#0ff 50%,#00f 67%,#f0f 83%,red)}.react-colorful__last-control{border-radius:0 0 8px 8px}.react-colorful__interactive{position:absolute;left:0;top:0;right:0;bottom:0;border-radius:inherit;outline:none;touch-action:none}.react-colorful__pointer{position:absolute;z-index:1;box-sizing:border-box;width:28px;height:28px;transform:translate(-50%,-50%);background-color:#fff;border:2px solid #fff;border-radius:50%;box-shadow:0 2px 4px rgba(0,0,0,.2)}.react-colorful__interactive:focus .react-colorful__pointer{transform:translate(-50%,-50%) scale(1.1)}.react-colorful__alpha,.react-colorful__alpha-pointer{background-color:#fff;background-image:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill-opacity=".05"><path d="M8 0h8v8H8zM0 8h8v8H0z"/></svg>')}.react-colorful__saturation-pointer{z-index:3}.react-colorful__hue-pointer{z-index:2}`, R2.set(r12, t12);
      var n6 = X();
      n6 && t12.setAttribute("nonce", n6), r12.head.appendChild(t12);
    }
  }, []);
};
var $3 = function(t12) {
  var n6 = t12.className, o9 = t12.colorModel, a5 = t12.color, l6 = void 0 === a5 ? o9.defaultColor : a5, i6 = t12.onChange, s6 = c5(t12, ["className", "colorModel", "color", "onChange"]), f5 = (0, import_react5.useRef)(null);
  V2(f5);
  var v5 = T3(o9, l6, i6), d5 = v5[0], h5 = v5[1], m5 = g4(["react-colorful", n6]);
  return import_react5.default.createElement("div", u4({}, s6, { ref: f5, className: m5 }), import_react5.default.createElement(L2, { hsva: d5, onChange: h5 }), import_react5.default.createElement(K, { hue: d5.h, onChange: h5, className: "react-colorful__last-control" }));
};
var Q = function(r12) {
  var t12 = r12.className, n6 = r12.hsva, o9 = r12.onChange, a5 = { backgroundImage: "linear-gradient(90deg, " + y4(Object.assign({}, n6, { a: 0 })) + ", " + y4(Object.assign({}, n6, { a: 1 })) + ")" }, l6 = g4(["react-colorful__alpha", t12]);
  return import_react5.default.createElement("div", { className: l6 }, import_react5.default.createElement("div", { className: "react-colorful__alpha-gradient", style: a5 }), import_react5.default.createElement(m4, { onMove: function(e11) {
    o9({ a: e11.left });
  }, onKey: function(e11) {
    o9({ a: s5(n6.a + e11.left) });
  }, "aria-label": "Alpha", "aria-valuetext": b4(100 * n6.a) + "%" }, import_react5.default.createElement(p4, { className: "react-colorful__alpha-pointer", left: n6.a, color: y4(n6) })));
};
var U2 = function(t12) {
  var n6 = t12.className, o9 = t12.colorModel, a5 = t12.color, l6 = void 0 === a5 ? o9.defaultColor : a5, i6 = t12.onChange, s6 = c5(t12, ["className", "colorModel", "color", "onChange"]), f5 = (0, import_react5.useRef)(null);
  V2(f5);
  var v5 = T3(o9, l6, i6), d5 = v5[0], h5 = v5[1], m5 = g4(["react-colorful", n6]);
  return import_react5.default.createElement("div", u4({}, s6, { ref: f5, className: m5 }), import_react5.default.createElement(L2, { hsva: d5, onChange: h5 }), import_react5.default.createElement(K, { hue: d5.h, onChange: h5 }), import_react5.default.createElement(Q, { hsva: d5, onChange: h5, className: "react-colorful__last-control" }));
};
var he = { defaultColor: { r: 0, g: 0, b: 0, a: 1 }, toHsva: B2, fromHsva: q2, equal: A2 };
var me = function(r12) {
  return import_react5.default.createElement(U2, u4({}, r12, { colorModel: he }));
};
var be = { defaultColor: { r: 0, g: 0, b: 0 }, toHsva: function(e11) {
  return B2({ r: e11.r, g: e11.g, b: e11.b, a: 1 });
}, fromHsva: function(e11) {
  return { r: (r12 = q2(e11)).r, g: r12.g, b: r12.b };
  var r12;
}, equal: A2 };
var _e = function(r12) {
  return import_react5.default.createElement($3, u4({}, r12, { colorModel: be }));
};

// node_modules/react-dropzone/dist/es/index.js
var import_react6 = __toESM(require_react());
var import_prop_types = __toESM(require_prop_types());

// node_modules/tslib/tslib.es6.js
function __awaiter(thisArg, _arguments, P3, generator) {
  function adopt(value) {
    return value instanceof P3 ? value : new P3(function(resolve) {
      resolve(value);
    });
  }
  return new (P3 || (P3 = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e11) {
        reject(e11);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e11) {
        reject(e11);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}
function __generator(thisArg, body) {
  var _3 = { label: 0, sent: function() {
    if (t12[0] & 1)
      throw t12[1];
    return t12[1];
  }, trys: [], ops: [] }, f5, y5, t12, g5;
  return g5 = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g5[Symbol.iterator] = function() {
    return this;
  }), g5;
  function verb(n6) {
    return function(v5) {
      return step([n6, v5]);
    };
  }
  function step(op) {
    if (f5)
      throw new TypeError("Generator is already executing.");
    while (_3)
      try {
        if (f5 = 1, y5 && (t12 = op[0] & 2 ? y5["return"] : op[0] ? y5["throw"] || ((t12 = y5["return"]) && t12.call(y5), 0) : y5.next) && !(t12 = t12.call(y5, op[1])).done)
          return t12;
        if (y5 = 0, t12)
          op = [op[0] & 2, t12.value];
        switch (op[0]) {
          case 0:
          case 1:
            t12 = op;
            break;
          case 4:
            _3.label++;
            return { value: op[1], done: false };
          case 5:
            _3.label++;
            y5 = op[1];
            op = [0];
            continue;
          case 7:
            op = _3.ops.pop();
            _3.trys.pop();
            continue;
          default:
            if (!(t12 = _3.trys, t12 = t12.length > 0 && t12[t12.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _3 = 0;
              continue;
            }
            if (op[0] === 3 && (!t12 || op[1] > t12[0] && op[1] < t12[3])) {
              _3.label = op[1];
              break;
            }
            if (op[0] === 6 && _3.label < t12[1]) {
              _3.label = t12[1];
              t12 = op;
              break;
            }
            if (t12 && _3.label < t12[2]) {
              _3.label = t12[2];
              _3.ops.push(op);
              break;
            }
            if (t12[2])
              _3.ops.pop();
            _3.trys.pop();
            continue;
        }
        op = body.call(thisArg, _3);
      } catch (e11) {
        op = [6, e11];
        y5 = 0;
      } finally {
        f5 = t12 = 0;
      }
    if (op[0] & 5)
      throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
}
function __read(o9, n6) {
  var m5 = typeof Symbol === "function" && o9[Symbol.iterator];
  if (!m5)
    return o9;
  var i6 = m5.call(o9), r12, ar = [], e11;
  try {
    while ((n6 === void 0 || n6-- > 0) && !(r12 = i6.next()).done)
      ar.push(r12.value);
  } catch (error) {
    e11 = { error };
  } finally {
    try {
      if (r12 && !r12.done && (m5 = i6["return"]))
        m5.call(i6);
    } finally {
      if (e11)
        throw e11.error;
    }
  }
  return ar;
}
function __spread() {
  for (var ar = [], i6 = 0; i6 < arguments.length; i6++)
    ar = ar.concat(__read(arguments[i6]));
  return ar;
}

// node_modules/file-selector/dist/es5/file.js
var COMMON_MIME_TYPES = /* @__PURE__ */ new Map([
  ["avi", "video/avi"],
  ["gif", "image/gif"],
  ["ico", "image/x-icon"],
  ["jpeg", "image/jpeg"],
  ["jpg", "image/jpeg"],
  ["mkv", "video/x-matroska"],
  ["mov", "video/quicktime"],
  ["mp4", "video/mp4"],
  ["pdf", "application/pdf"],
  ["png", "image/png"],
  ["zip", "application/zip"],
  ["doc", "application/msword"],
  ["docx", "application/vnd.openxmlformats-officedocument.wordprocessingml.document"]
]);
function toFileWithPath(file, path) {
  var f5 = withMimeType(file);
  if (typeof f5.path !== "string") {
    var webkitRelativePath = file.webkitRelativePath;
    Object.defineProperty(f5, "path", {
      value: typeof path === "string" ? path : typeof webkitRelativePath === "string" && webkitRelativePath.length > 0 ? webkitRelativePath : file.name,
      writable: false,
      configurable: false,
      enumerable: true
    });
  }
  return f5;
}
function withMimeType(file) {
  var name = file.name;
  var hasExtension = name && name.lastIndexOf(".") !== -1;
  if (hasExtension && !file.type) {
    var ext = name.split(".").pop().toLowerCase();
    var type = COMMON_MIME_TYPES.get(ext);
    if (type) {
      Object.defineProperty(file, "type", {
        value: type,
        writable: false,
        configurable: false,
        enumerable: true
      });
    }
  }
  return file;
}

// node_modules/file-selector/dist/es5/file-selector.js
var FILES_TO_IGNORE = [
  ".DS_Store",
  "Thumbs.db"
];
function fromEvent(evt) {
  return __awaiter(this, void 0, void 0, function() {
    return __generator(this, function(_a) {
      return [2, isDragEvt(evt) && evt.dataTransfer ? getDataTransferFiles(evt.dataTransfer, evt.type) : getInputFiles(evt)];
    });
  });
}
function isDragEvt(value) {
  return !!value.dataTransfer;
}
function getInputFiles(evt) {
  var files = isInput(evt.target) ? evt.target.files ? fromList(evt.target.files) : [] : [];
  return files.map(function(file) {
    return toFileWithPath(file);
  });
}
function isInput(value) {
  return value !== null;
}
function getDataTransferFiles(dt, type) {
  return __awaiter(this, void 0, void 0, function() {
    var items, files;
    return __generator(this, function(_a) {
      switch (_a.label) {
        case 0:
          if (!dt.items)
            return [3, 2];
          items = fromList(dt.items).filter(function(item) {
            return item.kind === "file";
          });
          if (type !== "drop") {
            return [2, items];
          }
          return [4, Promise.all(items.map(toFilePromises))];
        case 1:
          files = _a.sent();
          return [2, noIgnoredFiles(flatten(files))];
        case 2:
          return [2, noIgnoredFiles(fromList(dt.files).map(function(file) {
            return toFileWithPath(file);
          }))];
      }
    });
  });
}
function noIgnoredFiles(files) {
  return files.filter(function(file) {
    return FILES_TO_IGNORE.indexOf(file.name) === -1;
  });
}
function fromList(items) {
  var files = [];
  for (var i6 = 0; i6 < items.length; i6++) {
    var file = items[i6];
    files.push(file);
  }
  return files;
}
function toFilePromises(item) {
  if (typeof item.webkitGetAsEntry !== "function") {
    return fromDataTransferItem(item);
  }
  var entry = item.webkitGetAsEntry();
  if (entry && entry.isDirectory) {
    return fromDirEntry(entry);
  }
  return fromDataTransferItem(item);
}
function flatten(items) {
  return items.reduce(function(acc, files) {
    return __spread(acc, Array.isArray(files) ? flatten(files) : [files]);
  }, []);
}
function fromDataTransferItem(item) {
  var file = item.getAsFile();
  if (!file) {
    return Promise.reject(item + " is not a File");
  }
  var fwp = toFileWithPath(file);
  return Promise.resolve(fwp);
}
function fromEntry(entry) {
  return __awaiter(this, void 0, void 0, function() {
    return __generator(this, function(_a) {
      return [2, entry.isDirectory ? fromDirEntry(entry) : fromFileEntry(entry)];
    });
  });
}
function fromDirEntry(entry) {
  var reader = entry.createReader();
  return new Promise(function(resolve, reject) {
    var entries = [];
    function readEntries() {
      var _this = this;
      reader.readEntries(function(batch) {
        return __awaiter(_this, void 0, void 0, function() {
          var files, err_1, items;
          return __generator(this, function(_a) {
            switch (_a.label) {
              case 0:
                if (!!batch.length)
                  return [3, 5];
                _a.label = 1;
              case 1:
                _a.trys.push([1, 3, , 4]);
                return [4, Promise.all(entries)];
              case 2:
                files = _a.sent();
                resolve(files);
                return [3, 4];
              case 3:
                err_1 = _a.sent();
                reject(err_1);
                return [3, 4];
              case 4:
                return [3, 6];
              case 5:
                items = Promise.all(batch.map(fromEntry));
                entries.push(items);
                readEntries();
                _a.label = 6;
              case 6:
                return [2];
            }
          });
        });
      }, function(err) {
        reject(err);
      });
    }
    readEntries();
  });
}
function fromFileEntry(entry) {
  return __awaiter(this, void 0, void 0, function() {
    return __generator(this, function(_a) {
      return [2, new Promise(function(resolve, reject) {
        entry.file(function(file) {
          var fwp = toFileWithPath(file, entry.fullPath);
          resolve(fwp);
        }, function(err) {
          reject(err);
        });
      })];
    });
  });
}

// node_modules/react-dropzone/dist/es/utils/index.js
var import_attr_accept = __toESM(require_es());
function _slicedToArray(arr, i6) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i6) || _unsupportedIterableToArray(arr, i6) || _nonIterableRest();
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(o9, minLen) {
  if (!o9)
    return;
  if (typeof o9 === "string")
    return _arrayLikeToArray(o9, minLen);
  var n6 = Object.prototype.toString.call(o9).slice(8, -1);
  if (n6 === "Object" && o9.constructor)
    n6 = o9.constructor.name;
  if (n6 === "Map" || n6 === "Set")
    return Array.from(o9);
  if (n6 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n6))
    return _arrayLikeToArray(o9, minLen);
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i6 = 0, arr2 = new Array(len); i6 < len; i6++) {
    arr2[i6] = arr[i6];
  }
  return arr2;
}
function _iterableToArrayLimit(arr, i6) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e2;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i6 && _arr.length === i6)
        break;
    }
  } catch (err) {
    _d = true;
    _e2 = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e2;
    }
  }
  return _arr;
}
function _arrayWithHoles(arr) {
  if (Array.isArray(arr))
    return arr;
}
var FILE_INVALID_TYPE = "file-invalid-type";
var FILE_TOO_LARGE = "file-too-large";
var FILE_TOO_SMALL = "file-too-small";
var TOO_MANY_FILES = "too-many-files";
var getInvalidTypeRejectionErr = function getInvalidTypeRejectionErr2(accept) {
  accept = Array.isArray(accept) && accept.length === 1 ? accept[0] : accept;
  var messageSuffix = Array.isArray(accept) ? "one of ".concat(accept.join(", ")) : accept;
  return {
    code: FILE_INVALID_TYPE,
    message: "File type must be ".concat(messageSuffix)
  };
};
var getTooLargeRejectionErr = function getTooLargeRejectionErr2(maxSize) {
  return {
    code: FILE_TOO_LARGE,
    message: "File is larger than ".concat(maxSize, " bytes")
  };
};
var getTooSmallRejectionErr = function getTooSmallRejectionErr2(minSize) {
  return {
    code: FILE_TOO_SMALL,
    message: "File is smaller than ".concat(minSize, " bytes")
  };
};
var TOO_MANY_FILES_REJECTION = {
  code: TOO_MANY_FILES,
  message: "Too many files"
};
function fileAccepted(file, accept) {
  var isAcceptable = file.type === "application/x-moz-file" || (0, import_attr_accept.default)(file, accept);
  return [isAcceptable, isAcceptable ? null : getInvalidTypeRejectionErr(accept)];
}
function fileMatchSize(file, minSize, maxSize) {
  if (isDefined(file.size)) {
    if (isDefined(minSize) && isDefined(maxSize)) {
      if (file.size > maxSize)
        return [false, getTooLargeRejectionErr(maxSize)];
      if (file.size < minSize)
        return [false, getTooSmallRejectionErr(minSize)];
    } else if (isDefined(minSize) && file.size < minSize)
      return [false, getTooSmallRejectionErr(minSize)];
    else if (isDefined(maxSize) && file.size > maxSize)
      return [false, getTooLargeRejectionErr(maxSize)];
  }
  return [true, null];
}
function isDefined(value) {
  return value !== void 0 && value !== null;
}
function allFilesAccepted(_ref) {
  var files = _ref.files, accept = _ref.accept, minSize = _ref.minSize, maxSize = _ref.maxSize, multiple = _ref.multiple, maxFiles = _ref.maxFiles;
  if (!multiple && files.length > 1 || multiple && maxFiles >= 1 && files.length > maxFiles) {
    return false;
  }
  return files.every(function(file) {
    var _fileAccepted = fileAccepted(file, accept), _fileAccepted2 = _slicedToArray(_fileAccepted, 1), accepted = _fileAccepted2[0];
    var _fileMatchSize = fileMatchSize(file, minSize, maxSize), _fileMatchSize2 = _slicedToArray(_fileMatchSize, 1), sizeMatch = _fileMatchSize2[0];
    return accepted && sizeMatch;
  });
}
function isPropagationStopped(event) {
  if (typeof event.isPropagationStopped === "function") {
    return event.isPropagationStopped();
  } else if (typeof event.cancelBubble !== "undefined") {
    return event.cancelBubble;
  }
  return false;
}
function isEvtWithFiles(event) {
  if (!event.dataTransfer) {
    return !!event.target && !!event.target.files;
  }
  return Array.prototype.some.call(event.dataTransfer.types, function(type) {
    return type === "Files" || type === "application/x-moz-file";
  });
}
function onDocumentDragOver(event) {
  event.preventDefault();
}
function isIe(userAgent) {
  return userAgent.indexOf("MSIE") !== -1 || userAgent.indexOf("Trident/") !== -1;
}
function isEdge(userAgent) {
  return userAgent.indexOf("Edge/") !== -1;
}
function isIeOrEdge() {
  var userAgent = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : window.navigator.userAgent;
  return isIe(userAgent) || isEdge(userAgent);
}
function composeEventHandlers2() {
  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {
    fns[_key] = arguments[_key];
  }
  return function(event) {
    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
      args[_key2 - 1] = arguments[_key2];
    }
    return fns.some(function(fn) {
      if (!isPropagationStopped(event) && fn) {
        fn.apply(void 0, [event].concat(args));
      }
      return isPropagationStopped(event);
    });
  };
}

// node_modules/react-dropzone/dist/es/index.js
var _excluded4 = ["children"];
var _excluded22 = ["open"];
var _excluded32 = ["refKey", "onKeyDown", "onFocus", "onBlur", "onClick", "onDragEnter", "onDragOver", "onDragLeave", "onDrop"];
var _excluded42 = ["refKey", "onChange", "onClick"];
function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray2(arr) || _nonIterableSpread();
}
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray2(arr);
}
function _slicedToArray2(arr, i6) {
  return _arrayWithHoles2(arr) || _iterableToArrayLimit2(arr, i6) || _unsupportedIterableToArray2(arr, i6) || _nonIterableRest2();
}
function _nonIterableRest2() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray2(o9, minLen) {
  if (!o9)
    return;
  if (typeof o9 === "string")
    return _arrayLikeToArray2(o9, minLen);
  var n6 = Object.prototype.toString.call(o9).slice(8, -1);
  if (n6 === "Object" && o9.constructor)
    n6 = o9.constructor.name;
  if (n6 === "Map" || n6 === "Set")
    return Array.from(o9);
  if (n6 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n6))
    return _arrayLikeToArray2(o9, minLen);
}
function _arrayLikeToArray2(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i6 = 0, arr2 = new Array(len); i6 < len; i6++) {
    arr2[i6] = arr[i6];
  }
  return arr2;
}
function _iterableToArrayLimit2(arr, i6) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e2;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i6 && _arr.length === i6)
        break;
    }
  } catch (err) {
    _d = true;
    _e2 = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e2;
    }
  }
  return _arr;
}
function _arrayWithHoles2(arr) {
  if (Array.isArray(arr))
    return arr;
}
function ownKeys2(object2, enumerableOnly) {
  var keys = Object.keys(object2);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object2);
    if (enumerableOnly) {
      symbols = symbols.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object2, sym).enumerable;
      });
    }
    keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread(target) {
  for (var i6 = 1; i6 < arguments.length; i6++) {
    var source = arguments[i6] != null ? arguments[i6] : {};
    if (i6 % 2) {
      ownKeys2(Object(source), true).forEach(function(key) {
        _defineProperty2(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys2(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function _defineProperty2(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _objectWithoutProperties2(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose2(source, excluded);
  var key, i6;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i6 = 0; i6 < sourceSymbolKeys.length; i6++) {
      key = sourceSymbolKeys[i6];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose2(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i6;
  for (i6 = 0; i6 < sourceKeys.length; i6++) {
    key = sourceKeys[i6];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Dropzone = (0, import_react6.forwardRef)(function(_ref, ref) {
  var children = _ref.children, params = _objectWithoutProperties2(_ref, _excluded4);
  var _useDropzone = useDropzone(params), open = _useDropzone.open, props3 = _objectWithoutProperties2(_useDropzone, _excluded22);
  (0, import_react6.useImperativeHandle)(ref, function() {
    return {
      open
    };
  }, [open]);
  return import_react6.default.createElement(import_react6.Fragment, null, children(_objectSpread(_objectSpread({}, props3), {}, {
    open
  })));
});
Dropzone.displayName = "Dropzone";
var defaultProps = {
  disabled: false,
  getFilesFromEvent: fromEvent,
  maxSize: Infinity,
  minSize: 0,
  multiple: true,
  maxFiles: 0,
  preventDropOnDocument: true,
  noClick: false,
  noKeyboard: false,
  noDrag: false,
  noDragEventsBubbling: false,
  validator: null
};
Dropzone.defaultProps = defaultProps;
Dropzone.propTypes = {
  children: import_prop_types.default.func,
  accept: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.arrayOf(import_prop_types.default.string)]),
  multiple: import_prop_types.default.bool,
  preventDropOnDocument: import_prop_types.default.bool,
  noClick: import_prop_types.default.bool,
  noKeyboard: import_prop_types.default.bool,
  noDrag: import_prop_types.default.bool,
  noDragEventsBubbling: import_prop_types.default.bool,
  minSize: import_prop_types.default.number,
  maxSize: import_prop_types.default.number,
  maxFiles: import_prop_types.default.number,
  disabled: import_prop_types.default.bool,
  getFilesFromEvent: import_prop_types.default.func,
  onFileDialogCancel: import_prop_types.default.func,
  onFileDialogOpen: import_prop_types.default.func,
  onDragEnter: import_prop_types.default.func,
  onDragLeave: import_prop_types.default.func,
  onDragOver: import_prop_types.default.func,
  onDrop: import_prop_types.default.func,
  onDropAccepted: import_prop_types.default.func,
  onDropRejected: import_prop_types.default.func,
  validator: import_prop_types.default.func
};
var initialState = {
  isFocused: false,
  isFileDialogActive: false,
  isDragActive: false,
  isDragAccept: false,
  isDragReject: false,
  draggedFiles: [],
  acceptedFiles: [],
  fileRejections: []
};
function useDropzone() {
  var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  var _defaultProps$options = _objectSpread(_objectSpread({}, defaultProps), options), accept = _defaultProps$options.accept, disabled = _defaultProps$options.disabled, getFilesFromEvent = _defaultProps$options.getFilesFromEvent, maxSize = _defaultProps$options.maxSize, minSize = _defaultProps$options.minSize, multiple = _defaultProps$options.multiple, maxFiles = _defaultProps$options.maxFiles, onDragEnter = _defaultProps$options.onDragEnter, onDragLeave = _defaultProps$options.onDragLeave, onDragOver = _defaultProps$options.onDragOver, onDrop = _defaultProps$options.onDrop, onDropAccepted = _defaultProps$options.onDropAccepted, onDropRejected = _defaultProps$options.onDropRejected, onFileDialogCancel = _defaultProps$options.onFileDialogCancel, onFileDialogOpen = _defaultProps$options.onFileDialogOpen, preventDropOnDocument = _defaultProps$options.preventDropOnDocument, noClick = _defaultProps$options.noClick, noKeyboard = _defaultProps$options.noKeyboard, noDrag = _defaultProps$options.noDrag, noDragEventsBubbling = _defaultProps$options.noDragEventsBubbling, validator = _defaultProps$options.validator;
  var rootRef = (0, import_react6.useRef)(null);
  var inputRef = (0, import_react6.useRef)(null);
  var _useReducer = (0, import_react6.useReducer)(reducer, initialState), _useReducer2 = _slicedToArray2(_useReducer, 2), state = _useReducer2[0], dispatch = _useReducer2[1];
  var isFocused = state.isFocused, isFileDialogActive = state.isFileDialogActive, draggedFiles = state.draggedFiles;
  var openFileDialog = (0, import_react6.useCallback)(function() {
    if (inputRef.current) {
      dispatch({
        type: "openDialog"
      });
      if (typeof onFileDialogOpen === "function") {
        onFileDialogOpen();
      }
      inputRef.current.value = null;
      inputRef.current.click();
    }
  }, [dispatch, onFileDialogOpen]);
  var onWindowFocus = function onWindowFocus2() {
    if (isFileDialogActive) {
      setTimeout(function() {
        if (inputRef.current) {
          var files = inputRef.current.files;
          if (!files.length) {
            dispatch({
              type: "closeDialog"
            });
            if (typeof onFileDialogCancel === "function") {
              onFileDialogCancel();
            }
          }
        }
      }, 300);
    }
  };
  (0, import_react6.useEffect)(function() {
    window.addEventListener("focus", onWindowFocus, false);
    return function() {
      window.removeEventListener("focus", onWindowFocus, false);
    };
  }, [inputRef, isFileDialogActive, onFileDialogCancel]);
  var onKeyDownCb = (0, import_react6.useCallback)(function(event) {
    if (!rootRef.current || !rootRef.current.isEqualNode(event.target)) {
      return;
    }
    if (event.keyCode === 32 || event.keyCode === 13) {
      event.preventDefault();
      openFileDialog();
    }
  }, [rootRef, inputRef, openFileDialog]);
  var onFocusCb = (0, import_react6.useCallback)(function() {
    dispatch({
      type: "focus"
    });
  }, []);
  var onBlurCb = (0, import_react6.useCallback)(function() {
    dispatch({
      type: "blur"
    });
  }, []);
  var onClickCb = (0, import_react6.useCallback)(function() {
    if (noClick) {
      return;
    }
    if (isIeOrEdge()) {
      setTimeout(openFileDialog, 0);
    } else {
      openFileDialog();
    }
  }, [inputRef, noClick, openFileDialog]);
  var dragTargetsRef = (0, import_react6.useRef)([]);
  var onDocumentDrop = function onDocumentDrop2(event) {
    if (rootRef.current && rootRef.current.contains(event.target)) {
      return;
    }
    event.preventDefault();
    dragTargetsRef.current = [];
  };
  (0, import_react6.useEffect)(function() {
    if (preventDropOnDocument) {
      document.addEventListener("dragover", onDocumentDragOver, false);
      document.addEventListener("drop", onDocumentDrop, false);
    }
    return function() {
      if (preventDropOnDocument) {
        document.removeEventListener("dragover", onDocumentDragOver);
        document.removeEventListener("drop", onDocumentDrop);
      }
    };
  }, [rootRef, preventDropOnDocument]);
  var onDragEnterCb = (0, import_react6.useCallback)(function(event) {
    event.preventDefault();
    event.persist();
    stopPropagation(event);
    dragTargetsRef.current = [].concat(_toConsumableArray(dragTargetsRef.current), [event.target]);
    if (isEvtWithFiles(event)) {
      Promise.resolve(getFilesFromEvent(event)).then(function(draggedFiles2) {
        if (isPropagationStopped(event) && !noDragEventsBubbling) {
          return;
        }
        dispatch({
          draggedFiles: draggedFiles2,
          isDragActive: true,
          type: "setDraggedFiles"
        });
        if (onDragEnter) {
          onDragEnter(event);
        }
      });
    }
  }, [getFilesFromEvent, onDragEnter, noDragEventsBubbling]);
  var onDragOverCb = (0, import_react6.useCallback)(function(event) {
    event.preventDefault();
    event.persist();
    stopPropagation(event);
    var hasFiles = isEvtWithFiles(event);
    if (hasFiles && event.dataTransfer) {
      try {
        event.dataTransfer.dropEffect = "copy";
      } catch (_unused) {
      }
    }
    if (hasFiles && onDragOver) {
      onDragOver(event);
    }
    return false;
  }, [onDragOver, noDragEventsBubbling]);
  var onDragLeaveCb = (0, import_react6.useCallback)(function(event) {
    event.preventDefault();
    event.persist();
    stopPropagation(event);
    var targets = dragTargetsRef.current.filter(function(target) {
      return rootRef.current && rootRef.current.contains(target);
    });
    var targetIdx = targets.indexOf(event.target);
    if (targetIdx !== -1) {
      targets.splice(targetIdx, 1);
    }
    dragTargetsRef.current = targets;
    if (targets.length > 0) {
      return;
    }
    dispatch({
      isDragActive: false,
      type: "setDraggedFiles",
      draggedFiles: []
    });
    if (isEvtWithFiles(event) && onDragLeave) {
      onDragLeave(event);
    }
  }, [rootRef, onDragLeave, noDragEventsBubbling]);
  var onDropCb = (0, import_react6.useCallback)(function(event) {
    event.preventDefault();
    event.persist();
    stopPropagation(event);
    dragTargetsRef.current = [];
    if (isEvtWithFiles(event)) {
      Promise.resolve(getFilesFromEvent(event)).then(function(files) {
        if (isPropagationStopped(event) && !noDragEventsBubbling) {
          return;
        }
        var acceptedFiles = [];
        var fileRejections = [];
        files.forEach(function(file) {
          var _fileAccepted = fileAccepted(file, accept), _fileAccepted2 = _slicedToArray2(_fileAccepted, 2), accepted = _fileAccepted2[0], acceptError = _fileAccepted2[1];
          var _fileMatchSize = fileMatchSize(file, minSize, maxSize), _fileMatchSize2 = _slicedToArray2(_fileMatchSize, 2), sizeMatch = _fileMatchSize2[0], sizeError = _fileMatchSize2[1];
          var customErrors = validator ? validator(file) : null;
          if (accepted && sizeMatch && !customErrors) {
            acceptedFiles.push(file);
          } else {
            var errors = [acceptError, sizeError];
            if (customErrors) {
              errors = errors.concat(customErrors);
            }
            fileRejections.push({
              file,
              errors: errors.filter(function(e11) {
                return e11;
              })
            });
          }
        });
        if (!multiple && acceptedFiles.length > 1 || multiple && maxFiles >= 1 && acceptedFiles.length > maxFiles) {
          acceptedFiles.forEach(function(file) {
            fileRejections.push({
              file,
              errors: [TOO_MANY_FILES_REJECTION]
            });
          });
          acceptedFiles.splice(0);
        }
        dispatch({
          acceptedFiles,
          fileRejections,
          type: "setFiles"
        });
        if (onDrop) {
          onDrop(acceptedFiles, fileRejections, event);
        }
        if (fileRejections.length > 0 && onDropRejected) {
          onDropRejected(fileRejections, event);
        }
        if (acceptedFiles.length > 0 && onDropAccepted) {
          onDropAccepted(acceptedFiles, event);
        }
      });
    }
    dispatch({
      type: "reset"
    });
  }, [multiple, accept, minSize, maxSize, maxFiles, getFilesFromEvent, onDrop, onDropAccepted, onDropRejected, noDragEventsBubbling, validator]);
  var composeHandler = function composeHandler2(fn) {
    return disabled ? null : fn;
  };
  var composeKeyboardHandler = function composeKeyboardHandler2(fn) {
    return noKeyboard ? null : composeHandler(fn);
  };
  var composeDragHandler = function composeDragHandler2(fn) {
    return noDrag ? null : composeHandler(fn);
  };
  var stopPropagation = function stopPropagation2(event) {
    if (noDragEventsBubbling) {
      event.stopPropagation();
    }
  };
  var getRootProps = (0, import_react6.useMemo)(function() {
    return function() {
      var _ref2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, _ref2$refKey = _ref2.refKey, refKey = _ref2$refKey === void 0 ? "ref" : _ref2$refKey, onKeyDown = _ref2.onKeyDown, onFocus = _ref2.onFocus, onBlur = _ref2.onBlur, onClick = _ref2.onClick, onDragEnter2 = _ref2.onDragEnter, onDragOver2 = _ref2.onDragOver, onDragLeave2 = _ref2.onDragLeave, onDrop2 = _ref2.onDrop, rest2 = _objectWithoutProperties2(_ref2, _excluded32);
      return _objectSpread(_objectSpread(_defineProperty2({
        onKeyDown: composeKeyboardHandler(composeEventHandlers2(onKeyDown, onKeyDownCb)),
        onFocus: composeKeyboardHandler(composeEventHandlers2(onFocus, onFocusCb)),
        onBlur: composeKeyboardHandler(composeEventHandlers2(onBlur, onBlurCb)),
        onClick: composeHandler(composeEventHandlers2(onClick, onClickCb)),
        onDragEnter: composeDragHandler(composeEventHandlers2(onDragEnter2, onDragEnterCb)),
        onDragOver: composeDragHandler(composeEventHandlers2(onDragOver2, onDragOverCb)),
        onDragLeave: composeDragHandler(composeEventHandlers2(onDragLeave2, onDragLeaveCb)),
        onDrop: composeDragHandler(composeEventHandlers2(onDrop2, onDropCb))
      }, refKey, rootRef), !disabled && !noKeyboard ? {
        tabIndex: 0
      } : {}), rest2);
    };
  }, [rootRef, onKeyDownCb, onFocusCb, onBlurCb, onClickCb, onDragEnterCb, onDragOverCb, onDragLeaveCb, onDropCb, noKeyboard, noDrag, disabled]);
  var onInputElementClick = (0, import_react6.useCallback)(function(event) {
    event.stopPropagation();
  }, []);
  var getInputProps = (0, import_react6.useMemo)(function() {
    return function() {
      var _ref3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, _ref3$refKey = _ref3.refKey, refKey = _ref3$refKey === void 0 ? "ref" : _ref3$refKey, onChange = _ref3.onChange, onClick = _ref3.onClick, rest2 = _objectWithoutProperties2(_ref3, _excluded42);
      var inputProps = _defineProperty2({
        accept,
        multiple,
        type: "file",
        style: {
          display: "none"
        },
        onChange: composeHandler(composeEventHandlers2(onChange, onDropCb)),
        onClick: composeHandler(composeEventHandlers2(onClick, onInputElementClick)),
        autoComplete: "off",
        tabIndex: -1
      }, refKey, inputRef);
      return _objectSpread(_objectSpread({}, inputProps), rest2);
    };
  }, [inputRef, accept, multiple, onDropCb, disabled]);
  var fileCount = draggedFiles.length;
  var isDragAccept = fileCount > 0 && allFilesAccepted({
    files: draggedFiles,
    accept,
    minSize,
    maxSize,
    multiple,
    maxFiles
  });
  var isDragReject = fileCount > 0 && !isDragAccept;
  return _objectSpread(_objectSpread({}, state), {}, {
    isDragAccept,
    isDragReject,
    isFocused: isFocused && !disabled,
    getRootProps,
    getInputProps,
    rootRef,
    inputRef,
    open: composeHandler(openFileDialog)
  });
}
function reducer(state, action) {
  switch (action.type) {
    case "focus":
      return _objectSpread(_objectSpread({}, state), {}, {
        isFocused: true
      });
    case "blur":
      return _objectSpread(_objectSpread({}, state), {}, {
        isFocused: false
      });
    case "openDialog":
      return _objectSpread(_objectSpread({}, state), {}, {
        isFileDialogActive: true
      });
    case "closeDialog":
      return _objectSpread(_objectSpread({}, state), {}, {
        isFileDialogActive: false
      });
    case "setDraggedFiles":
      var isDragActive = action.isDragActive, draggedFiles = action.draggedFiles;
      return _objectSpread(_objectSpread({}, state), {}, {
        draggedFiles,
        isDragActive
      });
    case "setFiles":
      return _objectSpread(_objectSpread({}, state), {}, {
        acceptedFiles: action.acceptedFiles,
        fileRejections: action.fileRejections
      });
    case "reset":
      return _objectSpread({}, initialState);
    default:
      return state;
  }
}

// node_modules/zustand/esm/middleware.js
var subscribeWithSelector = (fn) => (set, get, api) => {
  const origSubscribe = api.subscribe;
  api.subscribe = (selector, optListener, options) => {
    let listener = selector;
    if (optListener) {
      const equalityFn = (options == null ? void 0 : options.equalityFn) || Object.is;
      let currentSlice = selector(api.getState());
      listener = (state) => {
        const nextSlice = selector(state);
        if (!equalityFn(currentSlice, nextSlice)) {
          const previousSlice = currentSlice;
          optListener(currentSlice = nextSlice, previousSlice);
        }
      };
      if (options == null ? void 0 : options.fireImmediately) {
        optListener(currentSlice, currentSlice);
      }
    }
    return origSubscribe(listener);
  };
  const initialState2 = fn(set, get, api);
  return initialState2;
};

// node_modules/leva/dist/leva.esm.js
var import_react_dom2 = __toESM(require_react_dom());
var import_merge_value = __toESM(require_merge_value());
var join = (...args) => args.filter(Boolean).join(".");
function getKeyPath(path) {
  const dir = path.split(".");
  return [dir.pop(), dir.join(".") || void 0];
}
function getValuesForPaths(data, paths) {
  return Object.entries(pick(data, paths)).reduce((acc, [, {
    value,
    disabled,
    key
  }]) => {
    acc[key] = disabled ? void 0 : value;
    return acc;
  }, {});
}
function useCompareMemoize(value, deep) {
  const ref = (0, import_react7.useRef)();
  const compare = deep ? dequal : shallow;
  if (!compare(value, ref.current)) {
    ref.current = value;
  }
  return ref.current;
}
function useDeepMemo(fn, deps) {
  return (0, import_react7.useMemo)(fn, useCompareMemoize(deps, true));
}
function useToggle(toggled) {
  const wrapperRef = (0, import_react7.useRef)(null);
  const contentRef = (0, import_react7.useRef)(null);
  const firstRender = (0, import_react7.useRef)(true);
  (0, import_react7.useLayoutEffect)(() => {
    if (!toggled) {
      wrapperRef.current.style.height = "0px";
      wrapperRef.current.style.overflow = "hidden";
    }
  }, []);
  (0, import_react7.useEffect)(() => {
    if (firstRender.current) {
      firstRender.current = false;
      return;
    }
    let timeout;
    const ref = wrapperRef.current;
    const fixHeight = () => {
      if (toggled) {
        ref.style.removeProperty("height");
        ref.style.removeProperty("overflow");
        contentRef.current.scrollIntoView({
          behavior: "smooth",
          block: "nearest"
        });
      }
    };
    ref.addEventListener("transitionend", fixHeight, {
      once: true
    });
    const {
      height
    } = contentRef.current.getBoundingClientRect();
    ref.style.height = height + "px";
    if (!toggled) {
      ref.style.overflow = "hidden";
      timeout = window.setTimeout(() => ref.style.height = "0px", 50);
    }
    return () => {
      ref.removeEventListener("transitionend", fixHeight);
      clearTimeout(timeout);
    };
  }, [toggled]);
  return {
    wrapperRef,
    contentRef
  };
}
var useVisiblePaths = (store) => {
  const [paths, setPaths] = (0, import_react7.useState)(store.getVisiblePaths());
  (0, import_react7.useEffect)(() => {
    setPaths(store.getVisiblePaths());
    const unsub = store.useStore.subscribe(store.getVisiblePaths, setPaths, {
      equalityFn: shallow
    });
    return () => unsub();
  }, [store]);
  return paths;
};
function useValuesForPath(store, paths, initialData) {
  const valuesForPath = store.useStore((s6) => {
    const data = _objectSpread2(_objectSpread2({}, initialData), s6.data);
    return getValuesForPaths(data, paths);
  }, shallow);
  return valuesForPath;
}
function usePopin(margin = 3) {
  const popinRef = (0, import_react7.useRef)(null);
  const wrapperRef = (0, import_react7.useRef)(null);
  const [shown, setShow] = (0, import_react7.useState)(false);
  const show = (0, import_react7.useCallback)(() => setShow(true), []);
  const hide = (0, import_react7.useCallback)(() => setShow(false), []);
  (0, import_react7.useLayoutEffect)(() => {
    if (shown) {
      const {
        bottom,
        top,
        left
      } = popinRef.current.getBoundingClientRect();
      const {
        height
      } = wrapperRef.current.getBoundingClientRect();
      const direction = bottom + height > window.innerHeight - 40 ? "up" : "down";
      wrapperRef.current.style.position = "fixed";
      wrapperRef.current.style.zIndex = "10000";
      wrapperRef.current.style.left = left + "px";
      if (direction === "down")
        wrapperRef.current.style.top = bottom + margin + "px";
      else
        wrapperRef.current.style.bottom = window.innerHeight - top + margin + "px";
    }
  }, [margin, shown]);
  return {
    popinRef,
    wrapperRef,
    shown,
    show,
    hide
  };
}
k3([names_default]);
var convertMap = {
  rgb: "toRgb",
  hsl: "toHsl",
  hsv: "toHsv",
  hex: "toHex"
};
v8n_esm_default.extend({
  color: () => (value) => w3(value).isValid()
});
var schema$22 = (o9) => v8n_esm_default().color().test(o9);
function convert2(color2, {
  format: format3,
  hasAlpha,
  isString
}) {
  const convertFn = convertMap[format3] + (isString && format3 !== "hex" ? "String" : "");
  const result = color2[convertFn]();
  return typeof result === "object" && !hasAlpha ? omit(result, ["a"]) : result;
}
var sanitize$22 = (v5, settings) => {
  const color2 = w3(v5);
  if (!color2.isValid())
    throw Error("Invalid color");
  return convert2(color2, settings);
};
var format$12 = (v5, settings) => {
  return convert2(w3(v5), _objectSpread2(_objectSpread2({}, settings), {}, {
    isString: true,
    format: "hex"
  }));
};
var normalize$3 = ({
  value
}) => {
  const _f = I2(value);
  const format3 = _f === "name" ? "hex" : _f;
  const hasAlpha = typeof value === "object" ? "a" in value : _f === "hex" && value.length === 8 || /^(rgba)|(hsla)|(hsva)/.test(value);
  const settings = {
    format: format3,
    hasAlpha,
    isString: typeof value === "string"
  };
  return {
    value: sanitize$22(value, settings),
    settings
  };
};
var props$22 = Object.freeze({
  __proto__: null,
  schema: schema$22,
  sanitize: sanitize$22,
  format: format$12,
  normalize: normalize$3
});
var ColorPreview = styled("div", {
  position: "relative",
  boxSizing: "border-box",
  borderRadius: "$sm",
  overflow: "hidden",
  cursor: "pointer",
  height: "$rowHeight",
  width: "$rowHeight",
  backgroundColor: "#fff",
  backgroundImage: `url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill-opacity=".05"><path d="M8 0h8v8H8zM0 8h8v8H0z"/></svg>')`,
  $inputStyle: "",
  $hover: "",
  zIndex: 1,
  variants: {
    active: {
      true: {
        $inputStyle: "$accent1"
      }
    }
  },
  "&::before": {
    content: '""',
    position: "absolute",
    top: 0,
    bottom: 0,
    right: 0,
    left: 0,
    backgroundColor: "currentColor",
    zIndex: 1
  }
});
var PickerContainer = styled("div", {
  position: "relative",
  display: "grid",
  gridTemplateColumns: "$sizes$rowHeight auto",
  columnGap: "$colGap",
  alignItems: "center"
});
var PickerWrapper = styled("div", {
  width: "$colorPickerWidth",
  height: "$colorPickerHeight",
  ".react-colorful": {
    width: "100%",
    height: "100%",
    boxShadow: "$level2",
    cursor: "crosshair"
  },
  ".react-colorful__saturation": {
    borderRadius: "$sm $sm 0 0"
  },
  ".react-colorful__alpha, .react-colorful__hue": {
    height: 10
  },
  ".react-colorful__last-control": {
    borderRadius: "0 0 $sm $sm"
  },
  ".react-colorful__pointer": {
    height: 12,
    width: 12
  }
});
function convertToRgb(value, format3) {
  return format3 !== "rgb" ? w3(value).toRgb() : value;
}
function Color({
  value,
  displayValue,
  settings,
  onUpdate
}) {
  const {
    emitOnEditStart,
    emitOnEditEnd
  } = useInputContext();
  const {
    format: format3,
    hasAlpha
  } = settings;
  const {
    popinRef,
    wrapperRef,
    shown,
    show,
    hide
  } = usePopin();
  const timer = (0, import_react7.useRef)(0);
  const [initialRgb, setInitialRgb] = (0, import_react7.useState)(() => convertToRgb(value, format3));
  const ColorPicker = hasAlpha ? me : _e;
  const showPicker = () => {
    setInitialRgb(convertToRgb(value, format3));
    show();
    emitOnEditStart();
  };
  const hidePicker = () => {
    hide();
    emitOnEditEnd();
    window.clearTimeout(timer.current);
  };
  const hideAfterDelay = () => {
    timer.current = window.setTimeout(hidePicker, 500);
  };
  (0, import_react7.useEffect)(() => {
    return () => window.clearTimeout(timer.current);
  }, []);
  return import_react7.default.createElement(import_react7.default.Fragment, null, import_react7.default.createElement(ColorPreview, {
    ref: popinRef,
    active: shown,
    onClick: () => showPicker(),
    style: {
      color: displayValue
    }
  }), shown && import_react7.default.createElement(Portal2, null, import_react7.default.createElement(Overlay, {
    onPointerUp: hidePicker
  }), import_react7.default.createElement(PickerWrapper, {
    ref: wrapperRef,
    onMouseEnter: () => window.clearTimeout(timer.current),
    onMouseLeave: (e11) => e11.buttons === 0 && hideAfterDelay()
  }, import_react7.default.createElement(ColorPicker, {
    color: initialRgb,
    onChange: onUpdate
  }))));
}
function ColorComponent() {
  const {
    value,
    displayValue,
    label,
    onChange,
    onUpdate,
    settings
  } = useInputContext();
  return import_react7.default.createElement(Row, {
    input: true
  }, import_react7.default.createElement(Label, null, label), import_react7.default.createElement(PickerContainer, null, import_react7.default.createElement(Color, {
    value,
    displayValue,
    onChange,
    onUpdate,
    settings
  }), import_react7.default.createElement(ValueInput, {
    value: displayValue,
    onChange,
    onUpdate
  })));
}
var color = createInternalPlugin(_objectSpread2({
  component: ColorComponent
}, props$22));
function Vector3dComponent() {
  const {
    label,
    displayValue,
    onUpdate,
    settings
  } = useInputContext();
  return import_react7.default.createElement(Row, {
    input: true
  }, import_react7.default.createElement(Label, null, label), import_react7.default.createElement(Vector, {
    value: displayValue,
    settings,
    onUpdate
  }));
}
var vector3d = createInternalPlugin(_objectSpread2({
  component: Vector3dComponent
}, getVectorPlugin(["x", "y", "z"])));
var JoystickTrigger = styled("div", {
  $flexCenter: "",
  position: "relative",
  backgroundColor: "$elevation3",
  borderRadius: "$sm",
  cursor: "pointer",
  height: "$rowHeight",
  width: "$rowHeight",
  touchAction: "none",
  $draggable: "",
  $hover: "",
  "&:active": {
    cursor: "none"
  },
  "&::after": {
    content: '""',
    backgroundColor: "$accent2",
    height: 4,
    width: 4,
    borderRadius: 2
  }
});
var JoystickPlayground = styled("div", {
  $flexCenter: "",
  width: "$joystickWidth",
  height: "$joystickHeight",
  borderRadius: "$sm",
  boxShadow: "$level2",
  position: "fixed",
  zIndex: 1e4,
  overflow: "hidden",
  $draggable: "",
  transform: "translate(-50%, -50%)",
  variants: {
    isOutOfBounds: {
      true: {
        backgroundColor: "$elevation1"
      },
      false: {
        backgroundColor: "$elevation3"
      }
    }
  },
  "> div": {
    position: "absolute",
    $flexCenter: "",
    borderStyle: "solid",
    borderWidth: 1,
    borderColor: "$highlight1",
    backgroundColor: "$elevation3",
    width: "80%",
    height: "80%",
    "&::after,&::before": {
      content: '""',
      position: "absolute",
      zindex: 10,
      backgroundColor: "$highlight1"
    },
    "&::before": {
      width: "100%",
      height: 1
    },
    "&::after": {
      height: "100%",
      width: 1
    }
  },
  "> span": {
    position: "relative",
    zindex: 100,
    width: 10,
    height: 10,
    backgroundColor: "$accent2",
    borderRadius: "50%"
  }
});
function Joystick({
  value,
  settings,
  onUpdate
}) {
  const timeout = (0, import_react7.useRef)();
  const outOfBoundsX = (0, import_react7.useRef)(0);
  const outOfBoundsY = (0, import_react7.useRef)(0);
  const stepMultiplier = (0, import_react7.useRef)(1);
  const [joystickShown, setShowJoystick] = (0, import_react7.useState)(false);
  const [isOutOfBounds, setIsOutOfBounds] = (0, import_react7.useState)(false);
  const [spanRef, set] = useTransform();
  const joystickeRef = (0, import_react7.useRef)(null);
  const playgroundRef = (0, import_react7.useRef)(null);
  (0, import_react7.useLayoutEffect)(() => {
    if (joystickShown) {
      const {
        top,
        left,
        width,
        height
      } = joystickeRef.current.getBoundingClientRect();
      playgroundRef.current.style.left = left + width / 2 + "px";
      playgroundRef.current.style.top = top + height / 2 + "px";
    }
  }, [joystickShown]);
  const {
    keys: [v1, v22],
    joystick
  } = settings;
  const yFactor = joystick === "invertY" ? 1 : -1;
  const {
    [v1]: {
      step: stepV1
    },
    [v22]: {
      step: stepV2
    }
  } = settings;
  const wpx = useTh("sizes", "joystickWidth");
  const hpx = useTh("sizes", "joystickHeight");
  const w5 = parseFloat(wpx) * 0.8 / 2;
  const h5 = parseFloat(hpx) * 0.8 / 2;
  const startOutOfBounds = (0, import_react7.useCallback)(() => {
    if (timeout.current)
      return;
    setIsOutOfBounds(true);
    if (outOfBoundsX.current)
      set({
        x: outOfBoundsX.current * w5
      });
    if (outOfBoundsY.current)
      set({
        y: outOfBoundsY.current * -h5
      });
    timeout.current = window.setInterval(() => {
      onUpdate((v5) => {
        const incX = stepV1 * outOfBoundsX.current * stepMultiplier.current;
        const incY = yFactor * stepV2 * outOfBoundsY.current * stepMultiplier.current;
        return Array.isArray(v5) ? {
          [v1]: v5[0] + incX,
          [v22]: v5[1] + incY
        } : {
          [v1]: v5[v1] + incX,
          [v22]: v5[v22] + incY
        };
      });
    }, 16);
  }, [w5, h5, onUpdate, set, stepV1, stepV2, v1, v22, yFactor]);
  const endOutOfBounds = (0, import_react7.useCallback)(() => {
    window.clearTimeout(timeout.current);
    timeout.current = void 0;
    setIsOutOfBounds(false);
  }, []);
  (0, import_react7.useEffect)(() => {
    function setStepMultiplier(event) {
      stepMultiplier.current = multiplyStep(event);
    }
    window.addEventListener("keydown", setStepMultiplier);
    window.addEventListener("keyup", setStepMultiplier);
    return () => {
      window.clearTimeout(timeout.current);
      window.removeEventListener("keydown", setStepMultiplier);
      window.removeEventListener("keyup", setStepMultiplier);
    };
  }, []);
  const bind = useDrag2(({
    first: first2,
    active,
    delta: [dx, dy],
    movement: [mx, my]
  }) => {
    if (first2)
      setShowJoystick(true);
    const _x = clamp(mx, -w5, w5);
    const _y = clamp(my, -h5, h5);
    outOfBoundsX.current = Math.abs(mx) > Math.abs(_x) ? Math.sign(mx - _x) : 0;
    outOfBoundsY.current = Math.abs(my) > Math.abs(_y) ? Math.sign(_y - my) : 0;
    let newX = value[v1];
    let newY = value[v22];
    if (active) {
      if (!outOfBoundsX.current) {
        newX += dx * stepV1 * stepMultiplier.current;
        set({
          x: _x
        });
      }
      if (!outOfBoundsY.current) {
        newY -= yFactor * dy * stepV2 * stepMultiplier.current;
        set({
          y: _y
        });
      }
      if (outOfBoundsX.current || outOfBoundsY.current)
        startOutOfBounds();
      else
        endOutOfBounds();
      onUpdate({
        [v1]: newX,
        [v22]: newY
      });
    } else {
      setShowJoystick(false);
      outOfBoundsX.current = 0;
      outOfBoundsY.current = 0;
      set({
        x: 0,
        y: 0
      });
      endOutOfBounds();
    }
  });
  return import_react7.default.createElement(JoystickTrigger, _extends2({
    ref: joystickeRef
  }, bind()), joystickShown && import_react7.default.createElement(Portal2, null, import_react7.default.createElement(JoystickPlayground, {
    ref: playgroundRef,
    isOutOfBounds
  }, import_react7.default.createElement("div", null), import_react7.default.createElement("span", {
    ref: spanRef
  }))));
}
var Container$1 = styled("div", {
  display: "grid",
  columnGap: "$colGap",
  variants: {
    withJoystick: {
      true: {
        gridTemplateColumns: "$sizes$rowHeight auto"
      },
      false: {
        gridTemplateColumns: "auto"
      }
    }
  }
});
function Vector2dComponent() {
  const {
    label,
    displayValue,
    onUpdate,
    settings
  } = useInputContext();
  return import_react7.default.createElement(Row, {
    input: true
  }, import_react7.default.createElement(Label, null, label), import_react7.default.createElement(Container$1, {
    withJoystick: !!settings.joystick
  }, settings.joystick && import_react7.default.createElement(Joystick, {
    value: displayValue,
    settings,
    onUpdate
  }), import_react7.default.createElement(Vector, {
    value: displayValue,
    settings,
    onUpdate
  })));
}
var _excluded$72 = ["joystick"];
var plugin = getVectorPlugin(["x", "y"]);
var normalize$22 = (_ref) => {
  let {
    joystick = true
  } = _ref, input = _objectWithoutProperties(_ref, _excluded$72);
  const {
    value,
    settings
  } = plugin.normalize(input);
  return {
    value,
    settings: _objectSpread2(_objectSpread2({}, settings), {}, {
      joystick
    })
  };
};
var vector2d = createInternalPlugin(_objectSpread2(_objectSpread2({
  component: Vector2dComponent
}, plugin), {}, {
  normalize: normalize$22
}));
var sanitize$12 = (v5) => {
  if (v5 === void 0)
    return void 0;
  if (v5 instanceof File) {
    try {
      return URL.createObjectURL(v5);
    } catch (e11) {
      return void 0;
    }
  }
  if (typeof v5 === "string" && v5.indexOf("blob:") === 0)
    return v5;
  throw Error(`Invalid image format [undefined | blob |\xA0File].`);
};
var schema$12 = (_o, s6) => typeof s6 === "object" && "image" in s6;
var normalize$12 = ({
  image: image2
}) => {
  return {
    value: image2
  };
};
var props$12 = Object.freeze({
  __proto__: null,
  sanitize: sanitize$12,
  schema: schema$12,
  normalize: normalize$12
});
var ImageContainer = styled("div", {
  position: "relative",
  display: "grid",
  gridTemplateColumns: "$sizes$rowHeight auto 20px",
  columnGap: "$colGap",
  alignItems: "center"
});
var DropZone = styled("div", {
  $flexCenter: "",
  overflow: "hidden",
  height: "$rowHeight",
  background: "$elevation3",
  textAlign: "center",
  color: "inherit",
  borderRadius: "$sm",
  outline: "none",
  userSelect: "none",
  cursor: "pointer",
  $inputStyle: "",
  $hover: "",
  $focusWithin: "",
  $active: "$accent1 $elevation1",
  variants: {
    isDragAccept: {
      true: {
        $inputStyle: "$accent1",
        backgroundColor: "$elevation1"
      }
    }
  }
});
var ImagePreview = styled("div", {
  boxSizing: "border-box",
  borderRadius: "$sm",
  height: "$rowHeight",
  width: "$rowHeight",
  $inputStyle: "",
  backgroundSize: "cover",
  backgroundPosition: "center",
  variants: {
    hasImage: {
      true: {
        cursor: "pointer",
        $hover: "",
        $active: ""
      }
    }
  }
});
var ImageLargePreview = styled("div", {
  $flexCenter: "",
  width: "$imagePreviewWidth",
  height: "$imagePreviewHeight",
  borderRadius: "$sm",
  boxShadow: "$level2",
  pointerEvents: "none",
  $inputStyle: "",
  backgroundSize: "cover",
  backgroundPosition: "center"
});
var Instructions = styled("div", {
  fontSize: "0.8em",
  height: "100%",
  padding: "$rowGap $md"
});
var Remove = styled("div", {
  $flexCenter: "",
  top: "0",
  right: "0",
  marginRight: "$sm",
  height: "100%",
  cursor: "pointer",
  variants: {
    disabled: {
      true: {
        color: "$elevation3",
        cursor: "default"
      }
    }
  },
  "&::after,&::before": {
    content: '""',
    position: "absolute",
    height: 2,
    width: 10,
    borderRadius: 1,
    backgroundColor: "currentColor"
  },
  "&::after": {
    transform: "rotate(45deg)"
  },
  "&::before": {
    transform: "rotate(-45deg)"
  }
});
function ImageComponent() {
  const {
    label,
    value,
    onUpdate
  } = useInputContext();
  const {
    popinRef,
    wrapperRef,
    shown,
    show,
    hide
  } = usePopin();
  const onDrop = (0, import_react7.useCallback)((acceptedFiles) => {
    if (acceptedFiles.length)
      onUpdate(acceptedFiles[0]);
  }, [onUpdate]);
  const clear = (0, import_react7.useCallback)((e11) => {
    e11.stopPropagation();
    onUpdate(void 0);
  }, [onUpdate]);
  const {
    getRootProps,
    getInputProps,
    isDragAccept
  } = useDropzone({
    maxFiles: 1,
    accept: "image/*",
    onDrop
  });
  return import_react7.default.createElement(Row, {
    input: true
  }, import_react7.default.createElement(Label, null, label), import_react7.default.createElement(ImageContainer, null, import_react7.default.createElement(ImagePreview, {
    ref: popinRef,
    hasImage: !!value,
    onPointerDown: () => !!value && show(),
    onPointerUp: hide,
    style: {
      backgroundImage: value ? `url(${value})` : "none"
    }
  }), shown && !!value && import_react7.default.createElement(Portal2, null, import_react7.default.createElement(Overlay, {
    onPointerUp: hide,
    style: {
      cursor: "pointer"
    }
  }), import_react7.default.createElement(ImageLargePreview, {
    ref: wrapperRef,
    style: {
      backgroundImage: `url(${value})`
    }
  })), import_react7.default.createElement(DropZone, getRootProps({
    isDragAccept
  }), import_react7.default.createElement("input", getInputProps()), import_react7.default.createElement(Instructions, null, isDragAccept ? "drop image" : "click or drop")), import_react7.default.createElement(Remove, {
    onClick: clear,
    disabled: !value
  })));
}
var image = createInternalPlugin(_objectSpread2({
  component: ImageComponent
}, props$12));
var number3 = v8n_esm_default().number();
var schema3 = (o9, s6) => v8n_esm_default().array().length(2).every.number().test(o9) && v8n_esm_default().schema({
  min: number3,
  max: number3
}).test(s6);
var format2 = (v5) => ({
  min: v5[0],
  max: v5[1]
});
var sanitize2 = (value, {
  bounds: [MIN, MAX]
}, prevValue) => {
  const _newValue = {
    min: prevValue[0],
    max: prevValue[1]
  };
  const {
    min,
    max
  } = _objectSpread2(_objectSpread2({}, _newValue), value);
  return [clamp(Number(min), MIN, Math.max(MIN, max)), clamp(Number(max), Math.min(MAX, min), MAX)];
};
var normalize2 = ({
  value,
  min,
  max
}) => {
  const boundsSettings = {
    min,
    max
  };
  const _settings = normalizeKeyedNumberSettings(format2(value), {
    min: boundsSettings,
    max: boundsSettings
  });
  const bounds = [min, max];
  const settings = _objectSpread2(_objectSpread2({}, _settings), {}, {
    bounds
  });
  const _value = sanitize2(format2(value), settings, value);
  return {
    value: _value,
    settings
  };
};
var props2 = Object.freeze({
  __proto__: null,
  schema: schema3,
  format: format2,
  sanitize: sanitize2,
  normalize: normalize2
});
var _excluded$62 = ["value", "bounds", "onDrag"];
var _excluded2$12 = ["bounds"];
var Container2 = styled("div", {
  display: "grid",
  columnGap: "$colGap",
  gridTemplateColumns: "auto calc($sizes$numberInputMinWidth * 2 + $space$rowGap)"
});
function IntervalSlider(_ref) {
  let {
    value,
    bounds: [min, max],
    onDrag
  } = _ref, settings = _objectWithoutProperties(_ref, _excluded$62);
  const ref = (0, import_react7.useRef)(null);
  const minScrubberRef = (0, import_react7.useRef)(null);
  const maxScrubberRef = (0, import_react7.useRef)(null);
  const rangeWidth = (0, import_react7.useRef)(0);
  const scrubberWidth = useTh("sizes", "scrubberWidth");
  const bind = useDrag2(({
    event,
    first: first2,
    xy: [x4],
    movement: [mx],
    memo: _memo = {}
  }) => {
    if (first2) {
      const {
        width,
        left
      } = ref.current.getBoundingClientRect();
      rangeWidth.current = width - parseFloat(scrubberWidth);
      const targetIsScrub = (event === null || event === void 0 ? void 0 : event.target) === minScrubberRef.current || (event === null || event === void 0 ? void 0 : event.target) === maxScrubberRef.current;
      _memo.pos = invertedRange((x4 - left) / width, min, max);
      const delta = Math.abs(_memo.pos - value.min) - Math.abs(_memo.pos - value.max);
      _memo.key = delta < 0 || delta === 0 && _memo.pos <= value.min ? "min" : "max";
      if (targetIsScrub)
        _memo.pos = value[_memo.key];
    }
    const newValue = _memo.pos + invertedRange(mx / rangeWidth.current, 0, max - min);
    onDrag({
      [_memo.key]: sanitizeStep(newValue, settings[_memo.key])
    });
    return _memo;
  });
  const minStyle = `calc(${range2(value.min, min, max)} * (100% - ${scrubberWidth} - 8px) + 4px)`;
  const maxStyle = `calc(${1 - range2(value.max, min, max)} * (100% - ${scrubberWidth} - 8px) + 4px)`;
  return import_react7.default.createElement(RangeWrapper, _extends2({
    ref
  }, bind()), import_react7.default.createElement(Range, null, import_react7.default.createElement(Indicator, {
    style: {
      left: minStyle,
      right: maxStyle
    }
  })), import_react7.default.createElement(Scrubber, {
    position: "left",
    ref: minScrubberRef,
    style: {
      left: minStyle
    }
  }), import_react7.default.createElement(Scrubber, {
    position: "right",
    ref: maxScrubberRef,
    style: {
      right: maxStyle
    }
  }));
}
function IntervalComponent() {
  const {
    label,
    displayValue,
    onUpdate,
    settings
  } = useInputContext();
  const _settings = _objectWithoutProperties(settings, _excluded2$12);
  return import_react7.default.createElement(import_react7.default.Fragment, null, import_react7.default.createElement(Row, {
    input: true
  }, import_react7.default.createElement(Label, null, label), import_react7.default.createElement(Container2, null, import_react7.default.createElement(IntervalSlider, _extends2({
    value: displayValue
  }, settings, {
    onDrag: onUpdate
  })), import_react7.default.createElement(Vector, {
    value: displayValue,
    settings: _settings,
    onUpdate,
    innerLabelTrim: 0
  }))));
}
var interval = createInternalPlugin(_objectSpread2({
  component: IntervalComponent
}, props2));
var createEventEmitter = () => {
  const listenerMapping = /* @__PURE__ */ new Map();
  return {
    on: (topic, listener) => {
      let listeners = listenerMapping.get(topic);
      if (listeners === void 0) {
        listeners = /* @__PURE__ */ new Set();
        listenerMapping.set(topic, listeners);
      }
      listeners.add(listener);
    },
    off: (topic, listener) => {
      const listeners = listenerMapping.get(topic);
      if (listeners === void 0) {
        return;
      }
      listeners.delete(listener);
      if (listeners.size === 0) {
        listenerMapping.delete(topic);
      }
    },
    emit: (topic, ...args) => {
      const listeners = listenerMapping.get(topic);
      if (listeners === void 0) {
        return;
      }
      for (const listener of listeners) {
        listener(...args);
      }
    }
  };
};
var _excluded$52 = ["type", "value"];
var _excluded23 = ["onChange", "transient", "onEditStart", "onEditEnd"];
var Store = function Store2() {
  const store = create(subscribeWithSelector(() => ({
    data: {}
  })));
  const eventEmitter = createEventEmitter();
  this.storeId = getUid();
  this.useStore = store;
  const folders = {};
  const orderedPaths = /* @__PURE__ */ new Set();
  this.getVisiblePaths = () => {
    const data = this.getData();
    const paths = Object.keys(data);
    const hiddenFolders = [];
    Object.entries(folders).forEach(([path, settings]) => {
      if (settings.render && paths.some((p5) => p5.indexOf(path) === 0) && !settings.render(this.get))
        hiddenFolders.push(path + ".");
    });
    const visiblePaths = [];
    orderedPaths.forEach((path) => {
      if (path in data && data[path].__refCount > 0 && hiddenFolders.every((p5) => path.indexOf(p5) === -1) && (!data[path].render || data[path].render(this.get)))
        visiblePaths.push(path);
    });
    return visiblePaths;
  };
  this.setOrderedPaths = (newPaths) => {
    newPaths.forEach((p5) => orderedPaths.add(p5));
  };
  this.orderPaths = (paths) => {
    this.setOrderedPaths(paths);
    return paths;
  };
  this.disposePaths = (paths) => {
    store.setState((s6) => {
      const data = s6.data;
      paths.forEach((path) => {
        if (path in data) {
          const input = data[path];
          input.__refCount--;
          if (input.__refCount === 0 && input.type in SpecialInputs) {
            delete data[path];
          }
        }
      });
      return {
        data
      };
    });
  };
  this.dispose = () => {
    store.setState(() => {
      return {
        data: {}
      };
    });
  };
  this.getFolderSettings = (path) => {
    return folders[path] || {};
  };
  this.getData = () => {
    return store.getState().data;
  };
  this.addData = (newData, override) => {
    store.setState((s6) => {
      const data = s6.data;
      Object.entries(newData).forEach(([path, newInputData]) => {
        let input = data[path];
        if (!!input) {
          const {
            type,
            value
          } = newInputData, rest2 = _objectWithoutProperties(newInputData, _excluded$52);
          if (type !== input.type) {
            warn(LevaErrors.INPUT_TYPE_OVERRIDE, type);
          } else {
            if (input.__refCount === 0 || override) {
              Object.assign(input, rest2);
            }
            input.__refCount++;
          }
        } else {
          data[path] = _objectSpread2(_objectSpread2({}, newInputData), {}, {
            __refCount: 1
          });
        }
      });
      return {
        data
      };
    });
  };
  this.setValueAtPath = (path, value, fromPanel) => {
    store.setState((s6) => {
      const data = s6.data;
      updateInput(data[path], value, path, this, fromPanel);
      return {
        data
      };
    });
  };
  this.setSettingsAtPath = (path, settings) => {
    store.setState((s6) => {
      const data = s6.data;
      data[path].settings = _objectSpread2(_objectSpread2({}, data[path].settings), settings);
      return {
        data
      };
    });
  };
  this.disableInputAtPath = (path, flag) => {
    store.setState((s6) => {
      const data = s6.data;
      data[path].disabled = flag;
      return {
        data
      };
    });
  };
  this.set = (values, fromPanel) => {
    store.setState((s6) => {
      const data = s6.data;
      Object.entries(values).forEach(([path, value]) => {
        try {
          updateInput(data[path], value, void 0, void 0, fromPanel);
        } catch (_unused) {
        }
      });
      return {
        data
      };
    });
  };
  this.getInput = (path) => {
    try {
      return this.getData()[path];
    } catch (e11) {
      warn(LevaErrors.PATH_DOESNT_EXIST, path);
    }
  };
  this.get = (path) => {
    var _this$getInput;
    return (_this$getInput = this.getInput(path)) === null || _this$getInput === void 0 ? void 0 : _this$getInput.value;
  };
  this.emitOnEditStart = (path) => {
    eventEmitter.emit(`onEditStart:${path}`, this.get(path), path, _objectSpread2(_objectSpread2({}, this.getInput(path)), {}, {
      get: this.get
    }));
  };
  this.emitOnEditEnd = (path) => {
    eventEmitter.emit(`onEditEnd:${path}`, this.get(path), path, _objectSpread2(_objectSpread2({}, this.getInput(path)), {}, {
      get: this.get
    }));
  };
  this.subscribeToEditStart = (path, listener) => {
    const _path = `onEditStart:${path}`;
    eventEmitter.on(_path, listener);
    return () => eventEmitter.off(_path, listener);
  };
  this.subscribeToEditEnd = (path, listener) => {
    const _path = `onEditEnd:${path}`;
    eventEmitter.on(_path, listener);
    return () => eventEmitter.off(_path, listener);
  };
  const _getDataFromSchema = (schema4, rootPath, mappedPaths) => {
    const data = {};
    Object.entries(schema4).forEach(([key, rawInput]) => {
      if (key === "")
        return warn(LevaErrors.EMPTY_KEY);
      let newPath = join(rootPath, key);
      if (rawInput.type === SpecialInputs.FOLDER) {
        const newData = _getDataFromSchema(rawInput.schema, newPath, mappedPaths);
        Object.assign(data, newData);
        if (!(newPath in folders))
          folders[newPath] = rawInput.settings;
      } else if (key in mappedPaths) {
        warn(LevaErrors.DUPLICATE_KEYS, key, newPath, mappedPaths[key].path);
      } else {
        const normalizedInput = normalizeInput(rawInput, key, newPath, data);
        if (normalizedInput) {
          const {
            type,
            options,
            input
          } = normalizedInput;
          const {
            onChange,
            transient,
            onEditStart,
            onEditEnd
          } = options, _options = _objectWithoutProperties(options, _excluded23);
          data[newPath] = _objectSpread2(_objectSpread2(_objectSpread2({
            type
          }, _options), input), {}, {
            fromPanel: true
          });
          mappedPaths[key] = {
            path: newPath,
            onChange,
            transient,
            onEditStart,
            onEditEnd
          };
        } else {
          warn(LevaErrors.UNKNOWN_INPUT, newPath, rawInput);
        }
      }
    });
    return data;
  };
  this.getDataFromSchema = (schema4) => {
    const mappedPaths = {};
    const data = _getDataFromSchema(schema4, "", mappedPaths);
    return [data, mappedPaths];
  };
};
var levaStore = new Store();
function useCreateStore() {
  return (0, import_react7.useMemo)(() => new Store(), []);
}
if (typeof window !== "undefined") {
  window.__STORE = levaStore;
}
var defaultSettings$2 = {
  collapsed: false
};
function folder(schema4, settings) {
  return {
    type: SpecialInputs.FOLDER,
    schema: schema4,
    settings: _objectSpread2(_objectSpread2({}, defaultSettings$2), settings)
  };
}
var defaultSettings$1 = {
  disabled: false
};
function button(onClick, settings) {
  return {
    type: SpecialInputs.BUTTON,
    onClick,
    settings: _objectSpread2(_objectSpread2({}, defaultSettings$1), settings)
  };
}
function buttonGroup(opts) {
  return {
    type: SpecialInputs.BUTTON_GROUP,
    opts
  };
}
var defaultSettings = {
  graph: false,
  interval: 100
};
function monitor(objectOrFn, settings) {
  return {
    type: SpecialInputs.MONITOR,
    objectOrFn,
    settings: _objectSpread2(_objectSpread2({}, defaultSettings), settings)
  };
}
var isInput2 = (v5) => "__levaInput" in v5;
var buildTree = (paths, filter) => {
  const tree = {};
  const _filter = filter ? filter.toLowerCase() : null;
  paths.forEach((path) => {
    const [valueKey, folderPath] = getKeyPath(path);
    if (!_filter || valueKey.toLowerCase().indexOf(_filter) > -1) {
      (0, import_merge_value.default)(tree, folderPath, {
        [valueKey]: {
          __levaInput: true,
          path
        }
      });
    }
  });
  return tree;
};
function FolderTitle({
  toggle,
  toggled,
  name
}) {
  return import_react7.default.createElement(StyledTitle, {
    onClick: () => toggle()
  }, import_react7.default.createElement(Chevron, {
    toggled
  }), import_react7.default.createElement("div", null, name));
}
var _excluded$42 = ["type", "label", "path", "valueKey", "value", "settings", "setValue", "disabled"];
function ControlInput(_ref) {
  let {
    type,
    label,
    path,
    valueKey,
    value,
    settings,
    setValue,
    disabled
  } = _ref, rest2 = _objectWithoutProperties(_ref, _excluded$42);
  const {
    displayValue,
    onChange,
    onUpdate
  } = useInputSetters({
    type,
    value,
    settings,
    setValue
  });
  const Input = Plugins[type].component;
  if (!Input) {
    warn(LevaErrors.NO_COMPONENT_FOR_TYPE, type, path);
    return null;
  }
  return import_react7.default.createElement(InputContext.Provider, {
    value: _objectSpread2({
      key: valueKey,
      path,
      id: "" + path,
      label,
      displayValue,
      value,
      onChange,
      onUpdate,
      settings,
      setValue,
      disabled
    }, rest2)
  }, import_react7.default.createElement(StyledInputWrapper$1, {
    disabled
  }, import_react7.default.createElement(Input, null)));
}
var StyledButton = styled("button", {
  display: "block",
  $reset: "",
  fontWeight: "$button",
  height: "$rowHeight",
  borderStyle: "none",
  borderRadius: "$sm",
  backgroundColor: "$elevation1",
  color: "$highlight1",
  "&:not(:disabled)": {
    color: "$highlight3",
    backgroundColor: "$accent2",
    cursor: "pointer",
    $hover: "$accent3",
    $active: "$accent3 $accent1",
    $focus: ""
  }
});
function Button({
  onClick,
  settings,
  label
}) {
  const store = useStoreContext();
  return import_react7.default.createElement(Row, null, import_react7.default.createElement(StyledButton, {
    disabled: settings.disabled,
    onClick: () => onClick(store.get)
  }, label));
}
var StyledButtonGroup = styled("div", {
  $flex: "",
  justifyContent: "flex-end",
  gap: "$colGap"
});
var StyledButtonGroupButton = styled("button", {
  $reset: "",
  cursor: "pointer",
  borderRadius: "$xs",
  "&:hover": {
    backgroundColor: "$elevation3"
  }
});
var getOpts = ({
  label: _label,
  opts: _opts
}) => {
  let label = typeof _label === "string" ? _label.trim() === "" ? null : _label : _label;
  let opts = _opts;
  if (typeof _opts.opts === "object") {
    if (opts.label !== void 0) {
      label = _opts.label;
    }
    opts = _opts.opts;
  }
  return {
    label,
    opts
  };
};
function ButtonGroup(props3) {
  const {
    label,
    opts
  } = getOpts(props3);
  const store = useStoreContext();
  return import_react7.default.createElement(Row, {
    input: !!label
  }, label && import_react7.default.createElement(Label, null, label), import_react7.default.createElement(StyledButtonGroup, null, Object.entries(opts).map(([label2, onClick]) => import_react7.default.createElement(StyledButtonGroupButton, {
    key: label2,
    onClick: () => onClick(store.get)
  }, label2))));
}
var Canvas = styled("canvas", {
  height: "$monitorHeight",
  width: "100%",
  display: "block",
  borderRadius: "$sm"
});
var POINTS = 100;
function push(arr, val) {
  arr.push(val);
  if (arr.length > POINTS)
    arr.shift();
}
var MonitorCanvas = (0, import_react7.forwardRef)(function({
  initialValue
}, ref) {
  const accentColor = useTh("colors", "highlight3");
  const backgroundColor = useTh("colors", "elevation2");
  const fillColor = useTh("colors", "highlight1");
  const [gradientTop, gradientBottom] = (0, import_react7.useMemo)(() => {
    return [w3(fillColor).alpha(0.4).toRgbString(), w3(fillColor).alpha(0.1).toRgbString()];
  }, [fillColor]);
  const points = (0, import_react7.useRef)([initialValue]);
  const min = (0, import_react7.useRef)(initialValue);
  const max = (0, import_react7.useRef)(initialValue);
  const raf = (0, import_react7.useRef)();
  const drawPlot = (0, import_react7.useCallback)((_canvas, _ctx) => {
    if (!_canvas)
      return;
    const {
      width,
      height
    } = _canvas;
    const path = new Path2D();
    const interval2 = width / POINTS;
    const verticalPadding = height * 0.05;
    for (let i6 = 0; i6 < points.current.length; i6++) {
      const p5 = range2(points.current[i6], min.current, max.current);
      const x4 = interval2 * i6;
      const y5 = height - p5 * (height - verticalPadding * 2) - verticalPadding;
      path.lineTo(x4, y5);
    }
    _ctx.clearRect(0, 0, width, height);
    const gradientPath = new Path2D(path);
    gradientPath.lineTo(interval2 * (points.current.length + 1), height);
    gradientPath.lineTo(0, height);
    gradientPath.lineTo(0, 0);
    const gradient = _ctx.createLinearGradient(0, 0, 0, height);
    gradient.addColorStop(0, gradientTop);
    gradient.addColorStop(1, gradientBottom);
    _ctx.fillStyle = gradient;
    _ctx.fill(gradientPath);
    _ctx.strokeStyle = backgroundColor;
    _ctx.lineJoin = "round";
    _ctx.lineWidth = 14;
    _ctx.stroke(path);
    _ctx.strokeStyle = accentColor;
    _ctx.lineWidth = 2;
    _ctx.stroke(path);
  }, [accentColor, backgroundColor, gradientTop, gradientBottom]);
  const [canvas, ctx] = useCanvas2d(drawPlot);
  (0, import_react7.useImperativeHandle)(ref, () => ({
    frame: (val) => {
      if (min.current === void 0 || val < min.current)
        min.current = val;
      if (max.current === void 0 || val > max.current)
        max.current = val;
      push(points.current, val);
      raf.current = requestAnimationFrame(() => drawPlot(canvas.current, ctx.current));
    }
  }), [canvas, ctx, drawPlot]);
  (0, import_react7.useEffect)(() => () => cancelAnimationFrame(raf.current), []);
  return import_react7.default.createElement(Canvas, {
    ref: canvas
  });
});
var parse = (val) => Number.isFinite(val) ? val.toPrecision(2) : val.toString();
var MonitorLog = (0, import_react7.forwardRef)(function({
  initialValue
}, ref) {
  const [val, set] = (0, import_react7.useState)(parse(initialValue));
  (0, import_react7.useImperativeHandle)(ref, () => ({
    frame: (v5) => set(parse(v5))
  }), []);
  return import_react7.default.createElement("div", null, val);
});
function getValue(o9) {
  return typeof o9 === "function" ? o9() : o9.current;
}
function Monitor({
  label,
  objectOrFn,
  settings
}) {
  const ref = (0, import_react7.useRef)();
  const initialValue = (0, import_react7.useRef)(getValue(objectOrFn));
  (0, import_react7.useEffect)(() => {
    const timeout = window.setInterval(() => {
      var _ref$current;
      if (document.hidden)
        return;
      (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.frame(getValue(objectOrFn));
    }, settings.interval);
    return () => window.clearInterval(timeout);
  }, [objectOrFn, settings.interval]);
  return import_react7.default.createElement(Row, {
    input: true
  }, import_react7.default.createElement(Label, {
    align: "top"
  }, label), settings.graph ? import_react7.default.createElement(MonitorCanvas, {
    ref,
    initialValue: initialValue.current
  }) : import_react7.default.createElement(MonitorLog, {
    ref,
    initialValue: initialValue.current
  }));
}
var _excluded$32 = ["type", "label", "key"];
var specialComponents = {
  [SpecialInputs.BUTTON]: Button,
  [SpecialInputs.BUTTON_GROUP]: ButtonGroup,
  [SpecialInputs.MONITOR]: Monitor
};
var Control = import_react7.default.memo(({
  path
}) => {
  const [input, {
    set,
    setSettings,
    disable,
    storeId,
    emitOnEditStart,
    emitOnEditEnd
  }] = useInput(path);
  if (!input)
    return null;
  const {
    type,
    label,
    key
  } = input, inputProps = _objectWithoutProperties(input, _excluded$32);
  if (type in SpecialInputs) {
    const SpecialInputForType = specialComponents[type];
    return import_react7.default.createElement(SpecialInputForType, _extends2({
      label,
      path
    }, inputProps));
  }
  if (!(type in Plugins)) {
    log(LevaErrors.UNSUPPORTED_INPUT, type, path);
    return null;
  }
  return import_react7.default.createElement(ControlInput, _extends2({
    key: storeId + path,
    type,
    label,
    storeId,
    path,
    valueKey: key,
    setValue: set,
    setSettings,
    disable,
    emitOnEditStart,
    emitOnEditEnd
  }, inputProps));
});
var Folder = ({
  name,
  path,
  tree
}) => {
  const store = useStoreContext();
  const newPath = join(path, name);
  const {
    collapsed,
    color: color2
  } = store.getFolderSettings(newPath);
  const [toggled, setToggle] = (0, import_react7.useState)(!collapsed);
  const folderRef = (0, import_react7.useRef)(null);
  const widgetColor = useTh("colors", "folderWidgetColor");
  const textColor = useTh("colors", "folderTextColor");
  (0, import_react7.useLayoutEffect)(() => {
    folderRef.current.style.setProperty("--leva-colors-folderWidgetColor", color2 || widgetColor);
    folderRef.current.style.setProperty("--leva-colors-folderTextColor", color2 || textColor);
  }, [color2, widgetColor, textColor]);
  return import_react7.default.createElement(StyledFolder, {
    ref: folderRef
  }, import_react7.default.createElement(FolderTitle, {
    name,
    toggled,
    toggle: () => setToggle((t12) => !t12)
  }), import_react7.default.createElement(TreeWrapper, {
    parent: newPath,
    tree,
    toggled
  }));
};
var TreeWrapper = import_react7.default.memo(({
  isRoot: _isRoot = false,
  fill: _fill = false,
  flat: _flat = false,
  parent,
  tree,
  toggled
}) => {
  const {
    wrapperRef,
    contentRef
  } = useToggle(toggled);
  return import_react7.default.createElement(StyledWrapper, {
    ref: wrapperRef,
    isRoot: _isRoot,
    fill: _fill,
    flat: _flat
  }, import_react7.default.createElement(StyledContent, {
    ref: contentRef,
    isRoot: _isRoot,
    toggled
  }, Object.entries(tree).map(([key, value]) => isInput2(value) ? import_react7.default.createElement(Control, {
    key: value.path,
    valueKey: value.valueKey,
    path: value.path
  }) : import_react7.default.createElement(Folder, {
    key,
    name: key,
    path: parent,
    tree: value
  }))));
});
var StyledRoot = styled("div", {
  position: "relative",
  fontFamily: "$mono",
  fontSize: "$root",
  color: "$rootText",
  backgroundColor: "$elevation1",
  variants: {
    fill: {
      false: {
        position: "fixed",
        top: "10px",
        right: "10px",
        zIndex: 1e3,
        width: "$rootWidth"
      },
      true: {
        position: "relative",
        width: "100%"
      }
    },
    flat: {
      false: {
        borderRadius: "$lg",
        boxShadow: "$level1"
      }
    },
    oneLineLabels: {
      true: {
        [`${StyledInputRow}`]: {
          gridTemplateColumns: "auto",
          gridAutoColumns: "minmax(max-content, 1fr)",
          gridAutoRows: "minmax($sizes$rowHeight), auto)",
          rowGap: 0,
          columnGap: 0,
          marginTop: "$rowGap"
        }
      }
    },
    hideTitleBar: {
      true: {
        $$titleBarHeight: "0px"
      },
      false: {
        $$titleBarHeight: "$sizes$titleBarHeight"
      }
    }
  },
  "&,*,*:after,*:before": {
    boxSizing: "border-box"
  },
  "*::selection": {
    backgroundColor: "$accent2"
  }
});
var iconWidth = 40;
var Icon = styled("i", {
  $flexCenter: "",
  width: iconWidth,
  userSelect: "none",
  cursor: "pointer",
  "> svg": {
    fill: "$highlight1",
    transition: "transform 350ms ease, fill 250ms ease"
  },
  "&:hover > svg": {
    fill: "$highlight3"
  },
  variants: {
    active: {
      true: {
        "> svg": {
          fill: "$highlight2"
        }
      }
    }
  }
});
var StyledTitleWithFilter = styled("div", {
  display: "flex",
  alignItems: "stretch",
  justifyContent: "space-between",
  height: "$titleBarHeight",
  variants: {
    mode: {
      drag: {
        cursor: "grab"
      }
    }
  }
});
var FilterWrapper = styled("div", {
  $flex: "",
  position: "relative",
  width: "100%",
  overflow: "hidden",
  transition: "height 250ms ease",
  color: "$highlight3",
  paddingLeft: "$md",
  [`> ${Icon}`]: {
    height: 30
  },
  variants: {
    toggled: {
      true: {
        height: 30
      },
      false: {
        height: 0
      }
    }
  }
});
var StyledFilterInput = styled("input", {
  $reset: "",
  flex: 1,
  position: "relative",
  height: 30,
  width: "100%",
  backgroundColor: "transparent",
  fontSize: "10px",
  borderRadius: "$root",
  "&:focus": {},
  "&::placeholder": {
    color: "$highlight2"
  }
});
var TitleContainer = styled("div", {
  touchAction: "none",
  $flexCenter: "",
  flex: 1,
  "> svg": {
    fill: "$highlight1"
  },
  color: "$highlight1",
  variants: {
    drag: {
      true: {
        $draggable: "",
        "> svg": {
          transition: "fill 250ms ease"
        },
        "&:hover": {
          color: "$highlight3"
        },
        "&:hover > svg": {
          fill: "$highlight3"
        }
      }
    },
    filterEnabled: {
      false: {
        paddingRight: iconWidth
      }
    }
  }
});
var FilterInput = import_react7.default.forwardRef(({
  setFilter,
  toggle
}, ref) => {
  const [value, set] = (0, import_react7.useState)("");
  const debouncedOnChange = (0, import_react7.useMemo)(() => debounce(setFilter, 250), [setFilter]);
  const clear = () => {
    setFilter("");
    set("");
  };
  const _onChange = (e11) => {
    const v5 = e11.currentTarget.value;
    toggle(true);
    set(v5);
  };
  (0, import_react7.useEffect)(() => {
    debouncedOnChange(value);
  }, [value, debouncedOnChange]);
  return import_react7.default.createElement(import_react7.default.Fragment, null, import_react7.default.createElement(StyledFilterInput, {
    ref,
    value,
    placeholder: "[Open filter with CMD+SHIFT+L]",
    onPointerDown: (e11) => e11.stopPropagation(),
    onChange: _onChange
  }), import_react7.default.createElement(Icon, {
    onClick: () => clear(),
    style: {
      visibility: value ? "visible" : "hidden"
    }
  }, import_react7.default.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    height: "14",
    width: "14",
    viewBox: "0 0 20 20",
    fill: "currentColor"
  }, import_react7.default.createElement("path", {
    fillRule: "evenodd",
    d: "M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z",
    clipRule: "evenodd"
  }))));
});
function TitleWithFilter({
  setFilter,
  onDrag,
  toggle,
  toggled,
  title,
  drag,
  filterEnabled
}) {
  const [filterShown, setShowFilter] = (0, import_react7.useState)(false);
  const inputRef = (0, import_react7.useRef)(null);
  (0, import_react7.useEffect)(() => {
    var _inputRef$current, _inputRef$current2;
    if (filterShown)
      (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();
    else
      (_inputRef$current2 = inputRef.current) === null || _inputRef$current2 === void 0 ? void 0 : _inputRef$current2.blur();
  }, [filterShown]);
  const bind = useDrag(({
    offset: [x4, y5]
  }) => onDrag({
    x: x4,
    y: y5
  }), {
    filterTaps: true
  });
  (0, import_react7.useEffect)(() => {
    const handleShortcut = (event) => {
      if (event.key === "L" && event.shiftKey && event.metaKey) {
        setShowFilter((f5) => !f5);
      }
    };
    window.addEventListener("keydown", handleShortcut);
    return () => window.removeEventListener("keydown", handleShortcut);
  }, []);
  return import_react7.default.createElement(import_react7.default.Fragment, null, import_react7.default.createElement(StyledTitleWithFilter, {
    mode: drag ? "drag" : void 0
  }, import_react7.default.createElement(Icon, {
    active: !toggled,
    onClick: () => toggle()
  }, import_react7.default.createElement(Chevron, {
    toggled,
    width: 12,
    height: 8
  })), import_react7.default.createElement(TitleContainer, _extends2({}, drag ? bind() : {}, {
    drag,
    filterEnabled
  }), title === void 0 && drag ? import_react7.default.createElement("svg", {
    width: "20",
    height: "10",
    viewBox: "0 0 28 14",
    xmlns: "http://www.w3.org/2000/svg"
  }, import_react7.default.createElement("circle", {
    cx: "2",
    cy: "2",
    r: "2"
  }), import_react7.default.createElement("circle", {
    cx: "14",
    cy: "2",
    r: "2"
  }), import_react7.default.createElement("circle", {
    cx: "26",
    cy: "2",
    r: "2"
  }), import_react7.default.createElement("circle", {
    cx: "2",
    cy: "12",
    r: "2"
  }), import_react7.default.createElement("circle", {
    cx: "14",
    cy: "12",
    r: "2"
  }), import_react7.default.createElement("circle", {
    cx: "26",
    cy: "12",
    r: "2"
  })) : title), filterEnabled && import_react7.default.createElement(Icon, {
    active: filterShown,
    onClick: () => setShowFilter((f5) => !f5)
  }, import_react7.default.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    height: "20",
    viewBox: "0 0 20 20"
  }, import_react7.default.createElement("path", {
    d: "M9 9a2 2 0 114 0 2 2 0 01-4 0z"
  }), import_react7.default.createElement("path", {
    fillRule: "evenodd",
    d: "M10 18a8 8 0 100-16 8 8 0 000 16zm1-13a4 4 0 00-3.446 6.032l-2.261 2.26a1 1 0 101.414 1.415l2.261-2.261A4 4 0 1011 5z",
    clipRule: "evenodd"
  })))), import_react7.default.createElement(FilterWrapper, {
    toggled: filterShown
  }, import_react7.default.createElement(FilterInput, {
    ref: inputRef,
    setFilter,
    toggle
  })));
}
var _excluded$22 = ["store", "hidden", "theme", "collapsed"];
function LevaRoot(_ref) {
  let {
    store,
    hidden = false,
    theme,
    collapsed = false
  } = _ref, props3 = _objectWithoutProperties(_ref, _excluded$22);
  const themeContext = useDeepMemo(() => mergeTheme(theme), [theme]);
  const [toggled, setToggle] = (0, import_react7.useState)(!collapsed);
  const computedToggled = typeof collapsed === "object" ? !collapsed.collapsed : toggled;
  const computedSetToggle = (0, import_react7.useMemo)(() => {
    if (typeof collapsed === "object") {
      return (value) => {
        if (typeof value === "function") {
          collapsed.onChange(!value(!collapsed.collapsed));
        } else {
          collapsed.onChange(!value);
        }
      };
    }
    return setToggle;
  }, [collapsed]);
  if (!store || hidden)
    return null;
  return import_react7.default.createElement(ThemeContext.Provider, {
    value: themeContext
  }, import_react7.default.createElement(LevaCore, _extends2({
    store
  }, props3, {
    toggled: computedToggled,
    setToggle: computedSetToggle,
    rootClass: themeContext.className
  })));
}
var LevaCore = import_react7.default.memo(({
  store,
  rootClass,
  fill: _fill = false,
  flat: _flat = false,
  oneLineLabels: _oneLineLabels = false,
  titleBar: _titleBar = {
    title: void 0,
    drag: true,
    filter: true
  },
  hideCopyButton: _hideCopyButton = false,
  toggled,
  setToggle
}) => {
  var _titleBar$drag, _titleBar$filter;
  const paths = useVisiblePaths(store);
  const [filter, setFilter] = (0, import_react7.useState)("");
  const tree = (0, import_react7.useMemo)(() => buildTree(paths, filter), [paths, filter]);
  const [rootRef, set] = useTransform();
  const shouldShow = paths.length > 0;
  const title = typeof _titleBar === "object" ? _titleBar.title || void 0 : void 0;
  const drag = typeof _titleBar === "object" ? (_titleBar$drag = _titleBar.drag) !== null && _titleBar$drag !== void 0 ? _titleBar$drag : true : true;
  const filterEnabled = typeof _titleBar === "object" ? (_titleBar$filter = _titleBar.filter) !== null && _titleBar$filter !== void 0 ? _titleBar$filter : true : true;
  return import_react7.default.createElement(PanelSettingsContext.Provider, {
    value: {
      hideCopyButton: _hideCopyButton
    }
  }, import_react7.default.createElement(StyledRoot, {
    ref: rootRef,
    className: rootClass,
    fill: _fill,
    flat: _flat,
    oneLineLabels: _oneLineLabels,
    hideTitleBar: !_titleBar,
    style: {
      display: shouldShow ? "block" : "none"
    }
  }, _titleBar && import_react7.default.createElement(TitleWithFilter, {
    onDrag: set,
    setFilter,
    toggle: (flag) => setToggle((t12) => flag !== null && flag !== void 0 ? flag : !t12),
    toggled,
    title,
    drag,
    filterEnabled
  }), shouldShow && import_react7.default.createElement(StoreContext.Provider, {
    value: store
  }, import_react7.default.createElement(TreeWrapper, {
    isRoot: true,
    fill: _fill,
    flat: _flat,
    tree,
    toggled
  }))));
});
var _excluded$12 = ["isRoot"];
var rootInitialized = false;
var rootEl = null;
function Leva(_ref) {
  let {
    isRoot = false
  } = _ref, props3 = _objectWithoutProperties(_ref, _excluded$12);
  (0, import_react7.useEffect)(() => {
    rootInitialized = true;
    if (!isRoot && rootEl) {
      rootEl.remove();
      rootEl = null;
    }
    return () => {
      if (!isRoot)
        rootInitialized = false;
    };
  }, [isRoot]);
  return import_react7.default.createElement(LevaRoot, _extends2({
    store: levaStore
  }, props3));
}
function useRenderRoot(isGlobalPanel) {
  (0, import_react7.useEffect)(() => {
    if (isGlobalPanel && !rootInitialized) {
      if (!rootEl) {
        rootEl = document.getElementById("leva__root") || Object.assign(document.createElement("div"), {
          id: "leva__root"
        });
        if (document.body) {
          document.body.appendChild(rootEl);
          import_react_dom2.default.render(import_react7.default.createElement(Leva, {
            isRoot: true
          }), rootEl);
        }
      }
      rootInitialized = true;
    }
  }, [isGlobalPanel]);
}
var _excluded5 = ["store"];
function LevaPanel(_ref) {
  let {
    store
  } = _ref, props3 = _objectWithoutProperties(_ref, _excluded5);
  const parentStore = useStoreContext();
  const _store = store === void 0 ? parentStore : store;
  return import_react7.default.createElement(LevaRoot, _extends2({
    store: _store
  }, props3));
}
function parseArgs(schemaOrFolderName, settingsOrDepsOrSchema, depsOrSettingsOrFolderSettings, depsOrSettings, depsOrUndefined) {
  let schema4;
  let folderName = void 0;
  let folderSettings;
  let hookSettings;
  let deps;
  if (typeof schemaOrFolderName === "string") {
    folderName = schemaOrFolderName;
    schema4 = settingsOrDepsOrSchema;
    if (Array.isArray(depsOrSettingsOrFolderSettings)) {
      deps = depsOrSettingsOrFolderSettings;
    } else {
      if (depsOrSettingsOrFolderSettings) {
        if ("store" in depsOrSettingsOrFolderSettings) {
          hookSettings = depsOrSettingsOrFolderSettings;
          deps = depsOrSettings;
        } else {
          folderSettings = depsOrSettingsOrFolderSettings;
          if (Array.isArray(depsOrSettings)) {
            deps = depsOrSettings;
          } else {
            hookSettings = depsOrSettings;
            deps = depsOrUndefined;
          }
        }
      }
    }
  } else {
    schema4 = schemaOrFolderName;
    if (Array.isArray(settingsOrDepsOrSchema)) {
      deps = settingsOrDepsOrSchema;
    } else {
      hookSettings = settingsOrDepsOrSchema;
      deps = depsOrSettingsOrFolderSettings;
    }
  }
  return {
    schema: schema4,
    folderName,
    folderSettings,
    hookSettings,
    deps: deps || []
  };
}
function useControls(schemaOrFolderName, settingsOrDepsOrSchema, depsOrSettingsOrFolderSettings, depsOrSettings, depsOrUndefined) {
  const {
    folderName,
    schema: schema4,
    folderSettings,
    hookSettings,
    deps
  } = parseArgs(schemaOrFolderName, settingsOrDepsOrSchema, depsOrSettingsOrFolderSettings, depsOrSettings, depsOrUndefined);
  const schemaIsFunction = typeof schema4 === "function";
  const depsChanged = (0, import_react7.useRef)(false);
  const firstRender = (0, import_react7.useRef)(true);
  const _schema = useDeepMemo(() => {
    depsChanged.current = true;
    const s6 = typeof schema4 === "function" ? schema4() : schema4;
    return folderName ? {
      [folderName]: folder(s6, folderSettings)
    } : s6;
  }, deps);
  const isGlobalPanel = !(hookSettings !== null && hookSettings !== void 0 && hookSettings.store);
  useRenderRoot(isGlobalPanel);
  const [store] = (0, import_react7.useState)(() => (hookSettings === null || hookSettings === void 0 ? void 0 : hookSettings.store) || levaStore);
  const [initialData, mappedPaths] = (0, import_react7.useMemo)(() => store.getDataFromSchema(_schema), [store, _schema]);
  const [allPaths, renderPaths, onChangePaths, onEditStartPaths, onEditEndPaths] = (0, import_react7.useMemo)(() => {
    const allPaths2 = [];
    const renderPaths2 = [];
    const onChangePaths2 = {};
    const onEditStartPaths2 = {};
    const onEditEndPaths2 = {};
    Object.values(mappedPaths).forEach(({
      path,
      onChange,
      onEditStart,
      onEditEnd,
      transient
    }) => {
      allPaths2.push(path);
      if (!!onChange) {
        onChangePaths2[path] = onChange;
        if (!transient) {
          renderPaths2.push(path);
        }
      } else {
        renderPaths2.push(path);
      }
      if (onEditStart) {
        onEditStartPaths2[path] = onEditStart;
      }
      if (onEditEnd) {
        onEditEndPaths2[path] = onEditEnd;
      }
    });
    return [allPaths2, renderPaths2, onChangePaths2, onEditStartPaths2, onEditEndPaths2];
  }, [mappedPaths]);
  const paths = (0, import_react7.useMemo)(() => store.orderPaths(allPaths), [allPaths, store]);
  const values = useValuesForPath(store, renderPaths, initialData);
  const set = (0, import_react7.useCallback)((values2) => {
    const _values = Object.entries(values2).reduce((acc, [p5, v5]) => Object.assign(acc, {
      [mappedPaths[p5].path]: v5
    }), {});
    store.set(_values, false);
  }, [store, mappedPaths]);
  (0, import_react7.useEffect)(() => {
    const shouldOverrideSettings = !firstRender.current && depsChanged.current;
    store.addData(initialData, shouldOverrideSettings);
    firstRender.current = false;
    depsChanged.current = false;
    return () => store.disposePaths(paths);
  }, [store, paths, initialData]);
  (0, import_react7.useEffect)(() => {
    const unsubscriptions = [];
    Object.entries(onChangePaths).forEach(([path, onChange]) => {
      onChange(store.get(path), path, _objectSpread2({
        initial: true,
        get: store.get
      }, store.getInput(path)));
      const unsub = store.useStore.subscribe((s6) => {
        const input = s6.data[path];
        const value = input.disabled ? void 0 : input.value;
        return [value, input];
      }, ([value, input]) => onChange(value, path, _objectSpread2({
        initial: false,
        get: store.get
      }, input)), {
        equalityFn: shallow
      });
      unsubscriptions.push(unsub);
    });
    return () => unsubscriptions.forEach((unsub) => unsub());
  }, [store, onChangePaths]);
  (0, import_react7.useEffect)(() => {
    const unsubscriptions = [];
    Object.entries(onEditStartPaths).forEach(([path, onEditStart]) => unsubscriptions.push(store.subscribeToEditStart(path, onEditStart)));
    Object.entries(onEditEndPaths).forEach(([path, onEditEnd]) => unsubscriptions.push(store.subscribeToEditEnd(path, onEditEnd)));
    return () => unsubscriptions.forEach((unsub) => unsub());
  }, [onEditStartPaths, onEditEndPaths, store]);
  if (schemaIsFunction)
    return [values, set];
  return values;
}
register(LevaInputs.SELECT, select);
register(LevaInputs.IMAGE, image);
register(LevaInputs.NUMBER, number2);
register(LevaInputs.COLOR, color);
register(LevaInputs.STRING, string2);
register(LevaInputs.BOOLEAN, boolean2);
register(LevaInputs.INTERVAL, interval);
register(LevaInputs.VECTOR3D, vector3d);
register(LevaInputs.VECTOR2D, vector2d);
export {
  Leva,
  LevaInputs,
  LevaPanel,
  LevaStoreProvider,
  button,
  buttonGroup,
  folder,
  levaStore,
  monitor,
  useControls,
  useCreateStore,
  useStoreContext
};
/*!
 * assign-symbols <https://github.com/jonschlinkert/assign-symbols>
 *
 * Copyright (c) 2015, Jon Schlinkert.
 * Licensed under the MIT License.
 */
/*!
 * for-in <https://github.com/jonschlinkert/for-in>
 *
 * Copyright (c) 2014-2017, Jon Schlinkert.
 * Released under the MIT License.
 */
/*!
 * get-value <https://github.com/jonschlinkert/get-value>
 *
 * Copyright (c) 2014-2015, Jon Schlinkert.
 * Licensed under the MIT License.
 */
/*!
 * is-extendable <https://github.com/jonschlinkert/is-extendable>
 *
 * Copyright (c) 2015, Jon Schlinkert.
 * Licensed under the MIT License.
 */
/*!
 * is-extendable <https://github.com/jonschlinkert/is-extendable>
 *
 * Copyright (c) 2015-2017, Jon Schlinkert.
 * Released under the MIT License.
 */
/*!
 * is-plain-object <https://github.com/jonschlinkert/is-plain-object>
 *
 * Copyright (c) 2014-2017, Jon Schlinkert.
 * Released under the MIT License.
 */
/*!
 * isobject <https://github.com/jonschlinkert/isobject>
 *
 * Copyright (c) 2014-2017, Jon Schlinkert.
 * Released under the MIT License.
 */
/*!
 * set-value <https://github.com/jonschlinkert/set-value>
 *
 * Copyright (c) 2014-2015, 2017, Jon Schlinkert.
 * Released under the MIT License.
 */
/*!
 * split-string <https://github.com/jonschlinkert/split-string>
 *
 * Copyright (c) 2015-2017, Jon Schlinkert.
 * Released under the MIT License.
 */
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
//# sourceMappingURL=leva.js.map
